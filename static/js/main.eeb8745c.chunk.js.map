{"version":3,"sources":["assets/images/pizza_cheese.jpg","assets/images/pizza_supreme.png","assets/images/topping_GreenBellPepper_ML_reg.png","assets/images/pizza_meat_lovers.png","assets/images/alarm-clock.png","assets/images/crust_ht_NoFinish.png","assets/images/icon_crust_ht.png","assets/images/crust_thin_NoFinish.png","assets/images/icon_crust_thin.png","assets/images/crust_pan_NoFinish.png","assets/images/icon_crust_pan.png","assets/images/topping_Pepperoni_ML_reg.png","assets/images/topping_Pepperoni_ML_extra.png","assets/images/icon_topping_Pepperoni.png","assets/images/topping_ItalianSausage_ML_reg.png","assets/images/topping_ItalianSausage_ML_extra.png","assets/images/icon_topping_ItalianSausage.png","assets/images/topping_Ham_ML_reg.png","assets/images/topping_Ham_ML_extra.png","assets/images/icon_topping_Ham.png","assets/images/topping_Bacon_ML_reg.png","assets/images/topping_Bacon_ML_extra.png","assets/images/icon_topping_Bacon.png","assets/images/topping_Chicken_ML_reg.png","assets/images/topping_Chicken_ML_extra.png","assets/images/icon_topping_Chicken.png","assets/images/topping_Beef_ML_reg.png","assets/images/topping_Beef_ML_extra.png","assets/images/icon_topping_Beef.png","assets/images/topping_Pork_ML_reg.png","assets/images/topping_Pork_ML_extra.png","assets/images/icon_topping_Pork.png","assets/images/topping_Mushroom_ML_reg.png","assets/images/topping_Mushroom_ML_extra.png","assets/images/icon_topping_Mushroom.png","assets/images/topping_Spinach_Fresh_ML_reg.png","assets/images/topping_Spinach_Fresh_ML_extra.png","assets/images/icon_topping_Spinach_fresh.png","assets/images/topping_Onion_red_ML_reg.png","assets/images/topping_Onion_red_ML_extra.png","assets/images/icon_topping_Onion_Red.png","assets/images/topping_Olives_black_ML_reg.png","assets/images/topping_Olives_black_ML_extra.png","assets/images/icon_topping_Olive_black.png","assets/images/icon_topping_GreenBellPepper.png","assets/images/topping_BananaPepper_ML_reg.png","assets/images/topping_BananaPepper_ML_extra.png","assets/images/icon_topping_BananaPepper.png","assets/images/topping_Pineapple_ML_reg.png","assets/images/topping_Pineapple_ML_extra.png","assets/images/icon_topping_Pineapple.png","assets/images/topping_Jalepeno_ML_reg.png","assets/images/topping_Jalepeno_ML_extra.png","assets/images/icon_topping_Jalapeno.png","assets/images/topping_Tomato_ML_reg.png","assets/images/topping_Tomato_ML_extra.png","assets/images/icon_topping_Tomato.png","assets/images/icon_sauce_Marinara.png","assets/images/icon_sauce_CreamyGarlicParm.png","assets/images/icon_sauce_BBQ.png","assets/images/icon_sauce_Buffalo.png","assets/images/crust_ht_GarlicButteryBlend.png","assets/images/crust_thin_GarlicButteryBlend.png","assets/images/crust_pan_GarlicButteryBlend.png","assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png","assets/images/crust_ht_ToastedParmesan.png","assets/images/crust_thin_ToastedParmesan.png","assets/images/crust_pan_ToastedParmesan.png","assets/images/icon_finisher_ToastedParm_whole_2017.png","assets/images/icon_finisher_none_whole_2017.png","assets/images/pizza_pepperoni.jpg","assets/images/pizza_Pepperoni_Lovers.png","assets/images/pizza_Veggie_Lovers.png","assets/images/pizza_Ultimate_Cheese_Lovers.png","assets/images/pizza_Hawaiian_Chicken.png","assets/images/pizza_Chicken_Bacon_Parmesan.png","assets/images/pizza_Backyard_BBQ_Chicken.png","assets/images/pizza_Buffalo_Chicken.png","assets/images/cheese_mozz_ML.png","components/UI/NavigationItem/NavigationItem.js","components/MenuItems/PizzaMenuItems/PizzaMenuItems.js","store/ui/uiActions.js","store/ui/uiActionTypes.js","components/MenuItems/AccountMenuItems/AccountMenuItems.js","components/UI/Button/Button.js","components/UI/DropdownAlert/DropdownAlert.js","components/CartIcon/CartIcon.js","containers/Header/Header.js","components/Layout/Footer/Footer.js","components/Layout/Layout/Layout.js","components/UI/Dropdown/Dropdown.js","metadata/crustMetadata.js","metadata/sizeMetadata.js","metadata/meatMetadata.js","metadata/veggiesMetadata.js","metadata/pizzaProperties.js","metadata/cheeseMetadata.js","metadata/sauceMetadata.js","metadata/crustFlavorMetadata.js","metadata/comboMetadata.js","store/pizzaBuilder/pizzaBuilderActions.js","store/pizzaBuilder/pizzaBuilderActionTypes.js","axiosFirebase.js","shared/secureStorage.js","store/cart/cartActions.js","store/cart/cartActionTypes.js","store/ui/actionDisplays.js","metadata/priceMappings.js","shared/util.js","containers/PizzaBox/PizzaBox.js","components/Messages/OrderSubmissionMessage/OrderSubmissionMessage.js","components/Messages/SignedOutMessage/SignedOutMessage.js","components/Messages/SignedUpMessage/SignedUpMessage.js","components/UI/Message/Message.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler.js","components/PizzaCategories/Home/Home.js","components/PizzaCategories/Meats/Meats.js","components/PizzaCategories/Veggies/Veggies.js","components/PizzaCategories/Chicken/Chicken.js","components/PizzaPreview/PizzaPreview.js","components/PizzaBuilder/PizzaBuilderPreview/PizzaBuilderPreview.js","components/PizzaDescription/PizzaDescription.js","components/PizzaBuilder/PizzaDetails/PizzaDetails.js","components/PizzaBuilder/PizzaBuilderProgress/PizzaBuilderProgress.js","components/PizzaBuilder/BuilderOptions/ImageOptions/ImageOptions.js","components/PizzaBuilder/BuilderOptions/ButtonOptions/ButtonOptions.js","components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder.js","components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder.js","components/PizzaBuilder/BuilderOptions/ToppingOptions/ToppingOptions.js","components/UI/OptionsButton/OptionsButton.js","components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder.js","containers/PizzaBuilder/PizzaBuilder.js","containers/Cart/CartItem/CartItem.js","components/CartItems/CartItems.js","containers/Cart/Cart.js","store/checkout/checkoutActions.js","store/checkout/checkoutActionTypes.js","store/auth/authActions.js","store/auth/authActionTypes.js","components/UI/Input/Input.js","shared/formValidation.js","containers/Form/Form.js","containers/Auth/SignIn/SignIn.js","containers/Auth/SignOut/SignOut.js","containers/Auth/SignUp/SignUp.js","containers/AddressForm/AddressForm.js","containers/OrderType/OrderType.js","components/DeliveryAddress/DeliveryAddress.js","containers/Checkout/Checkout.js","containers/Sidebar/Sidebar.js","containers/Orders/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/pizzaBuilder/pizzaBuilderReducer.js","store/cart/cartReducer.js","store/checkout/checkoutReducer.js","store/auth/authReducer.js","store/ui/uiReducer.js","store/rootReducer.js","store/store.js","hoc/ScrollToTop.js","index.js"],"names":["module","exports","NavigationItem","props","classNames","vertical","push","navigationItemContent","className","join","children","to","onClick","PizzaMenuItems","setErroredAction","erroredAction","type","connect","state","isAuthenticated","auth","idToken","accountMenuItems","Fragment","Button","disabled","React","memo","key","alertKey","CartIcon","handleClickItemAddedAlert","history","handleClickCheckout","event","stopPropagation","nextProps","this","quantity","console","log","numItemsInCart","itemAdded","location","pathname","numItems","fromCheckout","Component","withRouter","Header","handleClickMenuIcon","toggleSidebar","bind","alt","src","PizzaTimeLogo","style","position","items","cart","Footer","Layout","Dropdown","value","onChange","options","map","option","crustTypes","crustMetadataMapping","preview","HandTossedPreview","icon","HandTossedIcon","ThinNCrispyPreview","ThinNCrispyIcon","OriginalPanPreview","OriginalPanIcon","price","sizes","meatImageMapping","PepperoniPreview","previewExtra","ExtraPepperoniPreview","PepperoniIcon","ItalianSausagePreview","ExtraItalianSausagePreview","ItalianSausageIcon","HamPreview","ExtraHamPreview","HamIcon","BaconPreview","ExtraBaconPreview","BaconIcon","GrilledChickenPreview","ExtraGrilledChickenPreview","GrilledChickenIcon","BeefPreview","ExtraBeefPreview","BeefIcon","PorkPreview","ExtraPorkPreview","PorkIcon","OLIVES","BELL_PEPPERS","veggiesImageMapping","MushroomsPreview","ExtraMushroomsPreview","MushroomsIcon","RoastedSpinachPreview","ExtraRoastedSpinachPreview","RoastedSpinachIcon","RedOnionsPreview","ExtraRedOnionsPreview","RedOnionsIcon","OlivesPreview","ExtraOlivesPreview","OlivesIcon","BellPeppersPreview","ExtraBellPeppersPreview","BellPeppersIcon","BananaPeppersPreview","ExtraBananaPeppersPreview","BananaPeppersIcon","PineapplePreview","ExtraPineapplePreview","PineappleIcon","JalapenoPeppersPreview","ExtraJalapenoPeppersPreview","JalapenoPeppersIcon","RomaTomatoesPreview","ExtraRomaTomatoesPreview","RomaTomatoesIcon","CRUST","SIZE","SAUCE","MEATS","VEGGIES","WHOLE","cheeseAmounts","cheeseAmountMetadataMapping","sauceImageMapping","ClassicMarinaraIcon","CreamyGarlicParmesanIcon","BarbequeIcon","BuffaloIcon","sauceAmounts","sauceAmountMetadataMapping","crust_flavors","crustFlavorImageMapping","NoCrustFlavorIcon","HTGarlicButteryBlendPreview","ThinGarlicButteryBlendPreview","PanGarlicButteryBlendPreview","GarlicButteryBlendIcon","HTToastedParmesanPreview","ThinToastedParmesanPreview","PanToastedParmesanPreview","ToastedParmesanIcon","REGULAR","COMBO","toppingMapping","amount","portion","initializePizzaBuilder","pizza","itemId","instance","axios","create","baseURL","interceptors","response","use","error","Promise","reject","CryptoJS","require","SECRET_KEY","process","secureStorage","SecureStorage","localStorage","hash","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","getTotalQuantity","totalQuantity","Object","values","forEach","item","parseInt","getCart","userId","dispatch","cartId","axiosFirebase","get","then","res","entries","length","keys","localCart","getItem","setItem","remoteItemsQuantity","itemHashMap","generateItemHashMap","localItems","pizzaHash","patch","catch","err","combineCarts","post","name","createCart","addToCart","getState","matchedItemIdInCart","newQuantity","changeItemQuantity","uuidv4","addNewItemToCart","setCartItems","changeCartItemStart","put","changeCartItemFailed","itemBeingChanged","removeItem","delete","crustPriceMapping","sizePriceMapping","propertyPriceMapping","lookupErrorCode","errorCode","includes","calculatePrice","basePrice","priceType","propertyPrices","meatsPrice","veggiesPrice","getToppingsPrice","toFixed","toppingType","combo","toppings","toppingsPrice","topping","toppingProps","comboIncludesTopping","extraToppingPrice","handleEditItem","handleChangeItemQuantity","handleRemoveItem","calculateSubTotal","subTotal","PizzaBox","getInitialState","initialState","pizzaType","resetState","setState","handleChangeQuantity","persist","target","getCrust","crustDisplayValue","match","exec","handleChangeCrust","handleChangeSize","handleClickBuild","crust","handleAddToCart","width","window","innerWidth","crustOptions","crustMetadata","sizeOptions","pizzaAdd","pizzaName","customize","customizeSecondary","buildPizza","size","imageSrc","OrderSubmission","display","SignedOutMessage","SignedUpMessage","Message","backdrop","show","Modal","useEffect","document","body","overflow","modalClassNames","clicked","modalClosed","withErrorHandler","WrappedComponent","HOComponent","handleModalClosed","request","req","message","ui","fromSignOut","fromSignUp","CheesePizzaImg","PepperoniPizzaImg","MeatLoversPizzaImg","SupremePizzaImg","PepperoniLoversPizzaImg","VeggieLoversPizzaImg","UltimateCheeseLoverPizzaImg","HawaiianChickenPizzaImg","ChickenBaconParmesanImg","BBQChickenPizzaImg","BuffaloChickenPizzaImg","PizzaPreview","small","Cheese","meat","selectedMeatProps","imgClassNames","veggy","selectedVeggyProps","PizzaBuilderPreview","prevProps","PizzaDescription","sauce","cheeseAmount","crustFlavor","getToppingDescriptions","toppingDescriptions","toppingDescription","meats","veggies","singlePrice","overallPrice","order","PizzaDetails","nextState","save","saveToCart","PizzaBuilderProgress","stage","TOPPINGS","CHEESE_SAUCE","SIZE_CRUST","ImageOptions","imageMapping","selected","itemSelected","selectionMetadata","data-value","ButtonOptions","selectionOptions","SizeCrustBuilder","e","CheeseSauceBuilder","ToppingOptions","onClickAmount","onClickPortion","itemsSelected","checkMark","toppingOptionClasses","amountOptions","portionOptions","selection","data-topping","wholeSelection","leftSelection","rightSelection","OptionsButton","handleButtonClick","selectedOption","optionName","displayName","ToppingsBuilder","handleClickVeggies","handleClickMeats","toppingsBuilder","PizzaBuilder","handleClickStage","handleClickAction","handleCloseBuilder","closePizzaBuilder","handleClickProperty","property","setProperty","currentTarget","dataset","handleClickTopping","toggleTopping","handleClickAmount","setToppingAmount","handleClickPortion","setToppingPortion","handleSaveToCart","builder","back","next","getActionButton","buttonName","showPizzaBuilder","pizzaBuilder","loading","loadingCartItem","remove","checkout","isEqual","editItem","CartItems","loadingCart","errorCart","submitOrderFailed","getOrders","orders","authSuccess","authFailed","signOut","checkAuthTimeout","expirationTime","setTimeout","Input","inputElement","inputClasses","validationError","invalid","shouldValidate","touched","formSubmitted","errorMessage","elementType","elementConfig","label","handleInputChange","form","inputId","updatedForm","updatedFormElement","digits","replace","formatPhoneNumber","valid","checkValidity","validation","formIsValid","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","isPhoneNumber","Form","updatedFormData","updateForm","formElementsArray","id","config","formElement","onSubmit","SignIn","email","placeholder","password","handleSubmit","preventDefault","signIn","stateUpdate","redirect","authData","returnSecureToken","Date","getTime","expiresIn","localId","SignOut","SignUp","signUp","AddressForm","street","unit","city","hasLength","zipcode","validateAddress","validateAddressReset","addressValid","addressValidationError","validatingAddress","addressForm","params","secondary","candidates","axiosGeolocation","matchCode","analysis","dpv_match_code","deliveryAddress","OrderType","isDelivery","handleClick","orderTypeClassNames","deliveryClassNames","iconClassNames","data-type","DeliveryAddress","Checkout","handleSubmitOrder","total","submitOrder","submittingOrder","submitOrderError","emptyCart","tax","calculateTax","color","date","orderId","Sidebar","handleClickMenuItem","closeSidebar","sidebarContainerClassNames","sidebarClassNames","sidebarOpen","Order","Orders","gettingOrders","getOrdersError","ordersContent","sort","item1","item2","orderType","givenDate","getMonth","getDate","getFullYear","getReadableDate","App","initApp","exact","path","component","Cart","Home","Meats","Veggies","Chicken","Boolean","hostname","pizzaBuilderReducer","action","cartReducer","userInfo","checkoutReducer","authReducer","uiReducer","combineReducers","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","listen","scrollTo","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,0C,oCCA3CD,EAAOC,QAAU,IAA0B,2C,0BCA3CD,EAAOC,QAAU,IAA0B,4D,gBCA3CD,EAAOC,QAAU,IAA0B,+C,yFCA3CD,EAAOC,QAAU,IAA0B,yC,kBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,mD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,mD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,uD,gBCA3CD,EAAOC,QAAU,IAA0B,mD,gBCA3CD,EAAOC,QAAU,IAA0B,0D,gBCA3CD,EAAOC,QAAU,IAA0B,4D,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.eeb8745c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza_cheese.f7ed334d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza_supreme.d32db457.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_GreenBellPepper_ML_reg.0e00f485.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_meat_lovers.6888d88d.png\";","module.exports = __webpack_public_path__ + \"static/media/alarm-clock.e343a2cb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_NoFinish.3abbb296.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_ht.ef946a28.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_NoFinish.3d23efc8.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_thin.6c415f1e.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_NoFinish.857451fd.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_pan.a639fd58.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_reg.bd65daa5.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_extra.1a5dda64.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pepperoni.c8384ebc.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_reg.67e2467d.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_extra.c854f9c4.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_ItalianSausage.30f1abc9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_reg.de53578e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_extra.5a14d4e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Ham.f9a4b089.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_reg.9ad0ed0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_extra.09ab3e70.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Bacon.01d8344a.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_reg.9f9c0251.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_extra.b8e5a0bf.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Chicken.5ad44911.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_reg.2aa6b6df.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_extra.ed2a2c61.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Beef.3b7c67c7.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_reg.6342108f.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_extra.029c5390.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pork.f6ce9e4e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_reg.ac08da62.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_extra.4d46fc4f.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Mushroom.13419b0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_reg.a1aa56b9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_extra.70bff6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Spinach_fresh.0f9a3e93.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_reg.56b4f355.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_extra.a0e7bd25.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Onion_Red.fc649c44.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_reg.2c37ed8c.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_extra.37addb7c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Olive_black.f36bd555.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_GreenBellPepper.52813aeb.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_reg.f86003d4.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_extra.f22472f1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_BananaPepper.f3bcdf43.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_reg.84001df3.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_extra.97e5f278.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pineapple.25272d60.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_reg.351d9ecd.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_extra.d8ec6a52.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Jalapeno.010847af.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_reg.6d5ebb38.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_extra.8efd4042.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Tomato.45793eeb.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Marinara.85fd0f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_CreamyGarlicParm.c6e0d76c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_BBQ.552f71e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Buffalo.75e74963.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_GarlicButteryBlend.3519578d.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_GarlicButteryBlend.cbd8d06b.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_GarlicButteryBlend.eed3a573.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_GarlicButteryBlend_whole_2017.cb6aaecb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_ToastedParmesan.2d159915.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_ToastedParmesan.936d9f40.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_ToastedParmesan.78b23d6e.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_ToastedParm_whole_2017.222e5fd7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_none_whole_2017.b6008bb6.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_pepperoni.50a5d0e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Pepperoni_Lovers.436141dc.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Veggie_Lovers.eb41eca4.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Ultimate_Cheese_Lovers.cf9afb2c.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Hawaiian_Chicken.8799700a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Chicken_Bacon_Parmesan.44137224.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Backyard_BBQ_Chicken.cdffd12a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Buffalo_Chicken.332af0a5.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese_mozz_ML.10abdd1f.png\";","import React from \"react\";\nimport \"./NavigationItem.scss\";\nimport { Link } from \"react-router-dom\";\n\n/* Standard navigation item that is part of either the header or sidebar menus */\nconst NavigationItem = (props) => {\n  let classNames = [\"navigation-item__text\"];\n  if (props.vertical) {\n    classNames.push(\"navigation-item__text--vertical\");\n  }\n  let navigationItemContent = null;\n\n  navigationItemContent = (\n    <span className={classNames.join(\" \")}>\n      <h3>{props.children}</h3>\n    </span>\n  );\n\n  let navigationItem = null;\n  if (props.to) {\n    navigationItem = (\n      <Link onClick={props.onClick} to={props.to} className=\"navigation-item\">\n        {navigationItemContent}\n      </Link>\n    );\n  }\n  else {\n    navigationItem = (\n      <span onClick={props.onClick} className=\"navigation-item\">\n        {navigationItemContent}\n      </span>\n    );\n  }\n\n  return navigationItem;\n};\n\nexport default NavigationItem;\n","import React from \"react\";\nimport \"./PizzaMenuItems.scss\";\nimport NavigationItem from \"../../UI/NavigationItem/NavigationItem\";\n\n/* Menu items that display links to different categories of pizza */ \nconst PizzaMenuItems = (props) => {\n  return (\n    <div className=\"pizza-menu-items\">\n      <NavigationItem {...props} onClick={props.onClick} to=\"/meats\">Meats</NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to=\"/chicken\">Chicken</NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to=\"/veggies\">Veggies</NavigationItem>\n    </div>\n  );\n};\n\nexport default PizzaMenuItems;\n","import * as actionTypes from \"./uiActionTypes\";\n\n/* open/close the sidebar menu */\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR\n  };\n};\n\n/* close the sidebar menu */\nexport const closeSidebar = () => {\n  return {\n    type: actionTypes.CLOSE_SIDEBAR\n  }\n}\n\n/* set error for withErrorHandler HOC to pickup */\nexport const setErroredAction = (erroredAction) => {\n  return {\n    type: actionTypes.SET_ERRORED_ACTION,\n    erroredAction: erroredAction\n  };\n};\n","export const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\nexport const CLOSE_SIDEBAR = \"CLOSE_SIDEBAR\";\nexport const SET_ERRORED_ACTION = \"SET_ERRORED_ACTION\";\n","import React from \"react\";\nimport NavigationItem from \"../../UI/NavigationItem/NavigationItem\";\nimport { connect } from \"react-redux\";\n\n/* Menu items that deal with account information, namely authentication and orders */\nconst AccountMenuItems = (props) => {\n  let accountMenuItems = (\n    <NavigationItem {...props} to=\"/signin\">\n      <span>Sign In</span>\n    </NavigationItem>\n  );\n  if (props.isAuthenticated) {\n    accountMenuItems = (\n      <React.Fragment>\n        <NavigationItem {...props} to=\"/my-orders\">\n          My Orders\n        </NavigationItem>\n        <NavigationItem {...props} to=\"/signout\">\n          Sign Out\n        </NavigationItem>\n      </React.Fragment>\n    );\n  }\n  return accountMenuItems;\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, null)(AccountMenuItems);\n","import React from \"react\";\nimport \"./Button.scss\";\n\nexport const primary = \"button\";\nexport const secondary = \"button button--secondary\"\nexport const tertiary = \"button button--tertiary\";\n\n/* Standard button across entire app */\nconst Button = props => {\n  \n  return (\n    <button\n      onClick={props.onClick}\n      disabled={props.disabled}\n      className={props.type}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./DropdownAlert.scss\";\n\n/* Dropdown alert disappears automatically in a few seconds */\nconst DropdownAlert = props => {\n\n    return (\n        <div key={props.alertKey} onClick={props.onClick} className=\"dropdown-menu-alert\">\n            <div className=\"dropdown-menu-alert__container\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(DropdownAlert);","import React, { Component } from \"react\";\nimport { MdShoppingCart } from \"react-icons/md\";\nimport NavigationItem from \"../../components/UI/NavigationItem/NavigationItem\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Button, { primary } from \"../../components/UI/Button/Button\";\nimport DropdownAlert from \"../../components/UI/DropdownAlert/DropdownAlert\";\n\nclass CartIcon extends Component {\n  handleClickItemAddedAlert = () => {\n    this.props.history.push(\"/cart\");\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.quantity !== nextProps.quantity) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n      console.log(\"render cart icon\");\n    let numItemsInCart = null;\n    if (this.props.quantity > 0) {\n      numItemsInCart = (\n        <div\n          key={this.props.quantity + \"-num-items\"}\n          className=\"header__cart-items animate-num-items\"\n        >\n          {this.props.quantity}\n        </div>\n      );\n    }\n    let itemAdded = null;\n    if (\n      this.props.itemAdded &&\n      this.props.location.pathname !== \"/cart\" &&\n      this.props.location.pathname !== \"/checkout\"\n    ) {\n      let numItems = null;\n      if (this.props.itemAdded === 1) {\n        numItems = <span>{this.props.itemAdded} new item</span>;\n      } else {\n        numItems = <span>{this.props.itemAdded} new items</span>;\n      }\n      itemAdded = (\n        <DropdownAlert\n          onClick={this.handleClickItemAddedAlert}\n          alertKey={this.props.quantity + \"-add-items\"}\n        >\n          <h3 className=\"header__alert-text\">{numItems} added to cart</h3>\n          <Link\n            onClick={this.handleClickCheckout}\n            className=\"header__checkout\"\n            to={{\n              pathname: this.props.isAuthenticated\n                ? \"/checkout/order-type\"\n                : \"/signin\",\n              fromCheckout: \"true\",\n            }}\n          >\n            <Button type={primary}>\n              <span>Checkout</span>\n            </Button>\n          </Link>\n        </DropdownAlert>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <NavigationItem to=\"/cart\">\n          <div className=\"header__cart header__icon\">\n            <MdShoppingCart />\n            {numItemsInCart}\n          </div>\n        </NavigationItem>\n        {itemAdded}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(CartIcon);\n","import React, { Component } from \"react\";\nimport \"./Header.scss\";\nimport PizzaTimeLogo from \"../../assets/images/alarm-clock.png\";\nimport { MdMenu } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport NavigationItem from \"../../components/UI/NavigationItem/NavigationItem\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PizzaMenuItems from \"../../components/MenuItems/PizzaMenuItems/PizzaMenuItems\";\nimport { toggleSidebar } from \"../../store/ui/uiActions\";\nimport AccountMenuItems from \"../../components/MenuItems/AccountMenuItems/AccountMenuItems\";\nimport CartIcon from \"../../components/CartIcon/CartIcon\";\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClickCheckout = this.handleClickCheckout.bind(this);\n  }\n  shouldComponentUpdate(nextProps) {\n    if (this.props.quantity !== nextProps.quantity) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClickMenuIcon = () => {\n    this.props.toggleSidebar();\n  };\n\n  handleClickItemAddedAlert = () => {\n    this.props.history.push(\"/cart\");\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  render() {\n    console.log(\"render header\");\n\n    return (\n      <header className=\"header\">\n        <div className=\"header__main\">\n          <div onClick={this.handleClickMenuIcon} className=\"header__menu\">\n            <NavigationItem>\n              <div className=\"header__icon\">\n                <MdMenu />\n              </div>\n            </NavigationItem>\n          </div>\n          <Link to=\"/\" className=\"header__logo-title\">\n            <img\n              alt=\"PizzaTime logo\"\n              className=\"header__logo\"\n              src={PizzaTimeLogo}\n            />\n            <div className=\"header__title\">\n              <span>PizzaTime</span>\n            </div>\n          </Link>\n          <div className=\"header__menu-items\">\n            <PizzaMenuItems />\n          </div>\n        </div>\n        <div className=\"header__account\">\n          <div className=\"header__account-actions\">\n            <AccountMenuItems />\n          </div>\n          <div style={{ position: \"relative\" }}>\n            <CartIcon\n              itemAdded={this.props.itemAdded}\n              quantity={this.props.quantity}\n            />\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  quantity: state.cart.quantity,\n  itemAdded: state.cart.itemAdded,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { toggleSidebar })(withRouter(Header));\n","import React from \"react\";\nimport \"./Footer.scss\";\nimport { Link } from \"react-router-dom\";\n\n/* Footer containing informational links */\nconst Footer = (props) => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__links\">\n        <Link to=\"#\">ABOUT</Link>\n        <Link to=\"#\">CONTACT US</Link>\n        <Link to=\"#\">CAREERS</Link>\n        <Link to=\"#\">PRIVACY POLICY</Link>\n        <Link to=\"#\">TERMS</Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"../../../containers/Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport \"./Layout.scss\";\n\n/* Overall app layout */\nconst Layout = props => {\n  return (\n    <div className=\"layout\">\n      <Header />\n      <main className=\"main\">{props.children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./Dropdown.scss\";\n\n/* Standard dropdown selectors across entire app */\nconst Dropdown = props => {\n  return (\n    <select value={props.value ? props.value : 1} onChange={props.onChange} className=\"dropdown\">\n      {props.options.map(option => {\n        return <option key={option}>{option}</option>;\n      })}\n    </select>\n  );\n};\n\nexport default Dropdown;\n","import HandTossedPreview from \"../assets/images/crust_ht_NoFinish.png\"\nimport HandTossedIcon from \"../assets/images/icon_crust_ht.png\";\nimport ThinNCrispyPreview from \"../assets/images/crust_thin_NoFinish.png\";\nimport ThinNCrispyIcon from \"../assets/images/icon_crust_thin.png\";\nimport OriginalPanPreview from \"../assets/images/crust_pan_NoFinish.png\";\nimport OriginalPanIcon from \"../assets/images/icon_crust_pan.png\";\n\n/* All metadata related to the display of crust options */\n\nexport const HAND_TOSSED = \"Hand Tossed\";\nexport const THIN_N_CRISPY = \"Thin 'N Crispy\";\nexport const ORIGINAL_PAN = \"Original Pan\";\n\nexport const crustTypes = [HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN];\n\nexport const crustMetadataMapping = {\n    [HAND_TOSSED]: {\n        preview: HandTossedPreview,\n        icon: HandTossedIcon,\n    },\n    [THIN_N_CRISPY]: {\n        preview: ThinNCrispyPreview,\n        icon: ThinNCrispyIcon\n    },\n    [ORIGINAL_PAN]: {\n        preview: OriginalPanPreview,\n        icon: OriginalPanIcon,\n        price: \"+$2.00\"\n    }\n}","/* All metadata related to the display of size options */\n\nexport const LARGE = \"Large\";\nexport const MEDIUM = \"Medium\";\nexport const PERSONAL = \"Personal\";\n\nexport const sizes = [LARGE, MEDIUM, PERSONAL];","import PepperoniPreview from \"../assets/images/topping_Pepperoni_ML_reg.png\";\nimport ExtraPepperoniPreview from \"../assets/images/topping_Pepperoni_ML_extra.png\";\nimport PepperoniIcon from \"../assets/images/icon_topping_Pepperoni.png\";\nimport ItalianSausagePreview from \"../assets/images/topping_ItalianSausage_ML_reg.png\";\nimport ExtraItalianSausagePreview from \"../assets/images/topping_ItalianSausage_ML_extra.png\";\nimport ItalianSausageIcon from \"../assets/images/icon_topping_ItalianSausage.png\";\nimport HamPreview from \"../assets/images/topping_Ham_ML_reg.png\";\nimport ExtraHamPreview from \"../assets/images/topping_Ham_ML_extra.png\";\nimport HamIcon from \"../assets/images/icon_topping_Ham.png\";\nimport BaconPreview from \"../assets/images/topping_Bacon_ML_reg.png\";\nimport ExtraBaconPreview from \"../assets/images/topping_Bacon_ML_extra.png\";\nimport BaconIcon from \"../assets/images/icon_topping_Bacon.png\";\nimport GrilledChickenPreview from \"../assets/images/topping_Chicken_ML_reg.png\";\nimport ExtraGrilledChickenPreview from \"../assets/images/topping_Chicken_ML_extra.png\";\nimport GrilledChickenIcon from \"../assets/images/icon_topping_Chicken.png\";\nimport BeefPreview from \"../assets/images/topping_Beef_ML_reg.png\";\nimport ExtraBeefPreview from \"../assets/images/topping_Beef_ML_extra.png\";\nimport BeefIcon from \"../assets/images/icon_topping_Beef.png\";\nimport PorkPreview from \"../assets/images/topping_Pork_ML_reg.png\";\nimport ExtraPorkPreview from \"../assets/images/topping_Pork_ML_extra.png\";\nimport PorkIcon from \"../assets/images/icon_topping_Pork.png\";\n \n/* All metadata related to the display of meat options */\n\nexport const PEPPERONI = \"Pepperoni\";\nexport const ITALIAN_SAUSAGE = \"Italian Sausage\";\nexport const HAM = \"Ham\";\nexport const BACON = \"Bacon\";\nexport const GRILLED_CHICKEN = \"Grilled Chicken\";\nexport const BEEF = \"Beef\";\nexport const PORK = \"Pork\";\n\nexport const meatImageMapping = {\n    [PEPPERONI]: {\n        preview: PepperoniPreview,\n        previewExtra: ExtraPepperoniPreview,\n        icon: PepperoniIcon\n    },\n    [ITALIAN_SAUSAGE]: {\n        preview: ItalianSausagePreview,\n        previewExtra: ExtraItalianSausagePreview,\n        icon: ItalianSausageIcon\n    },\n    [HAM]: {\n        preview: HamPreview,\n        previewExtra: ExtraHamPreview,\n        icon: HamIcon\n    },\n    [BACON]: {\n        preview: BaconPreview,\n        previewExtra: ExtraBaconPreview,\n        icon: BaconIcon\n    },\n    [GRILLED_CHICKEN]: {\n        preview: GrilledChickenPreview,\n        previewExtra: ExtraGrilledChickenPreview,\n        icon: GrilledChickenIcon\n    },\n    [BEEF]: {\n        preview: BeefPreview,\n        previewExtra: ExtraBeefPreview,\n        icon: BeefIcon\n    },\n    [PORK]: {\n        preview: PorkPreview,\n        previewExtra: ExtraPorkPreview,\n        icon: PorkIcon\n    }\n}","import MushroomsPreview from \"../assets/images/topping_Mushroom_ML_reg.png\";\nimport ExtraMushroomsPreview from \"../assets/images/topping_Mushroom_ML_extra.png\";\nimport MushroomsIcon from \"../assets/images/icon_topping_Mushroom.png\";\nimport RoastedSpinachPreview from \"../assets/images/topping_Spinach_Fresh_ML_reg.png\";\nimport ExtraRoastedSpinachPreview from \"../assets/images/topping_Spinach_Fresh_ML_extra.png\";\nimport RoastedSpinachIcon from \"../assets/images/icon_topping_Spinach_fresh.png\";\nimport RedOnionsPreview from \"../assets/images/topping_Onion_red_ML_reg.png\";\nimport ExtraRedOnionsPreview from \"../assets/images/topping_Onion_red_ML_extra.png\";\nimport RedOnionsIcon from \"../assets/images/icon_topping_Onion_Red.png\";\nimport OlivesPreview from \"../assets/images/topping_Olives_black_ML_reg.png\";\nimport ExtraOlivesPreview from \"../assets/images/topping_Olives_black_ML_extra.png\";\nimport OlivesIcon from \"../assets/images/icon_topping_Olive_black.png\";\nimport BellPeppersPreview from \"../assets/images/topping_GreenBellPepper_ML_reg.png\";\nimport ExtraBellPeppersPreview from \"../assets/images/topping_GreenBellPepper_ML_reg.png\";\nimport BellPeppersIcon from \"../assets/images/icon_topping_GreenBellPepper.png\";\nimport BananaPeppersPreview from \"../assets/images/topping_BananaPepper_ML_reg.png\";\nimport ExtraBananaPeppersPreview from \"../assets/images/topping_BananaPepper_ML_extra.png\";\nimport BananaPeppersIcon from \"../assets/images/icon_topping_BananaPepper.png\";\nimport PineapplePreview from \"../assets/images/topping_Pineapple_ML_reg.png\";\nimport ExtraPineapplePreview from \"../assets/images/topping_Pineapple_ML_extra.png\";\nimport PineappleIcon from \"../assets/images/icon_topping_Pineapple.png\";\nimport JalapenoPeppersPreview from \"../assets/images/topping_Jalepeno_ML_reg.png\";\nimport ExtraJalapenoPeppersPreview from \"../assets/images/topping_Jalepeno_ML_extra.png\";\nimport JalapenoPeppersIcon from \"../assets/images/icon_topping_Jalapeno.png\";\nimport RomaTomatoesPreview from \"../assets/images/topping_Tomato_ML_reg.png\";\nimport ExtraRomaTomatoesPreview from \"../assets/images/topping_Tomato_ML_extra.png\";\nimport RomaTomatoesIcon from \"../assets/images/icon_topping_Tomato.png\";\n\n/* All metadata related to the display of veggy options */\n\nexport const MUSHROOMS = \"Mushrooms\";\nexport const ROASTED_SPINACH = \"Roasted Spinach\";\nexport const RED_ONIONS = \"Red Onions\";\nexport const OLIVES = \"Mediterranean Black Olives\";\nexport const BELL_PEPPERS = \"Green Bell Peppers\";\nexport const BANANA_PEPPERS = \"Banana Peppers\";\nexport const PINEAPPLE = \"Pineapple\";\nexport const JALAPENO_PEPPERS = \"Jalapeno Peppers\";\nexport const ROMA_TOMATOES = \"Roma Tomatoes\";\n\nexport const veggiesImageMapping = {\n    [MUSHROOMS]: {\n        preview: MushroomsPreview,\n        previewExtra: ExtraMushroomsPreview,\n        icon: MushroomsIcon\n    },\n    [ROASTED_SPINACH]: {\n        preview: RoastedSpinachPreview,\n        previewExtra: ExtraRoastedSpinachPreview,\n        icon: RoastedSpinachIcon\n    },\n    [RED_ONIONS]: {\n        preview: RedOnionsPreview,\n        previewExtra: ExtraRedOnionsPreview,\n        icon: RedOnionsIcon\n    },\n    [OLIVES]: {\n        preview: OlivesPreview,\n        previewExtra: ExtraOlivesPreview,\n        icon: OlivesIcon\n    },\n    [BELL_PEPPERS]: {\n        preview: BellPeppersPreview,\n        previewExtra: ExtraBellPeppersPreview,\n        icon: BellPeppersIcon\n    },\n    [BANANA_PEPPERS]: {\n        preview: BananaPeppersPreview,\n        previewExtra: ExtraBananaPeppersPreview,\n        icon: BananaPeppersIcon\n    },\n    [PINEAPPLE]: {\n        preview: PineapplePreview,\n        previewExtra: ExtraPineapplePreview,\n        icon: PineappleIcon\n    },\n    [JALAPENO_PEPPERS]: {\n        preview: JalapenoPeppersPreview,\n        previewExtra: ExtraJalapenoPeppersPreview,\n        icon: JalapenoPeppersIcon\n    },\n    [ROMA_TOMATOES]: {\n        preview: RomaTomatoesPreview,\n        previewExtra: ExtraRomaTomatoesPreview,\n        icon: RomaTomatoesIcon\n    }\n}","/* Standard key names used to store data in app */\n\nexport const CRUST = \"crust\";\nexport const SIZE = \"size\";\nexport const SAUCE = \"sauce\";\nexport const SAUCE_AMOUNT = \"sauceAmount\";\nexport const CHEESE_AMOUNT = \"cheeseAmount\";\nexport const CRUST_FLAVOR = \"crustFlavor\";\nexport const MEATS = \"meats\";\nexport const VEGGIES = \"veggies\";\nexport const COMBO_NAME=\"comboName\";\nexport const EXTRA_TOPPING=\"extra\";\nexport const REGULAR_TOPPING=\"regular\";\nexport const WHOLE=\"whole\";\nexport const LEFT_HALF=\"leftHalf\";\nexport const RIGHT_HALF=\"rightHalf\";","/* All metadata related to the displaying of cheese options */\n\nexport const REGULAR_CHEESE = \"Regular\";\nexport const EXTRA_CHEESE = \"Extra\";\nexport const LIGHT_CHEESE = \"Light\";\nexport const NO_CHEESE = \"None\";\n\nexport const cheeseAmounts = [EXTRA_CHEESE, REGULAR_CHEESE, LIGHT_CHEESE, NO_CHEESE];\n\nexport const cheeseAmountMetadataMapping = {\n    [EXTRA_CHEESE]: {\n        price: \"+$1.00\"\n    }\n}","import ClassicMarinaraIcon from \"../assets/images/icon_sauce_Marinara.png\"\nimport CreamyGarlicParmesanIcon from \"../assets/images/icon_sauce_CreamyGarlicParm.png\";\nimport BarbequeIcon from \"../assets/images/icon_sauce_BBQ.png\";\nimport BuffaloIcon from \"../assets/images/icon_sauce_Buffalo.png\";\n\n/* All metadata related to the display of sauce options */\n\nexport const CLASSIC_MARINARA = \"Classic Marinara\";\nexport const CREAMY_GARLIC_PARMESAN = \"Creamy Garlic Parmesan\"\nexport const BARBECUE = \"Barbeque\";\nexport const BUFFALO = \"Buffalo\";\n\nexport const sauceImageMapping = {\n    [CLASSIC_MARINARA]: {\n        icon: ClassicMarinaraIcon\n    },\n    [CREAMY_GARLIC_PARMESAN]: {\n        icon: CreamyGarlicParmesanIcon\n    },\n    [BARBECUE]: {\n        icon: BarbequeIcon\n    },\n    [BUFFALO]: {\n        icon: BuffaloIcon\n    }\n}\n\nexport const REGULAR_SAUCE = \"Regular\";\nexport const EXTRA_SAUCE = \"Extra\";\nexport const LIGHT_SAUCE = \"Light\";\nexport const NO_SAUCE = \"None\";\n\nexport const sauceAmounts = [EXTRA_SAUCE, REGULAR_SAUCE, LIGHT_SAUCE, NO_SAUCE];\n\nexport const sauceAmountMetadataMapping = {\n    [EXTRA_SAUCE]: {\n        price: \"+$1.00\"\n    }\n}\n\n\n","import HTGarlicButteryBlendPreview from \"../assets/images/crust_ht_GarlicButteryBlend.png\";\nimport ThinGarlicButteryBlendPreview from \"../assets/images/crust_thin_GarlicButteryBlend.png\";\nimport PanGarlicButteryBlendPreview from \"../assets/images/crust_pan_GarlicButteryBlend.png\";\nimport GarlicButteryBlendIcon from \"../assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png\";\nimport HTToastedParmesanPreview from \"../assets/images/crust_ht_ToastedParmesan.png\";\nimport ThinToastedParmesanPreview from \"../assets/images/crust_thin_ToastedParmesan.png\";\nimport PanToastedParmesanPreview from \"../assets/images/crust_pan_ToastedParmesan.png\";\nimport ToastedParmesanIcon from \"../assets/images/icon_finisher_ToastedParm_whole_2017.png\";\nimport NoCrustFlavorIcon from \"../assets/images/icon_finisher_none_whole_2017.png\";\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from \"./crustMetadata\";\n\n/* All metadata related to the display of crust flavor options */\n\n\nexport const NO_CRUST_FLAVOR = \"No Crust Flavor\";\nexport const GARLIC_BUTTERY_BLEND = \"Garlic Buttery Blend\";\nexport const TOASTED_PARMESAN = \"Toasted Parmesan\";\n\nexport const crust_flavors = [NO_CRUST_FLAVOR, GARLIC_BUTTERY_BLEND, TOASTED_PARMESAN];\n\nexport const crustFlavorImageMapping = {\n    [NO_CRUST_FLAVOR]: {\n        icon: NoCrustFlavorIcon\n    },\n    [GARLIC_BUTTERY_BLEND]: {\n        [HAND_TOSSED]: {\n            preview: HTGarlicButteryBlendPreview,\n        },\n        [THIN_N_CRISPY]: {\n            preview: ThinGarlicButteryBlendPreview\n        },\n        [ORIGINAL_PAN]: {\n            preview: PanGarlicButteryBlendPreview\n        },\n        icon: GarlicButteryBlendIcon\n    },\n    [TOASTED_PARMESAN]: {\n        [HAND_TOSSED]: {\n            preview: HTToastedParmesanPreview,\n        },\n        [THIN_N_CRISPY]: {\n            preview: ThinToastedParmesanPreview\n        },\n        [ORIGINAL_PAN]: {\n            preview: PanToastedParmesanPreview\n        },\n        icon: ToastedParmesanIcon\n    }\n}","import {\n  HAM,\n  PORK,\n  BEEF,\n  ITALIAN_SAUSAGE,\n  BACON,\n  PEPPERONI,\n  GRILLED_CHICKEN,\n} from \"./meatMetadata\";\nimport {\n  MUSHROOMS,\n  BELL_PEPPERS,\n  RED_ONIONS,\n  OLIVES,\n  ROMA_TOMATOES,\n  BANANA_PEPPERS,\n  PINEAPPLE,\n} from \"./veggiesMetadata\";\nimport {\n  MEATS,\n  VEGGIES,\n  CHEESE_AMOUNT,\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  SAUCE,\n  CRUST_FLAVOR,\n} from \"./pizzaProperties\";\nimport { EXTRA_CHEESE } from \"./cheeseMetadata\";\nimport { BUFFALO, BARBECUE } from \"./sauceMetadata\";\nimport { TOASTED_PARMESAN } from \"./crustFlavorMetadata\";\n\n/* Holds various combo related display metadata used in multiple components */\n\nexport const CHEESE = \"Cheese\";\nexport const PEPPERONI_PIZZA = \"Pepperoni\";\nexport const MEAT_LOVER = \"Meat Lover's\";\nexport const SUPREME = \"Supreme\";\nexport const PEPPERONI_LOVER = \"Pepperoni Lover's\";\nexport const SUPER_SUPREME = \"Super Supreme\";\nexport const VEGGIE_LOVER = \"Veggie Lover's\";\nexport const ULTIMATE_CHEESE_LOVER = \"Ultimate Cheese Lover's\";\nexport const BUFFALO_CHICKEN = \"Buffalo Chicken\";\nexport const BBQ_CHICKEN = \"BBQ Chicken\";\nexport const HAWAIIAN_CHICKEN = \"Hawaiian Chicken\";\nexport const CHICKEN_BACON_PARMESAN = \"Chicken Bacon Parmesan\";\n\nexport const REGULAR = \"Regular\";\nexport const COMBO = \"Combo\";\n\nexport const toppingMapping = {\n  [CHEESE]: {\n    [MEATS]: {},\n    [VEGGIES]: {},\n  },\n  [PEPPERONI_PIZZA]: {\n    [MEATS]: { [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [VEGGIES]: {},\n  },\n  [MEAT_LOVER]: {\n    [MEATS]: {\n      [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [HAM]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PORK]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BEEF]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [ITALIAN_SAUSAGE]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BACON]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {},\n  },\n  [PEPPERONI_LOVER]: {\n    [MEATS]: { [PEPPERONI]: { amount: EXTRA_TOPPING, portion: WHOLE } },\n    [VEGGIES]: {},\n  },\n  [SUPREME]: {\n    [MEATS]: {\n      [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PORK]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BEEF]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {\n      [MUSHROOMS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [SUPER_SUPREME]: {\n    [MEATS]: {\n      [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PORK]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BEEF]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [HAM]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [ITALIAN_SAUSAGE]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {\n      [MUSHROOMS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [OLIVES]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [VEGGIE_LOVER]: {\n    [MEATS]: {},\n    [VEGGIES]: {\n      [OLIVES]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [ROMA_TOMATOES]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [MUSHROOMS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [ULTIMATE_CHEESE_LOVER]: {\n    [CHEESE_AMOUNT]: EXTRA_CHEESE,\n    [MEATS]: {},\n    [VEGGIES]: {},\n  },\n  [BUFFALO_CHICKEN]: {\n    [MEATS]: { [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [VEGGIES]: {\n      [BANANA_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [SAUCE]: [BUFFALO],\n  },\n  [BBQ_CHICKEN]: {\n    [MEATS]: {\n      [BACON]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: { [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [SAUCE]: BARBECUE,\n  },\n  [HAWAIIAN_CHICKEN]: {\n    [MEATS]: {\n      [HAM]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PINEAPPLE]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [CHICKEN_BACON_PARMESAN]: {\n    [MEATS]: {\n      [BACON]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: { [ROMA_TOMATOES]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [CRUST_FLAVOR]: TOASTED_PARMESAN,\n  },\n};\n","import * as actionTypes from \"./pizzaBuilderActionTypes\";\n\n/* Initialize pizza builder with properties of given pizza */\nexport const initializePizzaBuilder = (pizza, quantity, itemId) => {\n  return {\n    type: actionTypes.INIT_PIZZA_BUILDER,\n    pizza: pizza,\n    quantity: quantity,\n    itemId: itemId\n  };\n};\n\nexport const closePizzaBuilder = () => {\n  return {\n    type: actionTypes.CLOSE_PIZZA_BUILDER\n  };\n};\n\n/* Dynamically set a pizza property value */\nexport const setProperty = (property, value) => {\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: value\n  };\n};\n\n/* Select/deselect a topping */\nexport const toggleTopping = (property, value) => {\n  return {\n    type: actionTypes.TOGGLE_TOPPING,\n    property: property,\n    value: value\n  };\n};\n\n/* Set the topping amount, whether regular/extra */\nexport const setToppingAmount = (property, topping, value) => {\n  return {\n    type: actionTypes.SET_TOPPING_AMOUNT,\n    property: property,\n    topping: topping,\n    value: value\n  };\n};\n\n/* Set the topping portion, whether left/right/whole */\nexport const setToppingPortion = (property, topping, value) => {\n  return {\n    type: actionTypes.SET_TOPPING_PORTION,\n    property: property,\n    topping: topping,\n    value: value\n  };\n};\n","export const INIT_PIZZA_BUILDER = \"INIT_PIZZA_BUILDER\";\nexport const CLOSE_PIZZA_BUILDER = \"CLOSE_PIZZA_BUILDER\";\nexport const SET_PROPERTY = \"SET_PROPERTY\";\nexport const TOGGLE_TOPPING = \"TOGGLE_TOPPING\";\nexport const SET_TOPPING_AMOUNT = \"SET_TOPPING_AMOUNT\";\nexport const SET_TOPPING_PORTION = \"SET_TOPPING_PORTION\";","import axios from \"axios\";\n\n/* Axios instance used to call firebase api */\nconst instance = axios.create({\n    baseURL: \"https://pizza-joint.firebaseio.com/\"\n});\n\naxios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n\nexport default instance;","import SecureStorage from \"secure-web-storage\";\nconst CryptoJS = require(\"crypto-js\");\n \nconst SECRET_KEY = process.env.REACT_APP_SECURE_WEB_STORAGE_SECRET_KEY;\n \n/* decrypt and encrypt data to/from local storage using the provided secret key */\nexport const secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n        key = CryptoJS.SHA256(key, SECRET_KEY);\n \n        return key.toString();\n    },\n    encrypt: function encrypt(data) {\n        data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n \n        data = data.toString();\n \n        return data;\n    },\n    decrypt: function decrypt(data) {\n        data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n \n        data = data.toString(CryptoJS.enc.Utf8);\n \n        return data;\n    }\n});\n\n","import * as actionTypes from \"./cartActionTypes\";\nimport {\n  SAUCE,\n  SAUCE_AMOUNT,\n  CRUST_FLAVOR,\n  CHEESE_AMOUNT,\n} from \"../../metadata/pizzaProperties\";\nimport { CLASSIC_MARINARA, REGULAR_SAUCE } from \"../../metadata/sauceMetadata\";\nimport { NO_CRUST_FLAVOR } from \"../../metadata/crustFlavorMetadata\";\nimport axiosFirebase from \"../../axiosFirebase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { REGULAR_CHEESE } from \"../../metadata/cheeseMetadata\";\nimport hash from \"object-hash\";\nimport { secureStorage } from \"../../shared/secureStorage\";\nimport * as actionDisplays from \"../ui/actionDisplays\";\nimport { setErroredAction } from \"../ui/uiActions\";\n\n/* Create cart in backend for a particular user */\nexport const createCart = (idToken, userId) => {\n  return (dispatch) => {\n    const cart = {\n      userId: userId,\n    };\n    axiosFirebase.post(\"/carts.json?auth=\" + idToken, cart).then((res) => {\n      dispatch({\n        type: actionTypes.CREATE_CART,\n        cartId: res.data.name,\n        userId: userId,\n      });\n    });\n  };\n};\n\n/* Set cart in redux store from cart in local storage */\nexport const getCartFromLocalStorage = () => {\n  return (dispatch) => {\n    let cart = secureStorage.getItem(\"cart\");\n    if (cart.quantity > 0) {\n      dispatch(setCartItems(cart));\n    }\n  };\n};\n\n/* Combine local storage cart with cart in backend */\nexport const combineCarts = (localCart, items, cartId, userId, idToken) => {\n  return (dispatch) => {\n    let emptyCart = { items: {}, quantity: 0 };\n    secureStorage.setItem(\"cart\", emptyCart);\n    const remoteItemsQuantity = getTotalQuantity(items);\n    let itemHashMap = generateItemHashMap(items);\n    let localItems = {};\n    Object.entries(localCart.items).forEach(([itemId, item]) => {\n      const pizzaHash = hash(item.pizza);\n      if (itemHashMap[pizzaHash]) {\n        items[itemHashMap[pizzaHash]].quantity =\n          parseInt(items[itemHashMap[pizzaHash]].quantity) +\n          parseInt(item.quantity);\n      } else {\n        itemHashMap[pizzaHash] = itemId;\n        items[itemId] = item;\n        localItems[itemId] = item;\n      }\n    });\n    if (Object.keys(localItems)) {\n      axiosFirebase\n        .patch(\"/carts/\" + cartId + \"/items.json?auth=\" + idToken, localItems)\n        .then((res) => {\n          dispatch({\n            type: actionTypes.GET_CART_SUCCESS,\n            userId: userId,\n            cartId: cartId,\n            items: items,\n            quantity: parseInt(localCart.quantity) + remoteItemsQuantity,\n            itemHashMap: itemHashMap,\n          });\n        })\n        .catch((err) => console.log(err));\n    } else {\n      dispatch({\n        type: actionTypes.GET_CART_SUCCESS,\n        userId: userId,\n        cartId: cartId,\n        items: items,\n        quantity: localCart.quantity + remoteItemsQuantity,\n        itemHashMap: itemHashMap,\n      });\n    }\n  };\n};\n\n/* Add up individual item quantities to get total quantity for cart */\nconst getTotalQuantity = (items) => {\n  let totalQuantity = 0;\n  Object.values(items).forEach((item) => {\n    totalQuantity += parseInt(item.quantity);\n  });\n\n  return totalQuantity;\n};\n\n/* To set loading in UI when getting cart */\nconst getCartStart = () => {\n  return {\n    type: actionTypes.GET_CART_START,\n  };\n};\n\n/* To stop loading cart when getting cart failed */\nconst getCartFailed = () => {\n  return {\n    type: actionTypes.GET_CART_FAILED,\n  };\n};\n\n/* Get cart from backend if user signed in or from local storage if not */\nexport const getCart = (idToken, userId) => {\n  return (dispatch) => {\n    dispatch(getCartStart());\n    let items = null;\n    let cartId = null;\n    let quantity;\n    axiosFirebase\n      .get(\n        \"/carts.json?auth=\" +\n          idToken +\n          '&orderBy=\"userId\"&equalTo=\"' +\n          userId +\n          '\"'\n      )\n      .then((res) => {\n        console.log(res);\n        if (Object.entries(res.data).length > 0) {\n          items = Object.values(res.data)[0].items || {};\n          cartId = Object.keys(res.data)[0];\n          let localCart = secureStorage.getItem(\"cart\");\n          if (localCart.quantity > 0) {\n            dispatch(combineCarts(localCart, items, cartId, userId, idToken));\n          } else {\n            const itemHashMap = generateItemHashMap(items);\n            quantity = getTotalQuantity(items);\n            dispatch({\n              type: actionTypes.GET_CART_SUCCESS,\n              userId: userId,\n              cartId: cartId,\n              items: items,\n              quantity: quantity,\n              itemHashMap: itemHashMap,\n            });\n          }\n        } else {\n          dispatch(createCart(idToken, userId));\n        }\n      })\n      .catch(() => {\n        dispatch(getCartFailed());\n        dispatch(setErroredAction(actionDisplays.GET_CART));\n      });\n  };\n};\n\n/* Generate pizza to item id hashmap to take care of duplicate pizzas */\nconst generateItemHashMap = (items) => {\n  let itemHashMap = {};\n  Object.entries(items).forEach(([itemId, item]) => {\n    itemHashMap[hash(item.pizza)] = itemId;\n  });\n\n  return itemHashMap;\n};\n\nexport const clearCart = () => {\n  return {\n    type: actionTypes.CLEAR_CART,\n  };\n};\n\n/* Add new item to cart, meaning it doesn't have a match in cart already */\nconst addNewItemToCart = (pizza, quantity) => {\n  return (dispatch, getState) => {\n    let item = { pizza: pizza, quantity: quantity };\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .post(\n          \"/carts/\" +\n            getState().cart.cartId +\n            \"/items.json?auth=\" +\n            getState().auth.idToken,\n          item\n        )\n        .then((res) => {\n          console.log(res);\n          dispatch({\n            type: actionTypes.ADD_TO_CART,\n            itemId: res.data.name,\n            item: item,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionDisplays.ADD_ITEM_TO_CART));\n        });\n    } else {\n      let cart = secureStorage.getItem(\"cart\");\n      const itemId = uuidv4();\n      cart.items[itemId] = item;\n      cart.quantity += parseInt(item.quantity);\n      console.log(cart);\n      secureStorage.setItem(\"cart\", cart);\n      dispatch({\n        type: actionTypes.ADD_TO_CART,\n        itemId: itemId,\n        item: item,\n      });\n    }\n  };\n};\n\n/* Add to cart, either new item or increase quantity for already existing item */\nexport const addToCart = (pizza, quantity) => {\n  return (dispatch, getState) => {\n    if (!pizza[SAUCE]) {\n      pizza[SAUCE] = CLASSIC_MARINARA;\n    }\n    if (!pizza[SAUCE_AMOUNT]) {\n      pizza[SAUCE_AMOUNT] = REGULAR_SAUCE;\n    }\n    if (!pizza[CHEESE_AMOUNT]) {\n      pizza[CHEESE_AMOUNT] = REGULAR_CHEESE;\n    }\n    if (!pizza[CRUST_FLAVOR]) {\n      pizza[CRUST_FLAVOR] = NO_CRUST_FLAVOR;\n    }\n\n    const matchedItemIdInCart = getState().cart.itemHashMap[hash(pizza)];\n    if (matchedItemIdInCart) {\n      const newQuantity =\n        parseInt(getState().cart.items[matchedItemIdInCart].quantity) +\n        parseInt(quantity);\n      dispatch(changeItemQuantity(matchedItemIdInCart, newQuantity));\n    } else {\n      dispatch(addNewItemToCart(pizza, quantity));\n    }\n  };\n};\n\n/* set cart items and metadata in redux store */\nexport const setCartItems = (cart) => {\n  let itemHashMap = generateItemHashMap(cart.items);\n  return {\n    type: actionTypes.SET_CART_ITEMS,\n    items: cart.items,\n    quantity: cart.quantity,\n    itemHashMap: itemHashMap,\n  };\n};\n\n/* Set new item quantity and update total quantity */\nexport const changeItemQuantity = (itemId, quantity) => {\n  return (dispatch, getState) => {\n    const item = { ...getState().cart.items[itemId] };\n    dispatch(changeCartItemStart(item.pizza));\n    item.quantity = quantity;\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .put(\n          \"/carts/\" +\n            getState().cart.cartId +\n            \"/items/\" +\n            itemId +\n            \".json?auth=\" +\n            getState().auth.idToken,\n          item\n        )\n        .then(() => {\n          console.log(\"changing item quantity\");\n          dispatch({\n            type: actionTypes.CHANGE_ITEM_QUANTITY,\n            itemId: itemId,\n            quantity: quantity,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionDisplays.CHANGE_ITEM_QUANTITY));\n          dispatch(changeCartItemFailed());\n        });\n    } else {\n      let cart = secureStorage.getItem(\"cart\");\n      cart.quantity -= cart.items[itemId].quantity;\n      cart.quantity += parseInt(quantity);\n      cart.items[itemId].quantity = quantity;\n      secureStorage.setItem(\"cart\", cart);\n      dispatch({\n        type: actionTypes.CHANGE_ITEM_QUANTITY,\n        itemId: itemId,\n        quantity: quantity,\n      });\n    }\n  };\n};\n\n/* To set loading in UI when making change to a cart item */\nconst changeCartItemStart = (pizza) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_START,\n    itemBeingChanged: pizza,\n  };\n};\n\n/* To stop loading cart item in UI if changing cart item failed */\nconst changeCartItemFailed = () => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_FAILED,\n  };\n};\n\n/* remove item from cart in backend if user signed in or from cart in local storage if not */\nexport const removeItem = (itemId, pizza) => {\n  return (dispatch, getState) => {\n    dispatch(changeCartItemStart(pizza));\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .delete(\n          \"/carts/\" +\n            getState().cart.cartId +\n            \"/items/\" +\n            itemId +\n            \".json?auth=\" +\n            getState().auth.idToken\n        )\n        .then(() => {\n          dispatch({\n            type: actionTypes.REMOVE_ITEM_SUCCESS,\n            itemId: itemId,\n            pizza: pizza,\n          });\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionDisplays.REMOVE_ITEM));\n        });\n    } else {\n      let cart = secureStorage.getItem(\"cart\");\n      cart.quantity -= cart.items[itemId].quantity;\n      delete cart.items[itemId];\n      secureStorage.setItem(\"cart\", cart);\n      dispatch({\n        type: actionTypes.REMOVE_ITEM_SUCCESS,\n        itemId: itemId,\n        pizza: pizza,\n      });\n    }\n  };\n};\n\nexport const emptyCart = (userId) => {\n  return (dispatch, getState) => {\n    console.log(\"in empty cart\");\n    if (getState().cart.cartId) {\n      let emptyCart = {\n        userId: userId,\n      };\n      axiosFirebase\n        .put(\n          \"/carts/\" +\n            getState().cart.cartId +\n            \".json?auth=\" +\n            getState().auth.idToken,\n          emptyCart\n        )\n        .then(() => {\n          dispatch({\n            type: actionTypes.EMPTY_CART,\n          });\n        })\n        .catch((err) => console.log(err));\n    } else {\n      let emptyCart = { items: {}, quantity: 0 };\n      secureStorage.setItem(\"cart\", emptyCart);\n      dispatch({\n        type: actionTypes.EMPTY_CART,\n      });\n    }\n  };\n};\n\n/* Save item to cart in backend if user signed in or in local storage if not */\nexport const saveToCart = (pizza, quantity, itemId) => {\n  return (dispatch, getState) => {\n    const item = { pizza: pizza, quantity: quantity };\n    dispatch(changeCartItemStart(getState().cart.items[itemId].pizza));\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .put(\n          \"/carts/\" +\n            getState().cart.cartId +\n            \"/items/\" +\n            itemId +\n            \".json?auth=\" +\n            getState().auth.idToken,\n          item\n        )\n        .then(() => {\n          dispatch({\n            type: actionTypes.SAVE_TO_CART,\n            itemId: itemId,\n            item: item,\n          });\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionDisplays.SAVE_TO_CART));\n        });\n    } else {\n      let cart = secureStorage.getItem(\"cart\");\n      cart.quantity -= cart.items[itemId].quantity;\n      cart.items[itemId] = item;\n      cart.quantity += item.quantity;\n      secureStorage.setItem(\"cart\", cart);\n      dispatch({\n        type: actionTypes.SAVE_TO_CART,\n        itemId: itemId,\n        item: item,\n      });\n    }\n  };\n};\n","export const CREATE_CART = \"CREATE_CART\";\nexport const GET_CART_START = \"GET_CART_START\";\nexport const GET_CART_SUCCESS = \"GET_CART_SUCCESS\";\nexport const GET_CART_FAILED = \"GET_CART_FAILED\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const SET_CART_ITEMS = \"SET_CART_ITEMS\";\nexport const CHANGE_ITEM_QUANTITY = \"CHANGE_ITEM_QUANTITY\";\nexport const INCREASE_ITEM_QUANTITY = \"INCREASE_ITEM_QUANTITY\";\nexport const CHANGE_CART_ITEM_START = \"CHANGE_CART_ITEM_START\";\nexport const REMOVE_ITEM_SUCCESS = \"REMOVE_ITEM_SUCCESS\";\nexport const CHANGE_CART_ITEM_FAILED = \"CHANGE_CART_ITEM_FAILED\";\nexport const SAVE_TO_CART = \"SAVE_TO_CART\";\nexport const EMPTY_CART = \"EMPTY_CART\";\nexport const SET_ERRORED_ACTION = \"ERRORED_ACTION\";","export const SUBMIT_ORDER = \"submit your order\";\nexport const GET_ORDERS = \"retrieve your orders\";\nexport const ADD_ITEM_TO_CART = \"add item(s) to cart\";\nexport const GET_CART = \"retrieve cart\";\nexport const CHANGE_ITEM_QUANTITY = \"change item quantity\";\nexport const REMOVE_ITEM = \"remove item\";\nexport const SAVE_TO_CART = \"save item to cart\";\nexport const SIGN_IN = \"sign in\";\nexport const SIGN_UP = \"sign up\";\nexport const VALIDATE_ADDRESS = \"validate address\";","import { LARGE, MEDIUM, PERSONAL } from \"./sizeMetadata\";\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from \"./crustMetadata\";\nimport { REGULAR, COMBO } from \"./comboMetadata\";\nimport { EXTRA_CHEESE } from \"./cheeseMetadata\";\nimport { EXTRA_SAUCE } from \"./sauceMetadata\";\n\n/* Holds price mappings for various pizza properties */\nexport const crustPriceMapping = {\n  [LARGE]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0\n  },\n  [MEDIUM]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0\n  },\n  [PERSONAL]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0\n  }\n};\n\nexport const sizePriceMapping = {\n  [LARGE]:{\n    [REGULAR]: 13.99,\n    [COMBO]: 18.99\n  },\n  [MEDIUM]: {\n    [REGULAR]: 11.99,\n    [COMBO]: 15.99\n  },\n  [PERSONAL]: {\n    [REGULAR]: 9.99,\n    [COMBO]: 11.99\n  }\n};\n\nexport const propertyPriceMapping = {\n  [EXTRA_SAUCE] : 1.0,\n  [EXTRA_CHEESE] : 1.0\n}\n\nexport const toppingPrice = 1.50;\nexport const extraToppingPrice = 2.50;\n","import {\n  SIZE,\n  CRUST,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n  CHEESE_AMOUNT,\n  SAUCE_AMOUNT,\n  EXTRA_TOPPING,\n} from \"../metadata/pizzaProperties\";\nimport { COMBO, toppingMapping } from \"../metadata/comboMetadata\";\nimport {\n  sizePriceMapping,\n  crustPriceMapping,\n  toppingPrice,\n  extraToppingPrice,\n  propertyPriceMapping,\n} from \"../metadata/priceMappings\";\n\n/* Utility functions used across multiple components/containers */\n\n/* Get display message for error code related to authentication */\nexport const lookupErrorCode = (errorCode) => {\n  console.log(errorCode);\n  if (errorCode === \"INVALID_PASSWORD\" || errorCode === \"EMAIL_NOT_FOUND\") {\n    return \"The username or password you entered is incorrect.\";\n  } else if (errorCode.includes(\"TOO_MANY_ATTEMPTS_TRY_LATER\")) {\n    return \"You've made too many unsuccessful attempts. Please try again later.\";\n  } else if (errorCode === \"EMAIL_EXISTS\") {\n    return \"The email you entered is already taken. Please try another one.\";\n  } else {\n    return \"There was an error submitting your credentials.\";\n  }\n};\n\n/* calculate price of a pizza, given its size, crust, toppings and various other properties */\nexport const calculatePrice = (pizza) => {\n  const basePrice =\n    sizePriceMapping[pizza[SIZE]][pizza.priceType] +\n    crustPriceMapping[pizza[SIZE]][pizza[CRUST]];\n\n  let propertyPrices = propertyPriceMapping[pizza[SAUCE_AMOUNT]] || 0;\n  propertyPrices += propertyPriceMapping[pizza[CHEESE_AMOUNT]] || 0;\n\n  let meatsPrice = 0;\n  let veggiesPrice = 0;\n\n  if (pizza.priceType !== COMBO) {\n    meatsPrice += getToppingsPrice(pizza, MEATS, false);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, false);\n  } else {\n    meatsPrice += getToppingsPrice(pizza, MEATS, true);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, true);\n  }\n\n  return (basePrice + meatsPrice + veggiesPrice + propertyPrices).toFixed(2);\n};\n\n/* Get price of only the toppings */\nconst getToppingsPrice = (pizza, toppingType, combo) => {\n  let toppings = pizza[toppingType];\n  let toppingsPrice = 0;\n  toppings &&\n    Object.entries(toppings).forEach(([topping, toppingProps]) => {\n      const comboIncludesTopping =\n        combo &&\n        Object.keys(toppingMapping[pizza[COMBO_NAME]][toppingType]).includes(\n          topping\n        );\n      if (!comboIncludesTopping || !combo) {\n        if (toppingProps.amount === EXTRA_TOPPING) {\n          toppingsPrice += extraToppingPrice;\n        } else {\n          toppingsPrice += toppingPrice;\n        }\n      } else if (\n        comboIncludesTopping &&\n        toppingProps.amount === EXTRA_TOPPING\n      ) {\n        toppingsPrice += extraToppingPrice - toppingPrice;\n      }\n    });\n\n  return toppingsPrice;\n};\n\n/* Open the pizza builder for editing a pizza */\nexport const handleEditItem = (props, pizza, quantity, itemId) => {\n  props.initializePizzaBuilder(pizza, quantity, itemId);\n};\n\n/* Change the quantity of an item in redux store */\nexport const handleChangeItemQuantity = (props, itemId, quantity) => {\n  props.changeItemQuantity(itemId, quantity);\n};\n\n/* Remove item from cart */\nexport const handleRemoveItem = (props, itemId, pizza) => {\n  props.removeItem(itemId, pizza);\n};\n\n/* Calculate the sum of the price of all pizzas in cart before tax */\nexport const calculateSubTotal = (items) => {\n  let subTotal = 0;\n  Object.values(items).forEach((item) => {\n    let price = item.pizza.price;\n    if (!price) {\n      price = calculatePrice(item.pizza);\n    }\n    subTotal += price * item.quantity;\n  });\n  return subTotal.toFixed(2);\n};\n\n/* Calculate the tax */\nexport const calculateTax = (subTotal) => {\n  return (subTotal * 0.1).toFixed(2);\n};\n\n/* Get display date */\nexport const getReadableDate = (givenDate) => {\n  const monthArray = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const date = new Date(givenDate);\n  const month = monthArray[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return month + \" \" + day + \", \" + year;\n};\n\n/* Get display address */\nexport const getReadableAddress = (givenAddress) => {\n  let address = \"\";\n  address += givenAddress.street;\n  if (givenAddress.secondary) address += \", \" + givenAddress.secondary;\n  address += \"\\n\";\n  address += givenAddress.city;\n  address += \", \" + givenAddress.state;\n  address += \" \" + givenAddress.zipcode;\n  return address;\n};\n","import React, { Component } from \"react\";\nimport \"./PizzaBox.scss\";\nimport Dropdown from \"../../components/UI/Dropdown/Dropdown\";\nimport Button from \"../../components/UI/Button/Button\";\nimport {\n  HAND_TOSSED,\n  crustMetadataMapping,\n} from \"../../metadata/crustMetadata\";\nimport { LARGE, sizes } from \"../../metadata/sizeMetadata\";\nimport { toppingMapping } from \"../../metadata/comboMetadata\";\nimport { connect } from \"react-redux\";\nimport { initializePizzaBuilder } from \"../../store/pizzaBuilder/pizzaBuilderActions\";\nimport { addToCart } from \"../../store/cart/cartActions\";\nimport {\n  SIZE,\n  CRUST,\n  COMBO_NAME,\n} from \"../../metadata/pizzaProperties\";\nimport { primary, secondary } from \"../../components/UI/Button/Button\";\nimport { calculatePrice } from \"../../shared/util\";\n\n/* UI box container that holds an pizza and lets user customize various pizza properties.\n   Can add pizza to order and also build your own pizza from here. */\nclass PizzaBox extends Component {\n  constructor(props) {\n    super(props);\n    const initialState = this.getInitialState();\n    this.state = {\n      width: window.innerWidth,\n      ...initialState,\n    };\n  }\n\n  getInitialState = () => {\n    let initialState = {\n      pizza: {\n        priceType: this.props.priceType,\n        [COMBO_NAME]: this.props.pizzaType,\n        [CRUST]: HAND_TOSSED,\n        [SIZE]: LARGE,\n      },\n      quantity: 1,\n    };\n\n    if (toppingMapping[this.props.pizzaType]) {\n      initialState = {\n        ...initialState,\n        pizza: {\n          ...initialState.pizza,\n          ...toppingMapping[this.props.pizzaType],\n        },\n      };\n    }\n\n    return initialState;\n  };\n\n  resetState = () => {\n    this.setState(this.getInitialState());\n  };\n\n  handleChangeQuantity = (event) => {\n    event.persist();\n    this.setState({\n      quantity: event.target.value,\n    });\n  };\n\n  /* get only crust value from crust display value which includes price */\n  getCrust = (crustDisplayValue) => {\n    const regexp = /(.*) (\\+\\$.*)/g;\n    const match = regexp.exec(crustDisplayValue);\n    return match ? match[1] : crustDisplayValue;\n  };\n\n  handleChangeCrust = (event) => {\n    event.persist();\n\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [CRUST]: event.target.value,\n      },\n    });\n  };\n\n  handleChangeSize = (event) => {\n    event.persist();\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [SIZE]: event.target.value,\n      },\n    });\n  };\n\n  handleClickBuild = () => {\n    let pizza = { ...this.state.pizza};\n    pizza.crust = this.getCrust(pizza.crust);\n    this.props.initializePizzaBuilder(pizza, this.state.quantity);\n    this.resetState();\n  };\n\n  handleAddToCart = () => {\n    let pizza = { ...this.state.pizza};\n    pizza.crust = this.getCrust(pizza.crust);\n    this.props.addToCart(pizza, this.state.quantity);\n    this.resetState();\n  };\n\n  render() {\n    const crustOptions = Object.entries(crustMetadataMapping).map(\n      ([crust, crustMetadata]) => {\n        return crust + (crustMetadata.price ? \" \" + crustMetadata.price : \"\");\n      }\n    );\n\n    const sizeOptions = sizes;\n    const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n    let pizza = { ...this.state.pizza};\n    pizza.crust = this.getCrust(pizza.crust);\n    const price = calculatePrice(pizza);\n\n    let pizzaAdd = null;\n    let pizzaName = null;\n    let customize = null;\n    let customizeSecondary = null;\n\n    if (this.props.buildPizza) {\n      pizzaAdd = (\n        <Button type={primary} onClick={() => this.handleClickBuild(price)}>\n          Get Started\n        </Button>\n      );\n      pizzaName = \"Build Your Own\";\n      customize = <div className=\"empty-button\"></div>;\n    } else {\n      pizzaAdd = (\n        <React.Fragment>\n          <div className=\"pizza-box__quantity\">\n            <Dropdown\n              onChange={this.handleChangeQuantity}\n              options={quantityOptions}\n              value={this.state.quantity}\n            />\n          </div>\n          <Button type={primary} onClick={() => this.handleAddToCart()}>\n            Add to Order\n          </Button>\n        </React.Fragment>\n      );\n      pizzaName = this.props.pizzaType;\n      customize = (\n        <Button type={secondary} onClick={() => this.handleClickBuild()}>\n          Customize\n        </Button>\n      );\n      customizeSecondary = (\n        <span\n          className=\"pizza-box__customize link\"\n          onClick={() => this.handleClickBuild(price)}\n        >\n          Customize\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"pizza-box\">\n        <h3 className=\"pizza-box__name\">{pizzaName} Pizza</h3>\n        <div className=\"pizza-box__container\">\n          <div className=\"pizza-box__details\">\n            {customizeSecondary}\n\n            <h4 className=\"pizza-box__price\">\n              ${(this.state.quantity * price).toFixed(2)}\n            </h4>\n            <div className=\"pizza-box__options\">\n              <div className=\"pizza-box__crust\">\n                <Dropdown\n                  options={crustOptions}\n                  onChange={this.handleChangeCrust}\n                  value={this.state.pizza.crust}\n                />\n              </div>\n              <div className=\"pizza-box__size\">\n                <Dropdown\n                  options={sizeOptions}\n                  onChange={this.handleChangeSize}\n                  value={this.state.pizza.size}\n                />\n              </div>\n              <div className=\"pizza-box__add\">{pizzaAdd}</div>\n            </div>\n          </div>\n          <div className=\"pizza-box__right\">\n            <img\n              className=\"pizza-box__image\"\n              src={this.props.imageSrc}\n              alt={this.props.pizzaName}\n            />\n            {customize}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { initializePizzaBuilder, addToCart })(PizzaBox);\n","import React from \"react\";\nimport \"./OrderSubmissionMessage.scss\";\nimport { Link } from \"react-router-dom\";\n\n/* A thank you message to be displayed after successfully submitting an order */\nconst OrderSubmission = () => {\n  return (\n    <div className=\"order-submission\">\n      <span>\n        <h3 style={{ display: \"inline\" }} className=\"order-submission__thanks\">\n          Thank you for ordering at PizzaTime!\n        </h3>\n        &nbsp;\n        <h3 style={{ display: \"inline\" }}>\n          View your{\" \"}\n          <Link className=\"order-submission__orders\" to=\"/my-orders\">\n            orders\n          </Link>{\" \"}\n        </h3>\n      </span>\n    </div>\n  );\n};\n\nexport default OrderSubmission;\n","import React from \"react\";\n\n/* A confirmation message to be displayed after successfully signing out */\nconst SignedOutMessage = () => {\n  return (\n    <div className=\"signed-out-message\">\n      <h3 style={{ display: \"inline\" }}>You have successfully signed out!</h3>\n    </div>\n  );\n};\n\nexport default SignedOutMessage;\n","import React from \"react\";\n\n/* A confirmation message to be displayed after successfully signing out */\nconst SignedUpMessage = () => {\n  return (\n    <div className=\"signed-up-message\">\n      <h3 style={{ display: \"inline\" }}>You have successfully created an account!</h3>\n    </div>\n  );\n};\n\nexport default SignedUpMessage;\n","import React from \"react\";\nimport \"./Message.scss\";\n\n/* Standard message alert to the user component */\nconst Message = (props) => {\n  return (\n    <div className=\"item-list-container\">\n      <div className=\"item-list\">\n        <div className=\"message\">\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport \"./Backdrop.scss\";\n\n/* Greyed out backdrop on top of provided children */\nconst backdrop = props => {\n  return props.show ? (\n    <div className=\"backdrop\" >{props.children}</div>\n  ) : null;\n};\n\nexport default backdrop;\n","import React from \"react\";\nimport \"./Modal.scss\";\nimport Backdrop from \"../Backdrop/Backdrop\";\nimport { useEffect } from \"react\";\nimport { MdClose } from \"react-icons/md\";\n\n/* Standard modal across entire app */\nconst Modal = (props) => {\n  useEffect(() => {\n    if (props.show) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n  });\n\n  let modalClassNames = [\"modal\"];\n  if (props.error) {\n    modalClassNames.push(\"modal--error\");\n  }\n  if (!props.show) {\n    modalClassNames.push(\"modal--closed\");\n  }\n  return (\n    <Backdrop show={props.show} clicked={props.modalClosed}>\n      <div className={modalClassNames.join(\" \")}>\n        <MdClose className=\"modal__close\" onClick={props.modalClosed} />\n        <div className=\"modal__children\">{props.children}</div>\n      </div>\n    </Backdrop>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Modal from \"../components/UI/Modal/Modal\";\nimport { connect } from \"react-redux\";\n\n/* Axios error handler HOC */\nconst withErrorHandler = (WrappedComponent, axios) => {\n  class HOComponent extends Component {\n    state = {\n      error: null,\n    };\n\n    componentDidMount() {\n      axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n\n      axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          console.log(\"got error\");\n          console.log(error);\n          this.setState({ error: error });\n          return Promise.reject(error);\n        }\n      );\n    }\n\n    handleModalClosed = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      let erroredAction = \"perform action\";\n      erroredAction = this.props.erroredAction || erroredAction;\n\n      return (\n        <React.Fragment>\n          <Modal\n            error\n            show={this.state.error}\n            modalClosed={this.handleModalClosed}\n          >\n            {this.state.error\n              ? \"Unable to \" +\n                erroredAction +\n                \": \" +\n                this.state.error.message\n              : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    erroredAction: state.ui.erroredAction,\n  });\n\n  return connect(mapStateToProps, null)(HOComponent);\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport PizzaBox from \"../../../containers/PizzaBox/PizzaBox\";\nimport CheesePizzaImg from \"../../../assets/images/pizza_cheese.jpg\";\nimport PepperoniPizzaImg from \"../../../assets/images/pizza_pepperoni.jpg\";\nimport MeatLoversPizzaImg from \"../../../assets/images/pizza_meat_lovers.png\";\nimport SupremePizzaImg from \"../../../assets/images/pizza_supreme.png\";\nimport { REGULAR, COMBO } from \"../../../metadata/comboMetadata\";\nimport {\n  CHEESE,\n  PEPPERONI_PIZZA,\n  MEAT_LOVER,\n  SUPREME,\n} from \"../../../metadata/comboMetadata\";\nimport OrderSubmission from \"../../Messages/OrderSubmissionMessage/OrderSubmissionMessage\";\nimport SignedOutMessage from \"../../Messages/SignedOutMessage/SignedOutMessage\";\nimport SignedUpMessage from \"../../Messages/SignedUpMessage/SignedUpMessage\";\nimport Message from \"../../UI/Message/Message\";\nimport axiosFirebase from \"../../../axiosFirebase\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler\";\n\n/* Displays popular pizzas */\nclass Home extends Component {\n  render() {\n\n    console.log(\"render Home\");\n    let message = null;\n    if (this.props.location.fromCheckout) {\n      message = (\n        <Message>\n          <OrderSubmission />\n        </Message>\n      );\n    } else if (this.props.location.fromSignOut) {\n      message = (\n        <Message>\n          <SignedOutMessage />\n        </Message>\n      );\n    } else if (this.props.location.fromSignUp) {\n      message = (\n        <Message>\n          <SignedUpMessage />\n        </Message>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {message}\n        <div className=\"pizza-grid\">\n          <h1 className=\"pizza-grid__title\">Popular</h1>\n          <div className=\"pizza-grid__grid\">\n            <PizzaBox\n              pizzaType={CHEESE}\n              priceType={REGULAR}\n              buildPizza\n              imageSrc={CheesePizzaImg}\n            />\n            <PizzaBox\n              pizzaType={CHEESE}\n              priceType={REGULAR}\n              imageSrc={CheesePizzaImg}\n            />\n            <PizzaBox\n              pizzaType={PEPPERONI_PIZZA}\n              priceType={REGULAR}\n              imageSrc={PepperoniPizzaImg}\n            />\n            <PizzaBox\n              pizzaType={MEAT_LOVER}\n              priceType={COMBO}\n              imageSrc={MeatLoversPizzaImg}\n            />\n            <PizzaBox\n              pizzaType={SUPREME}\n              priceType={COMBO}\n              imageSrc={SupremePizzaImg}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withErrorHandler(Home, axiosFirebase);\n","import React, { Component } from \"react\";\nimport PizzaBox from \"../../../containers/PizzaBox/PizzaBox\";\nimport CheesePizzaImg from \"../../../assets/images/pizza_cheese.jpg\";\nimport PepperoniLoversPizzaImg from \"../../../assets/images/pizza_Pepperoni_Lovers.png\";\nimport MeatLoversPizzaImg from \"../../../assets/images/pizza_meat_lovers.png\";\nimport SupremePizzaImg from \"../../../assets/images/pizza_supreme.png\";\nimport { REGULAR, COMBO } from \"../../../metadata/comboMetadata\";\nimport {\n  CHEESE,\n  MEAT_LOVER,\n  SUPREME,\n  SUPER_SUPREME,\n  PEPPERONI_LOVER,\n} from \"../../../metadata/comboMetadata\";\nimport axiosFirebase from \"../../../axiosFirebase\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler\";\n\n/* Displays various types of meat pizzas */\nclass Meats extends Component {\n  render() {\n    return (\n      <div className=\"pizza-grid\">\n        <h1 className=\"pizza-grid__title\">Meats</h1>\n        <div className=\"pizza-grid__grid\">\n          <PizzaBox\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            buildPizza\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBox\n            pizzaType={SUPREME}\n            priceType={COMBO}\n            imageSrc={SupremePizzaImg}\n          />\n          <PizzaBox\n            pizzaType={MEAT_LOVER}\n            priceType={COMBO}\n            imageSrc={MeatLoversPizzaImg}\n          />\n          <PizzaBox\n            pizzaType={PEPPERONI_LOVER}\n            priceType={COMBO}\n            imageSrc={PepperoniLoversPizzaImg}\n          />\n          <PizzaBox\n            pizzaType={SUPER_SUPREME}\n            priceType={COMBO}\n            imageSrc={SupremePizzaImg}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(Meats, axiosFirebase);\n","import React, { Component } from \"react\";\nimport PizzaBox from \"../../../containers/PizzaBox/PizzaBox\";\nimport CheesePizzaImg from \"../../../assets/images/pizza_cheese.jpg\";\nimport VeggieLoversPizzaImg from \"../../../assets/images/pizza_Veggie_Lovers.png\";\nimport UltimateCheeseLoverPizzaImg from \"../../../assets/images/pizza_Ultimate_Cheese_Lovers.png\";\nimport {\n  REGULAR,\n  COMBO,\n  VEGGIE_LOVER,\n  ULTIMATE_CHEESE_LOVER,\n} from \"../../../metadata/comboMetadata\";\nimport { CHEESE } from \"../../../metadata/comboMetadata\";\nimport axiosFirebase from \"../../../axiosFirebase\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler\";\n\n/* Displays various types of veggy pizzas */\nclass Veggies extends Component {\n  render() {\n    return (\n      <div className=\"pizza-grid\">\n        <h1 className=\"pizza-grid__title\">Veggies</h1>\n        <div className=\"pizza-grid__grid\">\n          <PizzaBox\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            buildPizza\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBox\n            pizzaType={VEGGIE_LOVER}\n            priceType={COMBO}\n            imageSrc={VeggieLoversPizzaImg}\n          />\n          <PizzaBox\n            pizzaType={ULTIMATE_CHEESE_LOVER}\n            priceType={COMBO}\n            imageSrc={UltimateCheeseLoverPizzaImg}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(Veggies, axiosFirebase);\n","import React, { Component } from \"react\";\nimport PizzaBox from \"../../../containers/PizzaBox/PizzaBox\";\nimport CheesePizzaImg from \"../../../assets/images/pizza_cheese.jpg\";\nimport HawaiianChickenPizzaImg from \"../../../assets/images/pizza_Hawaiian_Chicken.png\";\nimport ChickenBaconParmesanImg from \"../../../assets/images/pizza_Chicken_Bacon_Parmesan.png\";\nimport BBQChickenPizzaImg from \"../../../assets/images/pizza_Backyard_BBQ_Chicken.png\";\nimport BuffaloChickenPizzaImg from \"../../../assets/images/pizza_Buffalo_Chicken.png\";\nimport {\n  REGULAR,\n  COMBO,\n  HAWAIIAN_CHICKEN,\n  CHICKEN_BACON_PARMESAN,\n  BBQ_CHICKEN,\n  BUFFALO_CHICKEN,\n} from \"../../../metadata/comboMetadata\";\nimport {\n  CHEESE,\n} from \"../../../metadata/comboMetadata\";\nimport axiosFirebase from \"../../../axiosFirebase\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler\";\n\n/* Displays various types of chicken pizza */\nclass Chicken extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"pizza-grid\">\n        <h1 className=\"pizza-grid__title\">Chicken</h1>\n        <div className=\"pizza-grid__grid\">\n          <PizzaBox\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            buildPizza\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBox\n            pizzaType={HAWAIIAN_CHICKEN}\n            priceType={COMBO}\n            imageSrc={HawaiianChickenPizzaImg}\n          />\n          <PizzaBox\n            pizzaType={CHICKEN_BACON_PARMESAN}\n            priceType={COMBO}\n            imageSrc={ChickenBaconParmesanImg}\n          />\n          <PizzaBox\n            pizzaType={BBQ_CHICKEN}\n            priceType={COMBO}\n            imageSrc={BBQChickenPizzaImg}\n          />\n          <PizzaBox\n            pizzaType={BUFFALO_CHICKEN}\n            priceType={COMBO}\n            imageSrc={BuffaloChickenPizzaImg}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(Chicken, axiosFirebase);\n","import React, { Component } from \"react\";\nimport Cheese from \"../../assets/images/cheese_mozz_ML.png\";\nimport \"./PizzaPreview.scss\";\nimport { crustMetadataMapping } from \"../../metadata/crustMetadata\";\nimport { meatImageMapping } from \"../../metadata/meatMetadata\";\nimport { veggiesImageMapping } from \"../../metadata/veggiesMetadata\";\nimport { crustFlavorImageMapping } from \"../../metadata/crustFlavorMetadata\";\nimport {\n  CRUST,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF\n} from \"../../metadata/pizzaProperties\";\nimport { NO_CRUST_FLAVOR } from \"../../metadata/crustFlavorMetadata\";\n\n/* Pizza preview image with all selected toppings and crust options */\nclass PizzaPreview extends Component {\n  render() {\n    return (\n        <div className={this.props.small ? \"pizza-preview--small\" : \"pizza-preview\"}>\n          <img\n            className=\"pizza-preview__property\"\n            src={crustMetadataMapping[this.props.pizza[CRUST]].preview}\n            alt={this.props.pizza[CRUST]}\n          />\n          {this.props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR ? (\n            <img\n              className=\"pizza-preview__property\"\n              src={\n                crustFlavorImageMapping[this.props.pizza[CRUST_FLAVOR]][\n                  this.props.pizza[CRUST]\n                ].preview\n              }\n              alt={this.props.pizza[CRUST_FLAVOR]}\n            />\n          ) : null}\n          <img className=\"pizza-preview__property\" src={Cheese} alt=\"Cheese\" />\n          { this.props.pizza[MEATS] && Object.entries(this.props.pizza[MEATS]).map(([meat, selectedMeatProps]) => {\n              let src = null;\n              if(selectedMeatProps.amount === EXTRA_TOPPING){\n                src = meatImageMapping[meat].previewExtra;\n              }\n              else{\n                src = meatImageMapping[meat].preview;\n              }\n\n              let imgClassNames = [\"pizza-preview__property\"];\n              if(selectedMeatProps.portion === LEFT_HALF){\n                imgClassNames.push(\"pizza-preview__property--left\");\n              }\n              else if(selectedMeatProps.portion === RIGHT_HALF){\n                imgClassNames.push(\"pizza-preview__property--right\");\n              }\n              return (\n                <img\n                  key={meat}\n                  className={imgClassNames.join(\" \")}\n                  src={src}\n                  alt={meat}\n                />\n              );\n            })}\n          { this.props.pizza[VEGGIES] && Object.entries(this.props.pizza[VEGGIES]).map(([veggy, selectedVeggyProps]) => {\n             let src = null;\n             if(selectedVeggyProps.amount === EXTRA_TOPPING){\n               src = veggiesImageMapping[veggy].previewExtra;\n             }\n             else{\n               src = veggiesImageMapping[veggy].preview;\n             }\n\n             let imgClassNames = [\"pizza-preview__property\"];\n             if(selectedVeggyProps.portion === LEFT_HALF){\n               imgClassNames.push(\"preview__property--left\");\n             }\n             else if(selectedVeggyProps.portion === RIGHT_HALF){\n               imgClassNames.push(\"pizza-preview__property--right\");\n             }\n              return (\n                <img\n                  key={veggy}\n                  className={imgClassNames.join(\" \")}\n                  src={src}\n                  alt={veggy}\n                />\n              );\n            })}\n        </div>\n    );\n  }\n}\n\nexport default PizzaPreview;\n","import React, { Component } from \"react\";\nimport \"./PizzaBuilderPreview.scss\";\nimport PizzaPreview from \"../../PizzaPreview/PizzaPreview\";\n\n/* Pizza preview image section of the pizza builder */\nclass PizzaBuilderPreview extends Component {\n  shouldComponentUpdate(prevProps) {\n    if (this.props.pizza !== prevProps.pizza) {\n      return true;\n    }\n    return false;\n  }\n  render() {\n    console.log(\"render pizza builder preview\");\n\n    return (\n      <div className=\"pizza-builder-preview\">\n        <h4 className=\"builder-section__title\">Preview</h4>\n        <div className=\"pizza-builder-preview__preview\">\n          <PizzaPreview pizza={this.props.pizza} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PizzaBuilderPreview;\n","import React from \"react\";\nimport \"./PizzaDescription.scss\";\nimport { NO_CRUST_FLAVOR } from \"../../metadata/crustFlavorMetadata\";\nimport {\n  SIZE,\n  CRUST,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  COMBO_NAME,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from \"../../metadata/pizzaProperties\";\nimport { NO_CHEESE } from \"../../metadata/cheeseMetadata\";\nimport { NO_SAUCE } from \"../../metadata/sauceMetadata\";\nimport { calculatePrice } from \"../../shared/util\";\n\n/* Description of pizza, including size, toppings and other descriptives */\nconst PizzaDescription = (props) => {\n  let sauce = props.pizza[SAUCE_AMOUNT] + \" \" + props.pizza[SAUCE];\n  if (props.pizza[SAUCE_AMOUNT] === NO_SAUCE) {\n    sauce = \"No\";\n  }\n\n  let cheeseAmount = props.pizza[CHEESE_AMOUNT];\n  if (props.pizza[CHEESE_AMOUNT] === NO_CHEESE) {\n    cheeseAmount = \"No\";\n  }\n\n  let crustFlavor = null;\n  if (props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR) {\n    crustFlavor = <span>, {props.pizza[CRUST_FLAVOR]} Crust Flavor</span>;\n  }\n\n  const getToppingDescriptions = (toppings) => {\n    let toppingDescriptions = [];\n    Object.entries(toppings).forEach(([topping, toppingProps]) => {\n      let toppingDescription = \"\";\n      if (toppingProps.portion === LEFT_HALF) {\n        toppingDescription += \"Left Half \";\n      } else if (toppingProps.portion === RIGHT_HALF) {\n        toppingDescription += \"Right Half \";\n      }\n\n      if (toppingProps.amount === EXTRA_TOPPING) {\n        toppingDescription += \"Extra \";\n      }\n      toppingDescriptions.push(toppingDescription + topping);\n    });\n\n    return toppingDescriptions;\n  };\n\n  let meats = props.pizza[MEATS] || {};\n  let veggies = props.pizza[VEGGIES] || {};\n\n  let toppings = [\n    ...getToppingDescriptions(meats),\n    ...getToppingDescriptions(veggies),\n  ];\n\n  if (toppings.length === 0) {\n    toppings = null;\n  } else {\n    toppings = (\n      <div className=\"description__toppings\">\n        <h3>Toppings: </h3>\n        <span>{toppings.join(\", \")}</span>\n      </div>\n    );\n  }\n\n  const singlePrice = calculatePrice(props.pizza);\n  let overallPrice = null;\n  if (props.cart) {\n    overallPrice = (\n      <h2 className=\"description__price--cart\">\n        ${(singlePrice * props.quantity).toFixed(2)}\n      </h2>\n    );\n  } else if (props.order) {\n    overallPrice = (\n      <h2 className=\"description__price--order\">\n        ${(singlePrice * props.quantity).toFixed(2)}\n      </h2>\n    );\n  } else {\n    overallPrice = (\n      <h2 className=\"description__price\">\n        ${(singlePrice * props.quantity).toFixed(2)}\n      </h2>\n    );\n  }\n\n  return (\n    <div className=\"description\">\n      <div className=\"description__title\">\n        <div className=\"description__pizza\">\n          <h2 className=\"description__pizza-title\">\n            {props.pizza[SIZE]} {props.pizza[CRUST]} {props.pizza[COMBO_NAME]}{\" \"}\n            Pizza\n          </h2>\n        </div>\n        {overallPrice}\n      </div>\n      <div className=\"description__details\">\n        <span>{sauce} Sauce, </span>\n        <span>{cheeseAmount} Cheese</span>\n        {crustFlavor}\n        {toppings}\n      </div>\n    </div>\n  );\n};\n\nexport default PizzaDescription;\n","import React, { Component } from \"react\";\nimport Dropdown from \"../../UI/Dropdown/Dropdown\";\nimport Button, { primary } from \"../../UI/Button/Button\";\nimport PizzaDescription from \"../../PizzaDescription/PizzaDescription\";\nimport \"./PizzaDetails.scss\";\nimport { calculatePrice } from \"../../../shared/util\";\n\n/* Shows pizza description, as well as options to change quantity and add/save to cart */\nclass PizzaDetails extends Component {\n  state = {\n    quantity: this.props.quantity,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.pizza !== nextProps.pizza ||\n      this.state.quantity !== nextState.quantity\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChangeQuantity = (event) => {\n    this.setState({ quantity: event.target.value });\n  };\n\n  render() {\n    console.log(\"render pizza details\");\n    const price = calculatePrice(this.props.pizza, true);\n\n    let save = null;\n    if (this.props.itemId) {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.saveToCart(this.state.quantity)}\n        >\n          Save Changes\n        </Button>\n      );\n    } else {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.addToCart(this.state.quantity)}\n        >\n          Add to Cart\n        </Button>\n      );\n    }\n\n    return (\n      <div className=\"pizza-details\">\n        <h3 className=\"builder-title\">My Pizza</h3>\n        <div className=\"pizza-details__details\">\n          <div className=\"pizza-details__description\">\n            <PizzaDescription\n              quantity={this.state.quantity}\n              pizza={this.props.pizza}\n            />\n          </div>\n          <div className=\"pizza-details__options\">\n            <h2 className=\"pizza-details__price\">\n              ${(price * this.state.quantity).toFixed(2)}\n            </h2>\n            <div className=\"pizza-details__quantity\">\n              <Dropdown\n                className=\"item__size\"\n                options={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n                value={this.state.quantity}\n                onChange={this.handleChangeQuantity}\n              />\n            </div>\n            <div className=\"pizza-details__save\">{save}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PizzaDetails;\n","import React, { useEffect } from \"react\";\nimport \"./PizzaBuilderProgress.scss\";\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS\n} from \"../../../containers/PizzaBuilder/PizzaBuilder\";\n\n/* Shows progress of steps in the pizza builder */\nconst PizzaBuilderProgress = props => {\n\n  useEffect(() => {\n    console.log(\"render builder progress\");\n  }, [props.stage]);\n  return (\n    <div className=\"progress\">\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === TOPPINGS\n            ? \"progress__button progress__button--toppings progress__button--selected\"\n            : \"progress__button progress__button--toppings\"\n        }\n        value={TOPPINGS}\n      >\n        Toppings\n      </button>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === CHEESE_SAUCE\n            ? \"progress__button progress__button--cheese-sauce progress__button--selected\"\n            : \"progress__button progress__button--cheese-sauce\"\n        }\n        value={CHEESE_SAUCE}\n      >\n        Cheese &amp; Sauce\n      </button>\n      <button\n        onClick={props.onClick}\n        className=\"progress__button progress__button--size-crust\"\n        value={SIZE_CRUST}\n      >\n        Size &amp; Crust\n      </button>\n    </div>\n  );\n};\n\nexport default PizzaBuilderProgress;\n","import React from \"react\";\nimport \"./ImageOptions.scss\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\n/* Interactable options to be displayed as images in the pizza builder */\nconst ImageOptions = props => {\n  return (\n    <div className=\"builder-options\">\n      {Object.keys(props.imageMapping).map(option => {\n        const selected = props.itemSelected === option;\n        let price = null;\n        if(props.selectionMetadata && props.selectionMetadata[option]){\n          price = props.selectionMetadata[option].price;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className=\"option\"\n            data-value={option}\n          >\n            {selected ? <FaCheckCircle className=\"option__checkmark\" /> : null}\n            <img\n              className=\"option__img\"\n              src={props.imageMapping[option].icon}\n              alt={option}\n            />\n            <div\n              className={\n                selected\n                  ? \"option__name option__name--selected\"\n                  : \"option__name\"\n              }\n            >\n              {option} {price}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ImageOptions;\n","import React from \"react\";\nimport \"./ButtonOptions.scss\";\n\n/* Interactable options to be displayed as buttons in the pizza builder */\nconst ButtonOptions = props => {\n\n  return (\n    <div className=\"builder-options\">\n      {props.selectionOptions.map(option => {\n        let price = null;\n        if(props.selectionMetadata && props.selectionMetadata[option]){\n          price = props.selectionMetadata[option].price\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className={\n              props.itemSelected === option\n                ? \"button-option button-option--selected\"\n                : \"button-option\"\n            }\n            data-value={option}\n          >\n            {option} {price}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ButtonOptions;\n","import React, { Component } from \"react\";\nimport {\n  crustTypes,\n  crustMetadataMapping,\n} from \"../../../../metadata/crustMetadata\";\nimport {\n  crust_flavors,\n  crustFlavorImageMapping,\n} from \"../../../../metadata/crustFlavorMetadata\";\nimport { sizes } from \"../../../../metadata/sizeMetadata\";\nimport ImageOptions from \"../../BuilderOptions/ImageOptions/ImageOptions\";\nimport ButtonOptions from \"../../BuilderOptions/ButtonOptions/ButtonOptions\";\nimport {\n  SIZE,\n  CRUST,\n  CRUST_FLAVOR,\n} from \"../../../../metadata/pizzaProperties\";\n\n/* Pizza builder section with size/crust options */\nclass SizeCrustBuilder extends Component {\n\n  render() {\n    console.log(\"render size crust builder\");\n    return (\n      <div className=\"builder\">\n        <div className=\"builder-section\">\n          <h4 className=\"builder-section__title\">Size</h4>\n          <ButtonOptions\n            selectionOptions={sizes}\n            itemSelected={this.props.pizza[SIZE]}\n            onClick={(e) => this.props.onClick(e, SIZE)}\n          />\n        </div>\n        <div className=\"builder-section\">\n          <h4 className=\"builder-section__title\">Crust</h4>\n          <ImageOptions\n            selectionMetadata={crustMetadataMapping}\n            selectionOptions={crustTypes}\n            itemSelected={this.props.pizza[CRUST]}\n            imageMapping={crustMetadataMapping}\n            onClick={(e) => this.props.onClick(e, CRUST)}\n          />\n        </div>\n\n        <div className=\"builder-section\">\n          <h4 className=\"builder-section__title\">Crust Flavor</h4>\n          <ImageOptions\n            selectionOptions={crust_flavors}\n            itemSelected={this.props.pizza[CRUST_FLAVOR]}\n            imageMapping={crustFlavorImageMapping}\n            onClick={(e) => this.props.onClick(e, CRUST_FLAVOR)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SizeCrustBuilder;\n","import React, { Component } from \"react\";\nimport { cheeseAmounts, cheeseAmountMetadataMapping } from \"../../../../metadata/cheeseMetadata\";\nimport {\n  sauceImageMapping,\n  sauceAmounts,\n  sauceAmountMetadataMapping\n} from \"../../../../metadata/sauceMetadata\";\nimport ImageOptions from \"../../BuilderOptions/ImageOptions/ImageOptions\";\nimport ButtonOptions from \"../../BuilderOptions/ButtonOptions/ButtonOptions\";\nimport {\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n} from \"../../../../metadata/pizzaProperties\";\n\n/* Pizza builder section with cheese/sauce options */\nclass CheeseSauceBuilder extends Component {\n\n\n  render() {\n    return (\n      <div className=\"builder\">\n        <div className=\"builder-section\">\n          <h2 className=\"builder-section__title\">Sauce</h2>\n          <ImageOptions\n            itemSelected={this.props.pizza[SAUCE]}\n            imageMapping={sauceImageMapping}\n            onClick={e => this.props.onClick(e, SAUCE)}\n          />\n        </div>\n        <div className=\"builder-section\">\n          <h2 className=\"builder-section__title\">Amount of Sauce</h2>\n          <ButtonOptions\n            selectionMetadata={sauceAmountMetadataMapping}\n            selectionOptions={sauceAmounts}\n            itemSelected={this.props.pizza[SAUCE_AMOUNT]}\n            onClick={e => this.props.onClick(e, SAUCE_AMOUNT)}\n          />\n        </div>\n        <div className=\"builder-section\">\n          <h2 className=\"builder-section__title\">Amount of Cheese</h2>\n          <ButtonOptions\n            selectionMetadata={cheeseAmountMetadataMapping}\n            selectionOptions={cheeseAmounts}\n            itemSelected={this.props.pizza[CHEESE_AMOUNT]}\n            onClick={e => this.props.onClick(e, CHEESE_AMOUNT)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheeseSauceBuilder;\n","import React from \"react\";\nimport \"./ToppingOptions.scss\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport {\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from \"../../../../metadata/pizzaProperties\";\n\n/* Interactable topping options */ \nconst ToppingOptions = (props) => {\n  const onClick = (event) => {\n    event.stopPropagation();\n    props.onClick(event);\n  };\n\n  const onClickAmount = (event) => {\n    event.stopPropagation();\n    props.onClickAmount(event);\n  };\n\n  const onClickPortion = (event) => {\n    event.stopPropagation();\n    props.onClickPortion(event);\n  };\n\n  return (\n    <div className=\"builder-list\">\n      {Object.keys(props.imageMapping).map(topping => {\n        const selected = props.itemsSelected && Object.keys(props.itemsSelected).includes(topping);\n        let checkMark = null;\n        let toppingOptionClasses = [\"topping-option\"];\n        let amountOptions = null;\n        let portionOptions = null;\n        let selection = props.itemsSelected && props.itemsSelected[topping];\n        if (selected) {\n          checkMark = <FaCheckCircle className=\"topping-option__checkmark\" />;\n          toppingOptionClasses.push(\"topping-option--selected\");\n          amountOptions = (\n            <div className=\"topping-option__amount\">\n              <div\n                className={\n                  selection.amount === EXTRA_TOPPING\n                    ? \"amount-option amount-option--selected\"\n                    : \"amount-option\"\n                }\n                data-topping={topping}\n                data-value={EXTRA_TOPPING}\n                onClick={onClickAmount}\n              >\n                Extra\n              </div>\n              <div\n                className={\n                  selection.amount === REGULAR_TOPPING\n                    ? \"amount-option amount-option--selected\"\n                    : \"amount-option\"\n                }\n                data-topping={topping}\n                data-value={REGULAR_TOPPING}\n                onClick={onClickAmount}\n              >\n                Regular\n              </div>\n              <div\n                className=\"amount-option\"\n                data-value={topping}\n                onClick={onClick}\n              >\n                None\n              </div>\n            </div>\n          );\n\n          let wholeSelection = selection.portion === WHOLE;\n          let leftSelection = selection.portion === LEFT_HALF;\n          let rightSelection = selection.portion === RIGHT_HALF;\n          portionOptions = (\n            <div className=\"topping-option__portion\">\n              <div\n                className={\n                  wholeSelection\n                    ? \"portion-option portion-option--selected\"\n                    : \"portion-option\"\n                }\n                data-topping={topping}\n                data-value={WHOLE}\n                onClick={onClickPortion}\n              >\n                <div className={\n                  wholeSelection\n                    ? \"portion-option__whole portion-option__whole--selected\"\n                    : \"portion-option__whole\"\n                }></div>\n              </div>\n              <div\n                className={\n                  leftSelection\n                    ? \"portion-option portion-option--selected\"\n                    : \"portion-option\"\n                }\n                data-topping={topping}\n                data-value={LEFT_HALF}\n                onClick={onClickPortion}\n              >\n                <div className={\n                  leftSelection\n                    ? \"portion-option__left portion-option__left--selected\"\n                    : \"portion-option__left\"\n                }></div>\n              </div>\n              <div\n                className={\n                  rightSelection\n                    ? \"portion-option portion-option--selected\"\n                    : \"portion-option\"\n                }\n                data-topping={topping}\n                data-value={RIGHT_HALF}\n                onClick={onClickPortion}\n              >\n                <div className={\n                  rightSelection\n                    ? \"portion-option__right portion-option__right--selected\"\n                    : \"portion-option__right\"\n                }></div>\n              </div>\n            </div>\n          );\n        }\n        return (\n          <div\n            key={topping}\n            onClick={props.onClick}\n            className={toppingOptionClasses.join(\" \")}\n            data-value={topping}\n          >\n            <div\n              className=\"topping-option__img-selection\"\n              data-value={topping}\n              onClick={onClick}\n            >\n              {checkMark}\n              <img className=\"topping-option__img\" src={props.imageMapping[topping].icon} alt={topping} />\n            </div>\n            <div className=\"topping-option__details\">\n              <span className=\"topping-option__name\">{topping}</span>\n              <div className=\"topping-option__amount-portion\" onClick={e => e.stopPropagation()}>\n                {amountOptions}\n                {portionOptions}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ToppingOptions;\n","import React, { Component } from \"react\";\nimport \"./OptionsButton.scss\";\nimport Button, { tertiary } from \"../Button/Button\";\n\n/* Standard single component with one or more button options */\nclass OptionsButton extends Component {\n  state = {};\n\n  handleButtonClick = (option) => {\n    option.onClick();\n  };\n\n  render() {\n    return (\n      <div className=\"optionsButton\">\n        {this.props.options.map((option) => {\n          let button = null;\n          if (this.props.selectedOption === option.optionName) {\n            button = (\n              <Button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                type={tertiary}\n              >\n                {option.displayName}\n              </Button>\n            );\n          } else {\n            button = (\n              <button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                className=\"optionsButton__option\"\n              >\n                {option.displayName}\n              </button>\n            );\n          }\n          return button;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default OptionsButton;\n","import React, { Component } from \"react\";\nimport \"./ToppingsBuilder.scss\";\nimport ToppingOptions from \"../../BuilderOptions/ToppingOptions/ToppingOptions\";\nimport { meatImageMapping } from \"../../../../metadata/meatMetadata\";\nimport { veggiesImageMapping } from \"../../../../metadata/veggiesMetadata\";\nimport { MEATS, VEGGIES } from \"../../../../metadata/pizzaProperties\";\nimport OptionsButton from \"../../../UI/OptionsButton/OptionsButton\";\n\n/* Pizza builder section with topping options */\nclass ToppingsBuilder extends Component {\n  state = {\n    stage: this.props.toppingType || MEATS\n  };\n\n  handleClickVeggies = () => {\n    this.setState({ stage: VEGGIES });\n  };\n\n  handleClickMeats = () => {\n    this.setState({ stage: MEATS });\n  };\n\n  render() {\n    let toppingsBuilder = null;\n    if (this.state.stage === MEATS) {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={e => this.props.onClick(e, MEATS)}\n            onClickAmount={e => this.props.onClickAmount(e, MEATS)}\n            onClickPortion={e => this.props.onClickPortion(e, MEATS)}\n            imageMapping={meatImageMapping}\n            itemsSelected={this.props.pizza[MEATS]}\n          />\n        </React.Fragment>\n      );\n    } else {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={e => this.props.onClick(e, VEGGIES)}\n            onClickAmount={e => this.props.onClickAmount(e, VEGGIES)}\n            onClickPortion={e => this.props.onClickPortion(e, VEGGIES)}\n            imageMapping={veggiesImageMapping}\n            itemsSelected={this.props.pizza[VEGGIES]}\n          />\n        </React.Fragment>\n      );\n    }\n\n    const options = [\n      { optionName: MEATS, displayName: \"Meats\", onClick: this.handleClickMeats },\n      {\n        optionName: VEGGIES,\n        displayName: \"Veggies\",\n        onClick: this.handleClickVeggies\n      }\n    ];\n    return (\n      <div className=\"builder\">\n        <div className=\"builder__topping-type\">\n          <OptionsButton selectedOption={this.state.stage} options={options} />\n        </div>\n        <div className=\"builder__topping\"></div>\n        {toppingsBuilder}\n      </div>\n    );\n  }\n}\n\nexport default ToppingsBuilder;\n","import React, { Component } from \"react\";\nimport \"./PizzaBuilder.scss\";\nimport { connect } from \"react-redux\";\nimport PizzaBuilderPreview from \"../../components/PizzaBuilder/PizzaBuilderPreview/PizzaBuilderPreview\";\nimport { addToCart, saveToCart } from \"../../store/cart/cartActions\";\nimport PizzaDetails from \"../../components/PizzaBuilder/PizzaDetails/PizzaDetails\";\nimport PizzaBuilderProgress from \"../../components/PizzaBuilder/PizzaBuilderProgress/PizzaBuilderProgress\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport SizeCrustBuilder from \"../../components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder\";\nimport CheeseSauceBuilder from \"../../components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder\";\nimport ToppingsBuilder from \"../../components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder\";\nimport {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion\n} from \"../../store/pizzaBuilder/pizzaBuilderActions\";\nimport Button, { primary } from \"../../components/UI/Button/Button\";\n\n/* Stages that are possible for pizza builder.\n   Set in state. */\nexport const SIZE_CRUST = \"SIZE_CRUST\";\nexport const CHEESE_SAUCE = \"CHEESE_SAUCE\";\nexport const TOPPINGS = \"TOPPINGS\";\n\n/* Main container for entire pizza builder */\nclass PizzaBuilder extends Component {\n  state = {\n    stage: SIZE_CRUST\n  };\n\n  /* Set current stage of pizza builder based on \n    PizzaBuilderProgres component */\n  handleClickStage = event => {\n    this.setState({ stage: event.target.value });\n  };\n\n  /* Set current stage of pizza builder based on\n     Back/Next buttons */\n  handleClickAction = stage => {\n    this.setState({ stage: stage });\n  };\n\n  /* Reset to first stage and close pizza builder */\n  handleCloseBuilder = () => {\n    this.setState({ stage: SIZE_CRUST });\n    this.props.closePizzaBuilder();\n  };\n\n  /* Set provided value on given property on current pizza */\n  handleClickProperty = (event, property) => {\n    this.props.setProperty(property, event.currentTarget.dataset.value);\n  };\n\n  /* Toggle given topping on current pizza */\n  handleClickTopping = (event, property) => {\n    this.props.toggleTopping(property, event.currentTarget.dataset.value);\n  };\n\n  handleClickAmount = (event, property) => {\n    this.props.setToppingAmount(property, event.currentTarget.dataset.topping, event.currentTarget.dataset.value);\n  }\n\n  handleClickPortion = (event, property) => {\n    this.props.setToppingPortion(property, event.currentTarget.dataset.topping, event.currentTarget.dataset.value);\n  }\n\n  /* Add current pizza to cart and close pizza builder */\n  handleAddToCart = (quantity) => {\n    this.props.addToCart(this.props.pizza, quantity);\n    this.handleCloseBuilder();\n  };\n\n  /* Save current pizza to cart and close pizza builder */\n  handleSaveToCart = (quantity) => {\n    this.props.saveToCart(this.props.pizza, quantity, this.props.itemId);\n    this.handleCloseBuilder();\n  };\n\n  render() {\n\n    console.log(\"render pizza builder\");\n    let builder = null;\n    let back = null;\n    let next = null;\n\n    /* helper function that returns button that moves\n       pizza builder to specified stage */\n    const getActionButton = (stage, buttonName) => {\n      return (\n        <div className=\"builder-action__step\">\n          <Button type={primary} onClick={() => this.handleClickAction(stage)}>\n            {buttonName}\n          </Button>\n        </div>\n      );\n    };\n\n    /* set SizeCrustBuilder for SIZE_CRUST stage\n       and appopriate next button */\n    if (this.state.stage === SIZE_CRUST) {\n      builder = (\n        <SizeCrustBuilder\n          pizza={this.props.pizza}\n          onClick={this.handleClickProperty}\n        />\n      );\n      next = getActionButton(CHEESE_SAUCE, \"Next\");\n    } else if (this.state.stage === CHEESE_SAUCE) {\n      /* set CheeseSauceBuilder for CHEESE_SAUCE stage\n       and appropriate back/next buttons */\n      builder = (\n        <CheeseSauceBuilder\n          pizza={this.props.pizza}\n          onClick={this.handleClickProperty}\n        />\n      );\n      back = getActionButton(SIZE_CRUST, \"Back\");\n      next = getActionButton(TOPPINGS, \"Next\");\n    } else if (this.state.stage === TOPPINGS) {\n      /* set ToppingsBuilder for TOPPINGS stage\n       and appropriate back button */\n      builder = (\n        <ToppingsBuilder\n          pizza={this.props.pizza}\n          onClick={this.handleClickTopping}\n          onClickAmount={this.handleClickAmount}\n          onClickPortion={this.handleClickPortion}\n        />\n      );\n      back = getActionButton(CHEESE_SAUCE, \"Back\");\n    }\n\n    return (\n      <Modal\n        show={this.props.showPizzaBuilder}\n        modalClosed={this.handleCloseBuilder}\n      >\n        <div className=\"totalBuilder\">\n          <div className=\"totalBuilder__mypizza\">\n            <div className=\"totalBuilder__details\">\n              <PizzaDetails\n                addToCart={this.handleAddToCart}\n                saveToCart={this.handleSaveToCart}\n                pizza={this.props.pizza}\n                quantity={this.props.quantity}\n                itemId={this.props.itemId}\n              />\n            </div>\n            <div className=\"totalBuilder__preview\">\n              <PizzaBuilderPreview pizza={this.props.pizza} />\n            </div>\n          </div>\n          <div className=\"totalBuilder__builder\">\n            <h3 className=\"builder-title\">Pizza Builder</h3>\n            <div className=\"builder-progress\">\n              <PizzaBuilderProgress\n                stage={this.state.stage}\n                onClick={this.handleClickStage}\n              />\n            </div>\n            {builder}\n            <div className=\"builder-action\">\n              {back}\n              {next}\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  itemId: state.pizzaBuilder.itemId,\n  pizza: state.pizzaBuilder.pizza,\n  quantity: state.pizzaBuilder.quantity,\n  showPizzaBuilder: state.pizzaBuilder.showPizzaBuilder\n});\n\nexport default connect(mapStateToProps, {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n  addToCart,\n  saveToCart\n})(PizzaBuilder);\n","import React from \"react\";\nimport \"./CartItem.scss\";\nimport PizzaDescription from \"../../../components/PizzaDescription/PizzaDescription\";\nimport Dropdown from \"../../../components/UI/Dropdown/Dropdown\";\nimport PizzaPreview from \"../../../components/PizzaPreview/PizzaPreview\";\nimport { connect } from \"react-redux\";\nimport { SyncLoader } from \"react-spinners\";\nimport { isEqual } from \"lodash\";\nimport { calculatePrice } from \"../../../shared/util\";\n\n/* Single cart item with pizza description, price, quantity and edit/remove options */\nconst CartItem = (props) => {\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  console.log(props.pizza);\n\n  let remove = null;\n  if (!props.checkout) {\n    remove = (\n      <span className=\"link\" onClick={props.removeItem}>\n        Remove\n      </span>\n    );\n  }\n\n  let overallPrice = (calculatePrice(props.pizza) * props.quantity).toFixed(2);\n\n  let cartItem = null;\n  if (props.loading && isEqual(props.itemBeingChanged, props.pizza)) {\n    cartItem = (\n      <div className=\"item__empty\">\n        <SyncLoader />\n      </div>\n    );\n  } else {\n    cartItem = (\n      <div className=\"item\">\n        <div className=\"item__pizza u-margin-right\">\n          <div className=\"item__preview\">\n            <PizzaPreview small pizza={props.pizza} />\n          </div>\n          <div className=\"item__description\">\n            <PizzaDescription\n              editItem={props.editItem}\n              cart\n              pizza={props.pizza}\n              quantity={props.quantity}\n            />\n          </div>\n        </div>\n        <div className=\"item__details\">\n          <div className=\"item__price\">${overallPrice}</div>\n          <div className=\"item__quantity\">\n            <Dropdown\n              onChange={props.changeItemQuantity}\n              options={quantityOptions}\n              value={props.quantity}\n            />\n          </div>\n          <div className=\"item__actions\">\n            <span className=\"item__edit link\" onClick={props.editItem}>\n              Edit\n            </span>\n            {remove}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return cartItem;\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.cart.loadingCartItem,\n  itemBeingChanged: state.cart.itemBeingChanged,\n});\n\nexport default connect(mapStateToProps, null)(CartItem);\n","import React from \"react\";\nimport CartItem from \"../../containers/Cart/CartItem/CartItem\";\n\n/* All cart items to display in cart and order summary pages */\nconst CartItems = props => {\n  return Object.keys(props.items).map(itemId => {\n    const item = props.items[itemId];\n    return (\n      <CartItem\n        key={itemId}\n        pizza={item.pizza}\n        quantity={item.quantity}\n        changeItemQuantity={e => props.handleChangeItemQuantity(e, itemId)}\n        removeItem={() => props.handleRemoveItem(itemId, item.pizza)}\n        editItem={() => props.handleEditItem(item.pizza, item.quantity, itemId)}\n        checkout={props.checkout}\n      />\n    );\n  });\n};\n\nexport default CartItems;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { initializePizzaBuilder } from \"../../store/pizzaBuilder/pizzaBuilderActions\";\nimport { changeItemQuantity, removeItem } from \"../../store/cart/cartActions\";\nimport CartItems from \"../../components/CartItems/CartItems\";\nimport Button, { primary } from \"../../components/UI/Button/Button\";\nimport { Link } from \"react-router-dom\";\nimport {\n  handleEditItem,\n  handleChangeItemQuantity,\n  handleRemoveItem,\n} from \"../../shared/util\";\nimport { SyncLoader } from \"react-spinners\";\nimport { calculateSubTotal } from \"../../shared/util\";\nimport axiosFirebase from \"../../axiosFirebase\";\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\n\n\n/* Shopping cart with all added cart items */\nconst Cart = (props) => {\n  const subTotal = calculateSubTotal(props.items);\n\n  let cart = null;\n  if (props.loading) {\n    cart = (\n      <div className=\"item-list__empty\">\n        <SyncLoader />\n      </div>\n    );\n  } else if (Object.keys(props.items).length > 0) {\n    cart = (\n      <React.Fragment>\n        <CartItems\n          handleEditItem={(pizza, quantity, itemId) =>\n            handleEditItem(props, pizza, quantity, itemId)\n          }\n          handleRemoveItem={(itemId, pizza) =>\n            handleRemoveItem(props, itemId, pizza)\n          }\n          handleChangeItemQuantity={(event, itemId) =>\n            handleChangeItemQuantity(props, itemId, event.target.value)\n          }\n          items={props.items}\n        />\n        <div className=\"item-list__bottom\">\n          <div className=\"totals\">\n            <div className=\"totals__line-items\">\n              <div className=\"totals__line-item\">\n                <h3>Subtotal:</h3> <h3>${subTotal}</h3>\n              </div>\n            </div>\n\n            <Link\n              to={{\n                pathname: props.isAuthenticated\n                  ? \"/checkout/order-type\"\n                  : \"/signin\",\n                fromCheckout: true\n              }}\n            >\n              <Button type={primary}>\n                <span>Checkout</span>\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    cart = (\n      <div className=\"item-list__empty\">\n        <h2>Your cart is empty!</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"item-list-container\">\n      <div className=\"item-list\">\n        <h1 className=\"item-list__title\">Shopping Cart</h1>\n        {cart}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  cartId: state.cart.cartId,\n  loading: state.cart.loadingCart,\n  error: state.cart.errorCart,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, {\n  initializePizzaBuilder,\n  changeItemQuantity,\n  removeItem,\n})(withErrorHandler(Cart, axiosFirebase));\n","import * as actionTypes from \"./checkoutActionTypes\";\nimport axiosFirebase from \"../../axiosFirebase\";\nimport axiosGeolocation from \"axios\";\nimport * as actionDisplays from \"../ui/actionDisplays\";\nimport { setErroredAction } from \"../ui/uiActions\";\n\n/* To set loading in UI when starting to submit order */\nexport const submitOrderStart = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_START,\n  };\n};\n\n/* Submit an order for a user */\nexport const submitOrder = (total, items, idToken, userId) => {\n  return (dispatch, getState) => {\n    dispatch(submitOrderStart());\n    let order = {\n      userId: userId,\n      items: items,\n      date: new Date(),\n      total: total,\n    };\n\n    const deliveryAddress = getState().checkout.deliveryAddress;\n    if (deliveryAddress) {\n      order = { ...order, deliveryAddress: deliveryAddress };\n    }\n    axiosFirebase\n      .post(\"/orders.json?auth=\" + idToken, order)\n      .then((res) => {\n        console.log(res);\n        dispatch({\n          type: actionTypes.SUBMIT_ORDER,\n          orderId: res.data.name,\n          order: order,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionDisplays.SUBMIT_ORDER));\n        dispatch(submitOrderFailed());\n      });\n  };\n};\n\n/* Stop loading in UI when submitting order failed */\nexport const submitOrderFailed = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_FAILED,\n  };\n};\n\nexport const validateAddressReset = () => {\n  return {\n    type: actionTypes.VALIDATE_ADDRESS_RESET,\n  };\n};\n\nexport const validateAddress = (addressForm) => {\n  return (dispatch) => {\n    let params = {\n      key: process.env.REACT_APP_SMARTY_STREETS_KEY,\n      street: addressForm.street.value,\n      secondary: addressForm.unit.value,\n      city: addressForm.city.value,\n      state: addressForm.state.value,\n      zipcode: addressForm.zipcode.value,\n      candidates: 10,\n    };\n\n    dispatch({\n      type: actionTypes.VALIDATE_ADDRESS_START,\n    });\n\n    axiosGeolocation\n      .get(\"https://us-street.api.smartystreets.com/street-address\", {\n        params: params,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.length > 0) {\n          const matchCode = res.data[0].analysis.dpv_match_code;\n          if (matchCode === \"Y\") {\n            dispatch({\n              type: actionTypes.VALIDATE_ADDRESS_SUCCESS,\n              deliveryAddress: {\n                street: addressForm.street.value,\n                secondary: addressForm.unit.value,\n                city: addressForm.city.value,\n                state: addressForm.state.value,\n                zipcode: addressForm.zipcode.value,\n              },\n            });\n          } else if (matchCode === \"N\") {\n            dispatch({\n              type: actionTypes.VALIDATE_ADDRESS_FAILED,\n              error: \"The address you entered is invalid\",\n            });\n          } else if (matchCode === \"S\" || matchCode === \"D\") {\n            dispatch({\n              type: actionTypes.VALIDATE_ADDRESS_FAILED,\n              error: \"Missing or incorrect secondary address (apt/unit)\",\n            });\n          }\n        } else {\n          dispatch({\n            type: actionTypes.VALIDATE_ADDRESS_FAILED,\n            error: \"The address you entered is invalid\",\n          });\n        }\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionDisplays.VALIDATE_ADDRESS));\n        dispatch({\n          type: actionTypes.VALIDATE_ADDRESS_FAILED,\n        });\n      });\n  };\n};\n\nconst getOrdersStart = () => {\n  return {\n    type: actionTypes.GET_ORDERS_START,\n  };\n};\n\nconst getOrdersFailed = () => {\n  return {\n    type: actionTypes.GET_ORDERS_FAILED,\n  };\n};\n\nexport const getOrders = (idToken, userId) => {\n  return (dispatch) => {\n    dispatch(getOrdersStart());\n    axiosFirebase\n      .get(\n        \"/orders.json?auth=\" +\n          idToken +\n          '&orderBy=\"userId\"&equalTo=\"' +\n          userId +\n          '\"'\n      )\n      .then((res) => {\n        const orders = res.data;\n        console.log(orders);\n        dispatch({\n          type: actionTypes.GET_ORDERS_SUCCESS,\n          orders: orders,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionDisplays.GET_ORDERS));\n        dispatch(getOrdersFailed());\n      });\n  };\n};\n","export const SUBMIT_ORDER_START=\"SUBMIT_ORDER_START\";\nexport const SUBMIT_ORDER=\"SUBMIT_ORDER\";\nexport const SUBMIT_ORDER_FAILED=\"SUBMIT_ORDER_FAILED\";\nexport const GET_ORDERS=\"GET_ORDERS\";\nexport const GET_ORDERS_START=\"GET_ORDERS_START\";\nexport const GET_ORDERS_SUCCESS=\"GET_ORDERS_SUCCESS\";\nexport const GET_ORDERS_FAILED=\"GET_ORDERS_FAILED\";\nexport const VALIDATE_ADDRESS_START=\"VALIDATE_ADDRESS_START\";\nexport const VALIDATE_ADDRESS_SUCCESS=\"VALIDATE_ADDRESS_SUCCESS\";\nexport const VALIDATE_ADDRESS_FAILED=\"VALIDATE_ADDRESS_FAILED\";\nexport const VALIDATE_ADDRESS_RESET=\"VALIDATE_ADDRESS_RESET\";\nexport const SET_ERRORED_ACTION=\"SET_ERRORED_ACTION\";","import * as actionTypes from \"./authActionTypes\";\nimport {\n  clearCart,\n  getCart,\n  getCartFromLocalStorage,\n} from \"../cart/cartActions\";\nimport { getOrders } from \"../checkout/checkoutActions\";\nimport axios from \"axios\";\nimport { secureStorage } from \"../../shared/secureStorage\";\nimport { setErroredAction } from \"../ui/uiActions\";\nimport * as actionDisplays from \"../ui/actionDisplays\";\n\n/* To show loading in UI when authentication action has started */\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\n/* Successfully authenticated user and received token/userid */\nexport const authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: idToken,\n    userId: userId,\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const authFailed = (error) => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error,\n  };\n};\n\n/* Clear user data and cart on sign out */\nexport const signOut = () => {\n  return (dispatch) => {\n    localStorage.removeItem(\"idToken\");\n    localStorage.removeItem(\"expirationTime\");\n    localStorage.removeItem(\"userId\");\n    dispatch(clearCart());\n    dispatch({\n      type: actionTypes.AUTH_SIGNOUT,\n    });\n  };\n};\n\n/* Sign out user when expiration time has been reached */\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(signOut());\n    }, expirationTime * 1000);\n  };\n};\n\n/* Sign in user with email/password */\nexport const signIn = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true,\n    };\n    axios\n      .post(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" +\n          process.env.REACT_APP_API_KEY,\n        authData\n      )\n      .then((res) => {\n        console.log(res);\n        localStorage.setItem(\"idToken\", res.data.idToken);\n        localStorage.setItem(\n          \"expirationTime\",\n          new Date(new Date().getTime() + res.data.expiresIn * 1000)\n        );\n        localStorage.setItem(\"userId\", res.data.localId);\n        dispatch(authSuccess(res.data.idToken, res.data.localId));\n        dispatch(checkAuthTimeout(res.data.expiresIn));\n        dispatch(getCart(res.data.idToken, res.data.localId));\n        dispatch(getOrders(res.data.idToken, res.data.localId));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionDisplays.SIGN_IN));\n        dispatch(authFailed(err.response.data.error));\n      });\n  };\n};\n\n/* Sign up user with email/password */\nexport const signUp = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true,\n    };\n    axios\n      .post(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\n          process.env.REACT_APP_API_KEY,\n        authData\n      )\n      .then((res) => {\n        console.log(res);\n        dispatch(authSuccess(res));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionDisplays.SIGN_UP));\n        dispatch(authFailed(err.response.data.error));\n      });\n  };\n};\n\n/* Initialize application upon app load */\nexport const initApp = () => {\n  return (dispatch) => {\n    let localCart = null;\n    try {\n      localCart = secureStorage.getItem(\"cart\");\n    } catch (error) {\n      console.log(error);\n    }\n    if (!localCart) {\n      let emptyCart = { items: {}, quantity: 0 };\n      secureStorage.setItem(\"cart\", emptyCart);\n    }\n    const idToken = localStorage.getItem(\"idToken\");\n    if (idToken) {\n      const userId = localStorage.getItem(\"userId\");\n      const expirationTime = localStorage.getItem(\"expirationTime\");\n      dispatch(authSuccess(idToken, userId));\n      dispatch(\n        checkAuthTimeout(\n          (new Date(expirationTime).getTime() - new Date().getTime()) / 1000\n        )\n      );\n      dispatch(getCart(idToken, userId));\n      dispatch(getOrders(idToken, userId));\n    } else {\n      dispatch(getCartFromLocalStorage());\n    }\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAILED = \"AUTH_FAILED\";\nexport const AUTH_SIGNOUT = \"AUTH_SIGNOUT\";\nexport const AUTH_RESET = \"AUTH_RESET\";","import React from \"react\";\nimport \"./Input.scss\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\n/* Standard input element to be included in forms */\nconst Input = (props) => {\n  let inputElement = null;\n  const inputClasses = [\"input__element\"];\n  let validationError = null;\n  if (\n    props.invalid &&\n    props.shouldValidate &&\n    props.touched &&\n    props.formSubmitted\n  ) {\n    inputClasses.push(\"input__invalid\");\n    validationError = (\n      <p className=\"input__error-message\">{props.errorMessage}</p>\n    );\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <Dropdown\n          size={props.elementConfig.size}\n          options={props.elementConfig.options}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n  }\n  return (\n    <div className=\"input\">\n      <label>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nexport default Input;\n","/* Form validation helper functions */\n\nconst formatPhoneNumber = digits => {\n  var cleaned = (\"\" + digits).replace(/\\D/g, \"\");\n  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    return \"(\" + match[1] + \") \" + match[2] + \"-\" + match[3];\n  }\n  return digits;\n};\n\nexport const handleInputChange = (form, event, inputId) => {\n  const updatedForm = {\n    ...form\n  };\n\n  const updatedFormElement = {\n    ...updatedForm[inputId]\n  };\n\n  if (updatedFormElement.elementType === \"phonenumber\") {\n    updatedFormElement.value = formatPhoneNumber(event.target.value);\n  } else {\n    updatedFormElement.value = event.target.value;\n  }\n  updatedFormElement.valid = checkValidity(\n    updatedFormElement.value,\n    updatedFormElement.validation\n  );\n  updatedFormElement.touched = true;\n  updatedForm[inputId] = updatedFormElement;\n\n  let formIsValid = true;\n  for (let inputId in updatedForm) {\n    formIsValid = updatedForm[inputId].valid && formIsValid;\n  }\n  return { form: updatedForm, formIsValid: formIsValid };\n};\n\nconst checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isPhoneNumber) {\n    console.log(value);\n    const pattern = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","import React, { Component } from \"react\";\nimport Button, { primary } from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport { handleInputChange } from \"../../shared/formValidation.js\";\n\n/* Standard form component across entire app */\nclass Form extends Component {\n\n  handleInputChange = (event, inputId) => {\n    const updatedFormData = handleInputChange(this.props.form, event, inputId);\n    this.props.updateForm({\n      form: updatedFormData.form,\n      formIsValid: updatedFormData.formIsValid\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.props.form) {\n      formElementsArray.push({\n        id: key,\n        config: this.props.form[key]\n      });\n    }\n\n    let form = null;\n    form = (\n      <React.Fragment>\n        {formElementsArray.map(formElement => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              shouldValidate={formElement.config.validation}\n              invalid={!formElement.config.valid}\n              touched={formElement.config.touched}\n              formSubmitted={this.props.formSubmitted}\n              errorMessage={formElement.config.errorMessage}\n              onChange={e => this.handleInputChange(e, formElement.id)}\n            />\n          );\n        })}\n        <div className=\"form-component__submit\">\n          <Button type={primary} disabled={this.props.formSubmitted && !this.props.formIsValid}>\n            Submit\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n\n    return (\n      <form\n        className=\"form-component__form\"\n        onSubmit={this.props.onSubmit}\n      >\n        {form}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./SignIn.scss\";\nimport Button, { secondary } from \"../../../components/UI/Button/Button\";\nimport { signIn } from \"../../../store/auth/authActions\";\nimport { connect } from \"react-redux\";\nimport { SyncLoader } from \"react-spinners\";\nimport { lookupErrorCode } from \"../../../shared/util\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"../../../containers/Form/Form\";\nimport { Link } from \"react-router-dom\";\n\n/* Sign in form */\nclass SignIn extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: \"Email\",\n        },\n        value: \"\",\n        errorMessage: \"Please enter a valid email address\",\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        value: \"\",\n        errorMessage: \"Password has to be at least 6 characters long\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signIn(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  render() {\n    let form = (\n      <Form\n        {...this.state}\n        onSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n    if (this.props.loading) {\n      form = (\n        <div className=\"spinner\">\n          <SyncLoader />\n        </div>\n      );\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <div className=\"form-component__error\">\n          <p>{lookupErrorCode(this.props.error.message)}</p>\n        </div>\n      );\n    }\n\n    let redirect = null;\n    if (this.props.isAuthenticated) {\n      if (this.props.location.fromCheckout) {\n        redirect = <Redirect to=\"/checkout/order-type\" />;\n      } else {\n        redirect = <Redirect to=\"/\" />;\n      }\n    }\n\n    return (\n      <div className=\"form-container\">\n        <div className=\"form-component\">\n          <h3 className=\"form-component__title\">\n            Please sign in to your account\n          </h3>\n          {redirect}\n          {errorMessage}\n          {form}\n          <div className=\"signup\">\n            <Link\n              to={{\n                pathname: \"/signup\",\n                fromCheckout: this.props.location.fromCheckout,\n              }}\n            >\n              <Button type={secondary}>Sign Up</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.auth.loading,\n  error: state.auth.error,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { signIn })(SignIn);\n","import React, { Component } from \"react\";\nimport { signOut } from \"../../../store/auth/authActions\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n/* Signs current user out */\nclass SignOut extends Component {\n  componentDidMount() {\n    this.props.signOut();\n  }\n\n  render() {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/\",\n          fromSignOut: \"true\",\n        }}\n      />\n    );\n  }\n}\n\nexport default connect(null, { signOut })(SignOut);\n","import React, { Component } from \"react\";\nimport \"./SignUp.scss\";\nimport { signUp } from \"../../../store/auth/authActions\";\nimport { connect } from \"react-redux\";\nimport { SyncLoader } from \"react-spinners\";\nimport { lookupErrorCode } from \"../../../shared/util\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"../../../containers/Form/Form\";\n\n/* User sign up form */\nclass SignUp extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: \"Email\",\n        },\n        value: \"\",\n        errorMessage: \"Please enter a valid email address\",\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        value: \"\",\n        errorMessage: \"Password has to be at least 6 characters long\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signUp(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  render() {\n    let form = (\n      <Form\n        {...this.state}\n        onSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n    if (this.props.loading) {\n      form = (\n        <div className=\"spinner\">\n          <SyncLoader />\n        </div>\n      );\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <div className=\"form-component__error\">\n          <p>{lookupErrorCode(this.props.error.message)}</p>\n        </div>\n      );\n    }\n\n    let redirect = null;\n    if (this.props.isAuthenticated) {\n      if (this.props.location.fromCheckout) {\n        redirect = (\n          <Redirect\n            to={{ pathname: \"/checkout/order-type\", fromSignUp: \"true\" }}\n          />\n        );\n      } else {\n        redirect = <Redirect to={{ pathname: \"/\", fromSignUp: \"true\" }} />;\n      }\n    }\n\n    return (\n      <div className=\"form-container\">\n        <div className=\"form-component\">\n          <h3 className=\"form-component__title\">Sign up for an account</h3>\n          {redirect}\n          {errorMessage}\n          {form}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.auth.loading,\n  error: state.auth.error,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { signUp })(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  validateAddress,\n  validateAddressReset\n} from \"../../store/checkout/checkoutActions\";\nimport { SyncLoader } from \"react-spinners\";\nimport { withRouter } from \"react-router-dom\";\nimport Form from \"../Form/Form\";\nimport axios from \"axios\";\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\n\n/* Delivery address form */\nclass AddressForm extends Component {\n  state = {\n    form: {\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: \"Street Address\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false\n      },\n      unit: {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: \"Apt/Unit #\"\n        },\n        validation: {\n          isNumeric: true\n        },\n        errorMessage: \"Please enter only the Apt/Unit number\",\n        value: \"\",\n        valid: true\n      },\n      city: {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: \"City\"\n        },\n        value: \"\",\n        validation: {\n          hasLength: 2,\n          required: true\n        },\n        valid: false\n      },\n      state: {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: \"State\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false\n      },\n      zipcode: {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: \"ZIP Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false\n      }\n    },\n    formIsValid: false,\n    formSubmitted: false\n  };\n  constructor(props) {\n    super(props);\n    this.props.validateAddressReset();\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.validateAddress(this.state.form);\n    }\n  };\n\n  updateForm = stateUpdate => {\n    this.setState(stateUpdate);\n  };\n\n  componentDidUpdate() {\n    if (this.props.addressValid) {\n      this.props.history.push(\"/checkout\");\n    }\n  }\n\n  render() {\n    let errorMessage = null;\n    let form = null;\n    if (this.props.loading) {\n      form = (\n        <div className=\"spinner\">\n          <SyncLoader />\n        </div>\n      );\n    } else {\n      form = (\n        <Form\n          {...this.state}\n          onSubmit={this.handleSubmit}\n          updateForm={this.updateForm}\n        />\n      );\n    }\n\n    if (this.props.error) {\n      errorMessage = (\n        <div className=\"form-component__error\">\n          <p>{this.props.error}</p>\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <h4 className=\"form-component__title\">Please enter your delivery address</h4>\n        {errorMessage}\n        {form}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  addressValid: state.checkout.addressValid,\n  error: state.checkout.addressValidationError,\n  loading: state.checkout.validatingAddress\n});\nexport default connect(mapStateToProps, {\n  validateAddress,\n  validateAddressReset\n})(withRouter(withErrorHandler(AddressForm, axios)));\n","import React, { Component } from \"react\";\nimport \"./OrderType.scss\";\nimport { MdDirectionsCar, MdStore } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport AddressForm from \"../AddressForm/AddressForm\";\nimport Message from \"../../components/UI/Message/Message\";\nimport SignedUpMessage from \"../../components/Messages/SignedUpMessage/SignedUpMessage\";\n\n/* Options for choosing either carryout or delivery order */\nclass OrderType extends Component {\n  state = {\n    isDelivery: false,\n  };\n\n  handleClick = (event) => {\n    if (event.currentTarget.dataset.type === \"Delivery\") {\n      this.setState({ isDelivery: true });\n    } else {\n      this.props.history.push(\"/checkout\");\n    }\n  };\n\n  render() {\n    let message = null;\n    if (this.props.location.fromSignUp) {\n      message = (\n        <Message>\n          <SignedUpMessage />\n        </Message>\n      );\n    }\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/signin\",\n            fromCheckout: \"true\",\n          }}\n        />\n      );\n    }\n\n    let form = null;\n\n    if (this.state.isDelivery) {\n      form = <AddressForm />;\n    }\n\n    let orderTypeClassNames = [\"order-type\"];\n    let deliveryClassNames = [\"order-type__type\"];\n    let iconClassNames = [\"order-type__icon\"];\n    if (this.state.isDelivery) {\n      orderTypeClassNames.push(\"order-type--extended\");\n      deliveryClassNames.push(\"order-type__type--selected\");\n      iconClassNames.push(\"order-type__icon--selected\");\n    }\n\n    return (\n      <React.Fragment>\n        {message}\n        <div className=\"form-container\">\n          <div className=\"form-component\">\n            <div className={orderTypeClassNames.join(\" \")}>\n              <div\n                onClick={this.handleClick}\n                data-type=\"Delivery\"\n                className={deliveryClassNames.join(\" \")}\n              >\n                <div className={iconClassNames.join(\" \")}>\n                  <MdDirectionsCar />\n                </div>\n                <span className=\"order-type__description\">Delivery</span>\n              </div>\n              <div\n                onClick={this.handleClick}\n                data-type=\"Carryout\"\n                className=\"order-type__type\"\n              >\n                <div className=\"order-type__icon\">\n                  <MdStore />\n                </div>\n                <span className=\"order-type__description\">Carryout</span>\n              </div>\n            </div>\n            {form}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, null)(OrderType);\n","import React from \"react\";\n\n/* Displays delivery address in the correct format */\nconst DeliveryAddress = (props) => {\n  return (\n    <span className=\"address-container\">\n      <h2>Delivery Address:&nbsp;</h2>\n      <span className=\"address\">\n        <h3>\n          {props.deliveryAddress.street}, Apt/Unit #\n          {props.deliveryAddress.secondary}\n        </h3>\n        <h3>\n          {props.deliveryAddress.city}, {props.deliveryAddress.state}{\" \"}\n          {props.deliveryAddress.zipcode}\n        </h3>\n      </span>\n    </span>\n  );\n};\n\nexport default DeliveryAddress;\n","import React, { Component } from \"react\";\nimport CartItems from \"../../components/CartItems/CartItems\";\nimport {\n  handleEditItem,\n  handleChangeItemQuantity,\n  handleRemoveItem,\n} from \"../../shared/util\";\nimport Button, { primary } from \"../../components/UI/Button/Button\";\nimport { connect } from \"react-redux\";\nimport { submitOrder } from \"../../store/checkout/checkoutActions\";\nimport { emptyCart } from \"../../store/cart/cartActions\";\nimport { changeItemQuantity, removeItem } from \"../../store/cart/cartActions\";\nimport { initializePizzaBuilder } from \"../../store/pizzaBuilder/pizzaBuilderActions\";\nimport { calculateSubTotal, calculateTax } from \"../../shared/util\";\nimport { SyncLoader } from \"react-spinners\";\nimport DeliveryAddress from \"../../components/DeliveryAddress/DeliveryAddress\";\nimport axiosFirebase from \"../../axiosFirebase\";\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\n\n/* Order summary and ability to submit an order */\nclass Checkout extends Component {\n  handleSubmitOrder = (total) => {\n    if (this.props.idToken) {\n      this.props.submitOrder(\n        total,\n        this.props.items,\n        this.props.idToken,\n        this.props.userId\n      );\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.submittingOrder && !this.props.submittingOrder && !this.props.submitOrderError) {\n      this.props.history.push({ pathname: \"/\", fromCheckout: \"true\" });\n      this.props.emptyCart(this.props.userId);\n    }\n  }\n\n  render() {\n    const subTotal = calculateSubTotal(this.props.items);\n    const tax = calculateTax(subTotal);\n    const total = (+subTotal + +tax).toFixed(2);\n    let deliveryAddress = null;\n    if (this.props.deliveryAddress) {\n      deliveryAddress = (\n        <DeliveryAddress deliveryAddress={this.props.deliveryAddress} />\n      );\n    }\n\n    let submitOrder = null;\n    if (this.props.submittingOrder) {\n      submitOrder = (\n        <Button type={primary}>\n          <SyncLoader color=\"white\" />\n        </Button>\n      );\n    } else {\n      submitOrder = (\n        <Button onClick={() => this.handleSubmitOrder(total)} type={primary}>\n          <span>Place Order</span>\n        </Button>\n      );\n    }\n\n    let cart = null;\n    if (this.props.loading) {\n      cart = (\n        <div className=\"item-list__empty\">\n          <SyncLoader />\n        </div>\n      );\n    } else if (Object.keys(this.props.items).length > 0) {\n      cart = (\n        <React.Fragment>\n          <CartItems\n            handleEditItem={(pizza, quantity, itemId) =>\n              handleEditItem(this.props, pizza, quantity, itemId)\n            }\n            handleRemoveItem={(itemId, pizza) =>\n              handleRemoveItem(this.props, itemId, pizza)\n            }\n            handleChangeItemQuantity={(event, itemId) =>\n              handleChangeItemQuantity(this.props, itemId, event.target.value)\n            }\n            checkout\n            items={this.props.items}\n          />\n          <div className=\"item-list__bottom\">\n            {deliveryAddress}\n            <div className=\"totals\">\n              <div className=\"totals__line-items\">\n                <div className=\"totals__line-item\">\n                  <h3>Subtotal:</h3> <h3>${subTotal}</h3>\n                </div>\n                <div className=\"totals__line-item\">\n                  <h3>Tax:</h3> <h3>${tax}</h3>\n                </div>\n                <div className=\"totals__line-item\">\n                  <h3>Total:</h3> <h3>${total}</h3>\n                </div>\n              </div>\n\n              {submitOrder}\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      cart = (\n        <div className=\"item-list__empty\">\n          <h2>Your cart is empty!</h2>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"item-list-container\">\n        <div className=\"item-list\">\n          <h1 className=\"item-list__title\">Order Summary</h1>\n          {cart}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  idToken: state.auth.idToken,\n  userId: state.auth.userId,\n  loadingCart: state.cart.loadingCart,\n  submittingOrder: state.checkout.submittingOrder,\n  deliveryAddress: state.checkout.deliveryAddress,\n  submitOrderError: state.checkout.submitOrderError\n});\n\nexport default connect(mapStateToProps, {\n  submitOrder,\n  emptyCart,\n  removeItem,\n  initializePizzaBuilder,\n  changeItemQuantity,\n})(withErrorHandler(Checkout, axiosFirebase));\n","import React, { Component } from \"react\";\nimport \"./Sidebar.scss\";\nimport { connect } from \"react-redux\";\nimport PizzaMenuItems from \"../../components/MenuItems/PizzaMenuItems/PizzaMenuItems\";\nimport AccountMenuItems from \"../../components/MenuItems/AccountMenuItems/AccountMenuItems\";\nimport { closeSidebar } from \"../../store/ui/uiActions\";\nimport NavigationItem from \"../../components/UI/NavigationItem/NavigationItem\";\n\n/* Sidebar menu with pizza menu items and account menu items */\nclass Sidebar extends Component {\n  handleClickMenuItem = () => {\n    this.props.closeSidebar();\n  };\n\n  render() {\n    let sidebarContainerClassNames = [\"sidebar-container\"];\n    let sidebarClassNames = [\"sidebar\"];\n    if (!this.props.sidebarOpen) {\n      sidebarClassNames.push(\"sidebar--closed\");\n      sidebarContainerClassNames.push(\"sidebar-container--closed\");\n    }\n\n    return (\n      <div className={sidebarContainerClassNames.join(\" \")}>\n        <div className={sidebarClassNames.join(\" \")}>\n          <div className=\"sidebar__menu-items\">\n            <PizzaMenuItems vertical onClick={this.handleClickMenuItem} />\n          </div>\n          <div className=\"sidebar__account\">\n            <NavigationItem\n              vertical\n              to=\"/cart\"\n              onClick={this.handleClickMenuItem}\n            >\n              Cart\n            </NavigationItem>\n            <AccountMenuItems vertical onClick={this.handleClickMenuItem} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  sidebarOpen: state.ui.sidebarOpen,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { closeSidebar })(Sidebar);\n","import React from \"react\";\nimport PizzaPreview from \"../../../components/PizzaPreview/PizzaPreview\";\nimport PizzaDescription from \"../../../components/PizzaDescription/PizzaDescription\";\n\n/* Represents a single submitted order */\nconst Order = (props) => {\n  return (\n    <div className=\"item item--order\">\n      <div className=\"item__pizza\">\n        <div className=\"item__preview\">\n          <PizzaPreview small pizza={props.pizza} />\n        </div>\n        <div className=\"item__description\">\n          <PizzaDescription\n            order\n            quantity={props.quantity}\n            pizza={props.pizza}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport \"./Orders.scss\";\nimport { getOrders } from \"../../store/checkout/checkoutActions\";\nimport { connect } from \"react-redux\";\nimport Order from \"./Order/Order\";\nimport { getReadableDate } from \"../../shared/util\";\nimport { SyncLoader } from \"react-spinners\";\nimport DeliveryAddress from \"../../components/DeliveryAddress/DeliveryAddress\";\nimport axiosFirebase from \"../../axiosFirebase\";\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\n\n/* Contains a list of all submitted orders */\nclass Orders extends Component {\n  render() {\n    let orders = null;\n    if (\n      !this.props.idToken ||\n      this.props.gettingOrders ||\n      this.props.getOrdersError ||\n      Object.entries(this.props.orders).length === 0\n    ) {\n      let ordersContent = null;\n      if (!this.props.idToken) {\n        ordersContent = <h2>Sign in to see your orders!</h2>;\n      } else if (this.props.gettingOrders) {\n        ordersContent = <SyncLoader />;\n      } else if (this.props.getOrdersError) {\n        ordersContent = <h2>Unable to retrieve your orders!</h2>;\n      } else {\n        ordersContent = <h2>You have no orders yet!</h2>\n      }\n\n      orders = (\n        <div className=\"item-list-container\">\n          <div className=\"item-list\">\n            <div className=\"item-list__title\">\n              <h1>Orders</h1>\n            </div>\n            <div className=\"item-list__empty\">{ordersContent}</div>\n          </div>\n        </div>\n      );\n    } else {\n      orders = (\n        <React.Fragment>\n          {Object.entries(this.props.orders)\n            .sort(([itemId1, item1], [itemId2, item2]) => {\n              const item1Time = new Date(item1.date).getTime();\n              const item2Time = new Date(item2.date).getTime();\n              return -(item1Time - item2Time);\n            })\n            .map(([orderId, order]) => {\n              let orderType = null;\n\n              if (order.deliveryAddress) {\n                orderType = (\n                  <DeliveryAddress deliveryAddress={order.deliveryAddress} />\n                );\n              } else {\n                orderType = <h2>Carryout Order</h2>;\n              }\n              return (\n                <div key={orderId} className=\"item-list-container\">\n                  <div className=\"item-list item-list--order\">\n                    <div className=\"item-list__title\">\n                      <span className=\"order__date-address\">\n                        <span className=\"order__date\">\n                          <h2>Order placed on:&nbsp;</h2>\n                          <h3> {getReadableDate(order.date)}</h3>\n                        </span>\n                        {orderType}\n                      </span>\n\n                      <span className=\"order__total\">\n                        <h2>Total:&nbsp;</h2>\n                        <h3>${order.total}</h3>\n                      </span>\n                    </div>\n\n                    {Object.entries(order.items).map(([itemId, item]) => {\n                      return (\n                        <Order\n                          key={itemId}\n                          quantity={item.quantity}\n                          pizza={item.pizza}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n        </React.Fragment>\n      );\n    }\n\n    return orders;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  idToken: state.auth.idToken,\n  userId: state.auth.userId,\n  orders: state.checkout.orders,\n  gettingOrders: state.checkout.gettingOrders,\n  getOrdersError: state.checkout.getOrdersError\n});\n\nexport default connect(mapStateToProps, { getOrders })(\n  withErrorHandler(Orders, axiosFirebase)\n);\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Layout from \"./components/Layout/Layout/Layout\";\nimport Home from \"./components/PizzaCategories/Home/Home\";\nimport Meats from \"./components/PizzaCategories/Meats/Meats\";\nimport Veggies from \"./components/PizzaCategories/Veggies/Veggies\";\nimport Chicken from \"./components/PizzaCategories/Chicken/Chicken\";\nimport PizzaBuilder from \"./containers/PizzaBuilder/PizzaBuilder\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Cart from \"./containers/Cart/Cart\";\nimport SignIn from \"./containers/Auth/SignIn/SignIn\";\nimport SignOut from \"./containers/Auth/SignOut/SignOut\";\nimport SignUp from \"./containers/Auth/SignUp/SignUp\";\nimport { initApp } from \"./store/auth/authActions\";\nimport { connect } from \"react-redux\";\nimport OrderType from \"./containers/OrderType/OrderType\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Sidebar from \"./containers/Sidebar/Sidebar\";\nimport Orders from \"./containers/Orders/Orders\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initApp();\n  }\n\n\n  render() {\n    return (\n      <Layout>\n        <PizzaBuilder />\n        <Sidebar />\n        <Switch>\n          <Route exact path=\"/checkout\" component={Checkout} />\n          <Route path=\"/checkout/order-type\" component={OrderType} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/my-orders\" component={Orders} />\n          <Route path=\"/signout\" component={SignOut} />\n          <Route path=\"/cart\" component={Cart} />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/meats\" exact component={Meats} />\n          <Route path=\"/veggies\" exact component={Veggies} />\n          <Route path=\"/chicken\" exact component={Chicken} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null, { initApp } )(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"./pizzaBuilderActionTypes\";\nimport { CLASSIC_MARINARA, REGULAR_SAUCE } from \"../../metadata/sauceMetadata\";\nimport { HAND_TOSSED } from \"../../metadata/crustMetadata\";\nimport { LARGE } from \"../../metadata/sizeMetadata\";\nimport { REGULAR_CHEESE } from \"../../metadata/cheeseMetadata\";\nimport { NO_CRUST_FLAVOR } from \"../../metadata/crustFlavorMetadata\";\nimport {\n  CRUST,\n  SIZE,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n  WHOLE,\n  REGULAR_TOPPING,\n} from \"../../metadata/pizzaProperties\";\nimport { REGULAR } from \"../../metadata/comboMetadata\";\n\nconst initialState = {\n  showPizzaBuilder: false,\n  itemId: null,\n  pizza: {\n    priceType: REGULAR,\n    [CRUST]: HAND_TOSSED,\n    [SIZE]: LARGE,\n    [MEATS]: {},\n    [VEGGIES]: {},\n    [SAUCE]: CLASSIC_MARINARA,\n    [SAUCE_AMOUNT]: REGULAR_SAUCE,\n    [CHEESE_AMOUNT]: REGULAR_CHEESE,\n    [CRUST_FLAVOR]: NO_CRUST_FLAVOR,\n    [COMBO_NAME]: null,\n  },\n};\n\nconst pizzaBuilderReducer = (state = initialState, action) => {\n  let toppings = null;\n  let topping = null;\n  switch (action.type) {\n    case actionTypes.INIT_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: true,\n        itemId: action.itemId,\n        pizza: {\n          [CHEESE_AMOUNT]: action.pizza[CHEESE_AMOUNT]\n            ? action.pizza[CHEESE_AMOUNT]\n            : REGULAR_CHEESE,\n          [COMBO_NAME]: action.pizza[COMBO_NAME]\n            ? action.pizza[COMBO_NAME]\n            : null,\n          [CRUST]: action.pizza[CRUST],\n          [CRUST_FLAVOR]: action.pizza[CRUST_FLAVOR]\n            ? action.pizza[CRUST_FLAVOR]\n            : NO_CRUST_FLAVOR,\n          [MEATS]: action.pizza[MEATS],\n          price: action.pizza.price,\n          priceType: action.pizza.priceType,\n          [SAUCE]: action.pizza[SAUCE] ? action.pizza[SAUCE] : CLASSIC_MARINARA,\n          [SAUCE_AMOUNT]: action.pizza[SAUCE_AMOUNT]\n            ? action.pizza[SAUCE_AMOUNT]\n            : REGULAR_SAUCE,\n          [SIZE]: action.pizza[SIZE],\n          [VEGGIES]: action.pizza[VEGGIES],\n        },\n        quantity: action.quantity,\n      };\n    case actionTypes.CLOSE_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: false,\n      };\n    case actionTypes.SET_PROPERTY:\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: action.value,\n        },\n      };\n    case actionTypes.TOGGLE_TOPPING:\n      toppings = state.pizza[action.property]\n        ? { ...state.pizza[action.property] }\n        : {};\n      if (toppings[action.value]) {\n        delete toppings[action.value];\n      } else {\n        toppings[action.value] = { amount: REGULAR_TOPPING, portion: WHOLE };\n      }\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: toppings,\n        },\n      };\n    case actionTypes.SET_TOPPING_AMOUNT:\n      toppings = state.pizza[action.property]\n        ? { ...state.pizza[action.property] }\n        : {};\n\n      topping = toppings[action.topping];\n      topping.amount = action.value;\n      toppings[action.topping] = topping;\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: toppings,\n        },\n      };\n      case actionTypes.SET_TOPPING_PORTION:\n      toppings = state.pizza[action.property]\n        ? { ...state.pizza[action.property] }\n        : {};\n\n      topping = toppings[action.topping];\n      topping.portion = action.value;\n      toppings[action.topping] = topping;\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: toppings,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pizzaBuilderReducer;\n","import * as actionTypes from \"./cartActionTypes\";\nimport hash from \"object-hash\";\n\nconst initialState = {\n  cartId: null,\n  userId: null,\n  items: {},\n  quantity: 0,\n  itemHashMap: {},\n  itemAdded: false,\n  loadingCart: false,\n  loadingCartItem: false,\n  itemBeingChanged: null,\n  erroredAction: null,\n};\n\nconst cartReducer = (state = initialState, action) => {\n  let items = null;\n  let itemHashMap = null;\n  let quantity;\n  let itemAdded = false;\n  switch (action.type) {\n    //set cart id and user id once cart has been created \n    case actionTypes.CREATE_CART:\n      return {\n        ...state,\n        cartId: action.cartId,\n        userId: action.userId,\n      };\n    //add item to cart, update pizza to item id hashmap and quantity\n    case actionTypes.ADD_TO_CART:\n      items = { ...state.items, [action.itemId]: action.item };\n      quantity = state.quantity + +action.item.quantity;\n      itemHashMap = { ...state.itemHashMap };\n      itemHashMap[hash(action.item.pizza)] = action.itemId;\n      console.log(items);\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        itemHashMap: itemHashMap,\n        itemAdded: action.item.quantity,\n      };\n    case actionTypes.GET_CART_START:\n      return {\n        ...state,\n        loadingCart: true,\n        errorCart: null,\n      };\n    case actionTypes.GET_CART_FAILED:\n      return {\n        ...state,\n        loadingCart: false,\n      };\n    case actionTypes.GET_CART_SUCCESS:\n      return {\n        ...state,\n        cartId: action.cartId,\n        userId: action.userId,\n        items: action.items,\n        quantity: action.quantity,\n        itemHashMap: action.itemHashMap,\n        loadingCart: false,\n      };\n    case actionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartId: null,\n        userId: null,\n        items: {},\n        quantity: 0,\n        itemHashMap: {},\n        itemAdded: null,\n      };\n    case actionTypes.SET_CART_ITEMS:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        itemHashMap: action.itemHashMap,\n      };\n    case actionTypes.CHANGE_ITEM_QUANTITY:\n      items = { ...state.items };\n      quantity = state.quantity - items[action.itemId].quantity;\n      items[action.itemId].quantity = action.quantity;\n      quantity += parseInt(action.quantity);\n      if (state.quantity < quantity) {\n        itemAdded = quantity - state.quantity;\n      }\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        itemAdded: itemAdded,\n        loadingCartItem: false\n      };\n    case actionTypes.CHANGE_CART_ITEM_START:\n      return {\n        ...state,\n        loadingCartItem: true,\n        itemBeingChanged: action.itemBeingChanged,\n      };\n    case actionTypes.CHANGE_CART_ITEM_FAILED:\n      return {\n        ...state,\n        loadingCartItem: false,\n        itemBeingChanged: null,\n      };\n    case actionTypes.REMOVE_ITEM_SUCCESS:\n      items = { ...state.items };\n      itemHashMap = { ...state.itemHashMap };\n      quantity = state.quantity - items[action.itemId].quantity;\n      delete items[action.itemId];\n      delete itemHashMap[hash(action.pizza)];\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        itemHashMap: itemHashMap,\n        itemAdded: null,\n        loadingCartItem: false,\n        itemBeingChanged: null,\n      };\n    case actionTypes.SAVE_TO_CART:\n      items = { ...state.items };\n      quantity = state.quantity - items[action.itemId].quantity;\n      items[action.itemId] = action.item;\n      quantity += +action.item.quantity;\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        itemAdded: null,\n        loadingCartItem: false\n      };\n    case actionTypes.EMPTY_CART:\n      items = {};\n      return {\n        ...state,\n        items: items,\n        quantity: 0,\n        itemAdded: null,\n        itemHashMap: {}\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import * as actionTypes from \"./checkoutActionTypes\";\n\nconst initialState = {\n  userInfo: null,\n  orders: {},\n  validatingAddress: false,\n  addressValid: false,\n  addressValidationError: null,\n  deliveryAddress: null,\n  gettingOrders: false,\n  submittingOrder: false,\n  submitOrderError: false,\n  getOrdersError: false\n};\n\nconst checkoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_ORDER_START:\n      return {\n        ...state,\n        submittingOrder: true,\n        submitOrderError: false\n      };\n    case actionTypes.SUBMIT_ORDER:\n      const orders = { ...state.orders, [action.orderId]: action.order };\n      return {\n        ...state,\n        orders: orders,\n        submittingOrder: false,\n      };\n    case actionTypes.SUBMIT_ORDER_FAILED:\n      return {\n        ...state,\n        submittingOrder: false,\n        submitOrderError: true\n      };\n    case actionTypes.GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        gettingOrders: false,\n        orders: action.orders,\n      };\n    case actionTypes.GET_ORDERS_START:\n      return {\n        ...state,\n        gettingOrders: true,\n        getOrdersError: false\n      };\n    case actionTypes.GET_ORDERS_FAILED:\n      return {\n        ...state,\n        gettingOrders: false,\n        getOrdersError: true\n      };\n    case actionTypes.VALIDATE_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        addressValid: true,\n        addressValidationError: null,\n        validatingAddress: false,\n        deliveryAddress: action.deliveryAddress,\n      };\n    case actionTypes.VALIDATE_ADDRESS_FAILED:\n      return {\n        ...state,\n        addressValid: false,\n        addressValidationError: action.error,\n        validatingAddress: false,\n      };\n    case actionTypes.VALIDATE_ADDRESS_START:\n      return {\n        ...state,\n        validatingAddress: true,\n        addressValidationError: null,\n      };\n    case actionTypes.VALIDATE_ADDRESS_RESET:\n      return {\n        ...state,\n        validatingAddress: false,\n        addressValid: false,\n        addressValidationError: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default checkoutReducer;\n","import * as actionTypes from \"./authActionTypes\";\n\nconst initialState = {\n  idToken: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //set loading to true and reset error\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        error: null,\n        loading: true\n      };\n    //successfully authenticated \n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        idToken: action.idToken,\n        userId: action.userId,\n        error: null\n      };\n    //set error and reset loading when auth failed\n    case actionTypes.AUTH_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    //reset user data on signout\n    case actionTypes.AUTH_SIGNOUT:\n      return {\n        ...state,\n        idToken: null,\n        userId: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"./uiActionTypes\";\n\nconst initialState = {\n  sidebarOpen: false,\n  erroredAction: null,\n};\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TOGGLE_SIDEBAR:\n      let sidebarOpen = state.sidebarOpen;\n      return {\n        ...state,\n        sidebarOpen: !sidebarOpen,\n      };\n    case actionTypes.CLOSE_SIDEBAR:\n      return {\n        ...state,\n        sidebarOpen: false,\n      };\n    case actionTypes.SET_ERRORED_ACTION:\n      return {\n        ...state,\n        erroredAction: action.erroredAction,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default uiReducer;\n","import { combineReducers } from \"redux\";\nimport pizzaBuilderReducer from \"./pizzaBuilder/pizzaBuilderReducer\";\nimport cartReducer from \"./cart/cartReducer\";\nimport checkoutReducer from \"./checkout/checkoutReducer\";\nimport authReducer from \"./auth/authReducer\";\nimport uiReducer from \"./ui/uiReducer\";\n\nexport default combineReducers({\n  pizzaBuilder: pizzaBuilderReducer,\n  cart: cartReducer,\n  checkout: checkoutReducer,\n  auth: authReducer,\n  ui: uiReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst middleware = [thunk];\n\nconst initialState = {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n/* Scroll to top of page when it is loaded */\nconst ScrollToTop = ({history, children}) => {\n    useEffect(() => {\n        history.listen(() => {\n            window.scrollTo(0,0);\n        })\n    }, [history]);\n    return children;\n}\n\nexport default withRouter(ScrollToTop);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ScrollToTop from \"./hoc/ScrollToTop\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/pizza-me\">\n    <Provider store={store}>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}