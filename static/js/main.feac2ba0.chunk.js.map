{"version":3,"sources":["assets/images/pizza_supreme.png","assets/images/topping_GreenBellPepper_ML_reg.png","assets/images/pizza_meat_lovers.png","assets/images/alarm-clock.png","assets/images/crust_ht_NoFinish.png","assets/images/icon_crust_ht.png","assets/images/crust_thin_NoFinish.png","assets/images/icon_crust_thin.png","assets/images/crust_pan_NoFinish.png","assets/images/icon_crust_pan.png","assets/images/topping_Pepperoni_ML_reg.png","assets/images/topping_Pepperoni_ML_extra.png","assets/images/icon_topping_Pepperoni.png","assets/images/topping_ItalianSausage_ML_reg.png","assets/images/topping_ItalianSausage_ML_extra.png","assets/images/icon_topping_ItalianSausage.png","assets/images/topping_Ham_ML_reg.png","assets/images/topping_Ham_ML_extra.png","assets/images/icon_topping_Ham.png","assets/images/topping_Bacon_ML_reg.png","assets/images/topping_Bacon_ML_extra.png","assets/images/icon_topping_Bacon.png","assets/images/topping_Chicken_ML_reg.png","assets/images/topping_Chicken_ML_extra.png","assets/images/icon_topping_Chicken.png","assets/images/topping_Beef_ML_reg.png","assets/images/topping_Beef_ML_extra.png","assets/images/icon_topping_Beef.png","assets/images/topping_Pork_ML_reg.png","assets/images/topping_Pork_ML_extra.png","assets/images/icon_topping_Pork.png","assets/images/topping_Mushroom_ML_reg.png","assets/images/topping_Mushroom_ML_extra.png","assets/images/icon_topping_Mushroom.png","assets/images/topping_Spinach_Fresh_ML_reg.png","assets/images/topping_Spinach_Fresh_ML_extra.png","assets/images/icon_topping_Spinach_fresh.png","assets/images/topping_Onion_red_ML_reg.png","assets/images/topping_Onion_red_ML_extra.png","assets/images/icon_topping_Onion_Red.png","assets/images/topping_Olives_black_ML_reg.png","assets/images/topping_Olives_black_ML_extra.png","assets/images/icon_topping_Olive_black.png","assets/images/icon_topping_GreenBellPepper.png","assets/images/topping_BananaPepper_ML_reg.png","assets/images/topping_BananaPepper_ML_extra.png","assets/images/icon_topping_BananaPepper.png","assets/images/topping_Pineapple_ML_reg.png","assets/images/topping_Pineapple_ML_extra.png","assets/images/icon_topping_Pineapple.png","assets/images/topping_Jalepeno_ML_reg.png","assets/images/topping_Jalepeno_ML_extra.png","assets/images/icon_topping_Jalapeno.png","assets/images/topping_Tomato_ML_reg.png","assets/images/topping_Tomato_ML_extra.png","assets/images/icon_topping_Tomato.png","assets/images/icon_sauce_Marinara.png","assets/images/icon_sauce_CreamyGarlicParm.png","assets/images/icon_sauce_BBQ.png","assets/images/icon_sauce_Buffalo.png","assets/images/crust_ht_GarlicButteryBlend.png","assets/images/crust_thin_GarlicButteryBlend.png","assets/images/crust_pan_GarlicButteryBlend.png","assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png","assets/images/crust_ht_ToastedParmesan.png","assets/images/crust_thin_ToastedParmesan.png","assets/images/crust_pan_ToastedParmesan.png","assets/images/icon_finisher_ToastedParm_whole_2017.png","assets/images/icon_finisher_none_whole_2017.png","assets/images/pizza_pepperoni.jpg","assets/images/pizza_Pepperoni_Lovers.png","assets/images/pizza_Veggie_Lovers.png","assets/images/pizza_Ultimate_Cheese_Lovers.png","assets/images/pizza_Hawaiian_Chicken.png","assets/images/pizza_Chicken_Bacon_Parmesan.png","assets/images/pizza_Backyard_BBQ_Chicken.png","assets/images/pizza_Buffalo_Chicken.png","assets/images/cheese_mozz_ML.png","assets/images/pizza_cheese.jpg","components/UI/NavigationItem/NavigationItem.js","components/MenuItems/PizzaMenuItems/PizzaMenuItems.js","store/ui/uiActions.js","store/ui/uiActionTypes.js","components/MenuItems/AccountMenuItems/AccountMenuItems.js","components/UI/Button/Button.js","components/UI/DropdownAlert/DropdownAlert.js","components/CartIcon/CartIcon.js","containers/Header/Header.js","components/Layout/Footer/Footer.js","components/Layout/Layout/Layout.js","components/UI/Dropdown/Dropdown.js","metadata/crustMetadata.js","metadata/sizeMetadata.js","metadata/meatMetadata.js","metadata/veggiesMetadata.js","metadata/pizzaProperties.js","metadata/cheeseMetadata.js","metadata/sauceMetadata.js","metadata/crustFlavorMetadata.js","metadata/comboMetadata.js","store/pizzaBuilder/pizzaBuilderActions.js","store/pizzaBuilder/pizzaBuilderActionTypes.js","shared/axiosFirebase.js","shared/secureStorage.js","store/cart/cartActions.js","store/cart/cartActionTypes.js","store/ui/actionDisplays.js","metadata/priceMappings.js","store/pizzaBuilder/pizzaBuilderReducer.js","store/cart/cartReducer.js","store/checkout/checkoutReducer.js","store/checkout/checkoutActionTypes.js","store/auth/authReducer.js","store/auth/authActionTypes.js","store/ui/uiReducer.js","store/rootReducer.js","store/store.js","shared/util.js","containers/PizzaBox/PizzaBox.js","components/Messages/OrderSubmissionMessage/OrderSubmissionMessage.js","components/Messages/SignedOutMessage/SignedOutMessage.js","components/Messages/SignedUpMessage/SignedUpMessage.js","components/UI/Message/Message.js","components/PizzaCategories/Home/Home.js","components/PizzaCategories/Meats/Meats.js","components/PizzaCategories/Veggies/Veggies.js","components/PizzaCategories/Chicken/Chicken.js","components/PizzaPreview/PizzaPreview.js","components/PizzaBuilder/PizzaBuilderPreview/PizzaBuilderPreview.js","components/PizzaDescription/PizzaDescription.js","components/PizzaBuilder/PizzaDetails/PizzaDetails.js","components/PizzaBuilder/PizzaBuilderProgress/PizzaBuilderProgress.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/PizzaBuilder/BuilderOptions/ImageOptions/ImageOptions.js","components/PizzaBuilder/BuilderOptions/ButtonOptions/ButtonOptions.js","components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder.js","components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder.js","components/PizzaBuilder/BuilderOptions/ToppingOptions/ToppingOptions.js","components/UI/OptionsButton/OptionsButton.js","components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder.js","containers/PizzaBuilder/PizzaBuilder.js","containers/CartItem/CartItem.js","components/CartItems/CartItems.js","containers/Cart/Cart.js","store/checkout/checkoutActions.js","store/auth/authActions.js","components/UI/Input/Input.js","shared/formValidation.js","containers/Form/Form.js","containers/Auth/SignIn/SignIn.js","containers/Auth/SignOut/SignOut.js","containers/Auth/SignUp/SignUp.js","containers/AddressForm/AddressForm.js","containers/OrderType/OrderType.js","components/DeliveryAddress/DeliveryAddress.js","containers/Checkout/Checkout.js","containers/Sidebar/Sidebar.js","containers/Order/Order.js","containers/Orders/Orders.js","hoc/withErrorHandler.js","App.js","hoc/ScrollToTop.js","index.js"],"names":["module","exports","NavigationItem","props","classNames","vertical","push","navigationItemContent","className","join","children","to","onClick","PizzaMenuItems","setErroredAction","erroredAction","type","connect","state","isAuthenticated","auth","idToken","accountMenuItems","Fragment","Button","data-test","disabled","React","memo","key","alertKey","CartIcon","handleClickItemAddedAlert","history","handleClickCheckout","event","stopPropagation","nextProps","this","quantity","numItemsInCart","itemAdded","numItemsAdded","location","pathname","numItems","fromCheckout","style","height","Component","withRouter","Header","handleClickMenuIcon","toggleSidebar","bind","alt","src","PizzaTimeLogo","position","items","cart","Footer","Layout","Dropdown","value","onChange","options","map","option","crustTypes","crustMetadataMapping","preview","HandTossedPreview","icon","HandTossedIcon","ThinNCrispyPreview","ThinNCrispyIcon","OriginalPanPreview","OriginalPanIcon","additionalDisplay","sizes","meatImageMapping","PepperoniPreview","previewExtra","ExtraPepperoniPreview","PepperoniIcon","ItalianSausagePreview","ExtraItalianSausagePreview","ItalianSausageIcon","HamPreview","ExtraHamPreview","HamIcon","BaconPreview","ExtraBaconPreview","BaconIcon","GrilledChickenPreview","ExtraGrilledChickenPreview","GrilledChickenIcon","BeefPreview","ExtraBeefPreview","BeefIcon","PorkPreview","ExtraPorkPreview","PorkIcon","OLIVES","BELL_PEPPERS","veggiesImageMapping","MushroomsPreview","ExtraMushroomsPreview","MushroomsIcon","RoastedSpinachPreview","ExtraRoastedSpinachPreview","RoastedSpinachIcon","RedOnionsPreview","ExtraRedOnionsPreview","RedOnionsIcon","OlivesPreview","ExtraOlivesPreview","OlivesIcon","BellPeppersPreview","ExtraBellPeppersPreview","BellPeppersIcon","BananaPeppersPreview","ExtraBananaPeppersPreview","BananaPeppersIcon","PineapplePreview","ExtraPineapplePreview","PineappleIcon","JalapenoPeppersPreview","ExtraJalapenoPeppersPreview","JalapenoPeppersIcon","RomaTomatoesPreview","ExtraRomaTomatoesPreview","RomaTomatoesIcon","CRUST","SIZE","SAUCE","MEATS","VEGGIES","WHOLE","cheeseAmounts","cheeseAmountMetadataMapping","price","sauceImageMapping","ClassicMarinaraIcon","CreamyGarlicParmesanIcon","BarbequeIcon","BuffaloIcon","sauceAmounts","sauceAmountMetadataMapping","crust_flavors","crustFlavorImageMapping","NoCrustFlavorIcon","HTGarlicButteryBlendPreview","ThinGarlicButteryBlendPreview","PanGarlicButteryBlendPreview","GarlicButteryBlendIcon","HTToastedParmesanPreview","ThinToastedParmesanPreview","PanToastedParmesanPreview","ToastedParmesanIcon","REGULAR","COMBO","toppingMapping","amount","portion","initializePizzaBuilder","pizza","itemId","instance","axios","create","baseURL","process","interceptors","response","use","error","Promise","reject","CryptoJS","require","SECRET_KEY","secureStorage","SecureStorage","localStorage","hash","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","getTotalQuantity","totalQuantity","Object","values","forEach","item","parseInt","getCartFailed","getCart","userId","dispatch","cartId","axiosFirebase","get","then","res","entries","length","keys","localCart","getItem","remoteItemsQuantity","itemHashMap","generateItemHashMap","localItems","pizzaHash","matchingItemId","matchingItem","patch","setItem","combineCarts","post","name","createCart","addToCart","getState","meats","constructor","veggies","matchedItemIdInCart","newQuantity","changeItemQuantity","uuidv4","addNewItemToCart","setCartItems","changeCartItemStart","put","changeCartItemFailed","itemBeingChanged","removeItem","crustPriceMapping","sizePriceMapping","propertyPriceMapping","initialState","showPizzaBuilder","pizzaBuilderReducer","action","toppings","topping","priceType","property","loadingCart","loadingCartItem","cartReducer","errorCart","userInfo","orders","validatingAddress","addressValid","addressValidationError","deliveryAddress","gettingOrders","submittingOrder","submitOrderError","getOrdersError","checkoutReducer","orderId","order","signInError","signUpError","loading","authReducer","sidebarOpen","uiReducer","combineReducers","pizzaBuilder","checkout","ui","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","lookupErrorCode","errorCode","includes","calculatePrice","basePrice","propertyPrices","meatsPrice","veggiesPrice","getToppingsPrice","toFixed","toppingType","combo","toppingsPrice","toppingProps","comboIncludesTopping","extraToppingPrice","handleEditItem","handleChangeItemQuantity","handleRemoveItem","calculateSubTotal","subTotal","PizzaBox","getInitialState","pizzaType","resetState","setState","handleChangeQuantity","persist","target","getCrust","crustDisplayValue","match","exec","handleChangeCrust","handleChangeSize","handleClickBuild","crust","handleAddToCart","width","innerWidth","crustOptions","crustMetadata","sizeOptions","pizzaAdd","pizzaName","customize","customizeSecondary","buildPizza","size","imageSrc","OrderSubmission","display","SignedOutMessage","SignedUpMessage","Message","Home","message","fromSignOut","fromSignUp","CheesePizzaImg","PepperoniPizzaImg","MeatLoversPizzaImg","SupremePizzaImg","Meats","PepperoniLoversPizzaImg","Veggies","VeggieLoversPizzaImg","UltimateCheeseLoverPizzaImg","Chicken","HawaiianChickenPizzaImg","ChickenBaconParmesanImg","BBQChickenPizzaImg","BuffaloChickenPizzaImg","PizzaPreview","small","Cheese","meat","selectedMeatProps","imgClassNames","veggy","selectedVeggyProps","PizzaBuilderPreview","prevProps","PizzaDescription","sauce","cheeseAmount","crustFlavor","getToppingDescriptions","toppingDescriptions","toppingDescription","overallPrice","pizzaText","PizzaDetails","nextState","save","saveToCart","PizzaBuilderProgress","useEffect","stage","TOPPINGS","CHEESE_SAUCE","SIZE_CRUST","Backdrop","show","Modal","document","body","overflow","modalClassNames","clicked","modalClosed","ImageOptions","imageMapping","selected","itemSelected","selectionMetadata","data-value","ButtonOptions","selectionOptions","SizeCrustBuilder","e","proptTypes","PropTypes","object","isRequired","CheeseSauceBuilder","ToppingOptions","onClickAmount","onClickPortion","amountOptions","itemsSelected","checkMark","toppingOptionClasses","portionOptions","selection","data-topping","wholeSelection","leftSelection","rightSelection","OptionsButton","handleButtonClick","selectedOption","optionName","displayName","ToppingsBuilder","handleClickVeggies","handleClickMeats","toppingsBuilder","PizzaBuilder","handleClickStage","handleClickAction","handleCloseBuilder","closePizzaBuilder","handleClickProperty","setProperty","currentTarget","dataset","handleClickTopping","toggleTopping","handleClickAmount","setToppingAmount","handleClickPortion","setToppingPortion","handleSaveToCart","builder","back","next","getActionButton","buttonName","totalBuilder","remove","isEqual","editItem","CartItems","submitOrderFailed","getOrders","authSuccess","signOut","checkAuthTimeout","expirationTime","setTimeout","Input","inputElement","inputClasses","validationError","invalid","shouldValidate","touched","formSubmitted","errorMessage","elementType","elementConfig","label","handleInputChange","form","inputId","updatedForm","updatedFormElement","digits","replace","formatPhoneNumber","valid","checkValidity","validation","formIsValid","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","isPhoneNumber","Form","updatedFormData","updateForm","formElementsArray","id","config","formElement","onSubmit","SignIn","email","placeholder","password","handleSubmit","preventDefault","signIn","stateUpdate","redirect","a","authData","returnSecureToken","Date","getTime","expiresIn","localId","err","SignOut","SignUp","signUp","AddressForm","street","unit","city","hasLength","zipcode","validateAddress","validateAddressReset","addressForm","params","secondary","candidates","axiosGeolocation","matchCode","analysis","dpv_match_code","OrderType","isDelivery","handleClick","orderTypeClassNames","deliveryClassNames","iconClassNames","data-type","DeliveryAddress","Checkout","handleSubmitOrder","total","submitOrder","emptyCart","tax","calculateTax","color","date","Sidebar","handleClickMenuItem","closeSidebar","sidebarContainerClassNames","sidebarClassNames","Order","Orders","ordersContent","sort","item1","item2","orderType","givenDate","getMonth","getDate","getFullYear","getReadableDate","withErrorHandler","WrappedComponent","HOComponent","handleModalClosed","request","req","App","initApp","exact","path","component","Cart","timeToExpire","listen","scrollTo","ReactDOM","render","basename","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,6D,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,yE,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,kE,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,mVCA3CD,EAAOC,QAAU,IAA0B,0C,6qEC2C5BC,EArCQ,SAACC,GACtB,IAAIC,EAAa,CAAC,yBACdD,EAAME,UACRD,EAAWE,KAAK,mCAElB,IAAIC,EAEJA,EACE,0BAAMC,UAAWJ,EAAWK,KAAK,MAC/B,4BAAKN,EAAMO,WAmBf,OAdIP,EAAMQ,GAEN,kBAAC,IAAD,CAAMC,QAAST,EAAMS,QAASD,GAAIR,EAAMQ,GAAIH,UAAU,mBACnDD,GAKH,0BAAMK,QAAST,EAAMS,QAASJ,UAAU,mBACrCD,I,QCPMM,G,OAhBQ,SAACV,GACtB,OACE,yBAAKK,UAAU,oBACb,kBAAC,EAAD,iBAAoBL,EAApB,CAA2BS,QAAST,EAAMS,QAASD,GAAG,WAAtD,SAGA,kBAAC,EAAD,iBAAoBR,EAApB,CAA2BS,QAAST,EAAMS,QAASD,GAAG,aAAtD,WAGA,kBAAC,EAAD,iBAAoBR,EAApB,CAA2BS,QAAST,EAAMS,QAASD,GAAG,aAAtD,cCEOG,EAAmB,SAACC,GAC/B,MAAO,CACLC,KCjB8B,qBDkB9BD,cAAeA,IEeJE,eARS,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKC,WAOU,KAAzBJ,EA7BU,SAACd,GACxB,IAAImB,EACF,kBAAC,EAAD,iBAAoBnB,EAApB,CAA2BQ,GAAG,YAC5B,0CAeJ,OAZIR,EAAMgB,kBACRG,EACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,iBAAoBpB,EAApB,CAA2BQ,GAAG,eAA9B,aAGA,kBAAC,EAAD,iBAAoBR,EAApB,CAA2BQ,GAAG,aAA9B,cAMCW,KCMME,G,OArBA,SAACrB,GACd,OACE,4BACEsB,YAAU,SACVb,QAAST,EAAMS,QACfc,SAAUvB,EAAMuB,SAChBlB,UAAWL,EAAMa,MAEhBb,EAAMO,YCKEiB,I,OAAAA,IAAMC,MAjBC,SAACzB,GACrB,OACE,yBACE0B,IAAK1B,EAAM2B,SACXlB,QAAST,EAAMS,QACfJ,UAAU,uBAEV,yBAAKA,UAAU,kCAAkCL,EAAMO,eCJvDqB,G,4MACJC,0BAA4B,WAC1B,EAAK7B,MAAM8B,QAAQ3B,KAAK,U,EAG1B4B,oBAAsB,SAACC,GACrBA,EAAMC,mB,oEAGcC,GACpB,OAAIC,KAAKnC,MAAMoC,WAAaF,EAAUE,W,+BAOtC,IAAIC,EAAiB,KACjBF,KAAKnC,MAAMoC,SAAW,IACxBC,EACE,yBACEf,YAAU,WACVI,IAAG,UAAKS,KAAKnC,MAAMoC,SAAhB,cACH/B,UAAU,wCAET8B,KAAKnC,MAAMoC,WAIlB,IAAIE,EAAY,KAChB,GACEH,KAAKnC,MAAMuC,cAAgB,GACM,UAAjCJ,KAAKnC,MAAMwC,SAASC,UACa,cAAjCN,KAAKnC,MAAMwC,SAASC,SACpB,CACA,IAAIC,EAAW,KAEbA,EAD+B,IAA7BP,KAAKnC,MAAMuC,cACF,8BAAOJ,KAAKnC,MAAMuC,cAAlB,aAEA,8BAAOJ,KAAKnC,MAAMuC,cAAlB,cAEbD,EACE,kBAAC,GAAD,CACEhB,YAAU,YACVb,QAAS0B,KAAKN,0BACdF,SAAQ,UAAKQ,KAAKnC,MAAMoC,SAAhB,eAER,wBAAI/B,UAAU,sBAAsBqC,EAApC,kBACA,kBAAC,IAAD,CACEjC,QAAS0B,KAAKJ,oBACd1B,UAAU,mBACVG,GAAI,CACFiC,SAAUN,KAAKnC,MAAMgB,gBACjB,uBACA,UACJ2B,cAAc,IAGhB,kBAAC,EAAD,CAAQ9B,KF9DG,UE8DX,cAMR,OACE,yBAAK+B,MAAO,CAAEC,OAAQ,QAAUvB,YAAU,qBACxC,kBAAC,EAAD,CAAgBd,GAAG,QAAQc,YAAU,kBACnC,yBAAKjB,UAAU,4BAA4BiB,YAAU,YACnD,kBAAC,IAAD,MACCe,IAGJC,O,GAxEcQ,aAoFRC,eAAWnB,IC9EpBoB,G,kDACJ,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IAURiD,oBAAsB,WACpB,EAAKjD,MAAMkD,iBAZM,EAenBrB,0BAA4B,WAC1B,EAAK7B,MAAM8B,QAAQ3B,KAAK,UAhBP,EAmBnB4B,oBAAsB,SAACC,GACrBA,EAAMC,mBAlBN,EAAKF,oBAAsB,EAAKA,oBAAoBoB,KAAzB,gBAFV,E,kEAIGjB,GACpB,OAAIC,KAAKnC,MAAMoC,WAAaF,EAAUE,W,+BAmBtC,OACE,4BAAQ/B,UAAU,UAChB,yBAAKA,UAAU,gBACb,yBAAKI,QAAS0B,KAAKc,oBAAqB5C,UAAU,gBAChD,kBAAC,EAAD,KACE,yBAAKA,UAAU,gBACb,kBAAC,IAAD,SAIN,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,sBACrB,yBACE+C,IAAI,iBACJ/C,UAAU,eACVgD,IAAKC,MAEP,yBAAKjD,UAAU,iBACb,6CAGJ,yBAAKA,UAAU,sBACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,2BACb,kBAAC,EAAD,OAEF,yBAAKuC,MAAO,CAAEW,SAAU,aACtB,kBAAC,GAAD,CACEhB,cAAeJ,KAAKnC,MAAMuC,cAC1BH,SAAUD,KAAKnC,MAAMoC,kB,GAxDdU,aA6ENhC,gBAPS,SAACC,GAAD,MAAY,CAClCyC,MAAOzC,EAAM0C,KAAKD,MAClBpB,SAAUrB,EAAM0C,KAAKrB,SACrBG,cAAexB,EAAM0C,KAAKlB,cAC1BvB,gBAAiBD,EAAME,KAAKC,WAGU,CAAEgC,cNxFb,WAC3B,MAAO,CACLrC,KCL0B,oBK2FfC,CAA4CiC,YAAWC,KCxEvDU,I,OAdA,SAAC1D,GACd,OACE,4BAAQK,UAAU,UAChB,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAMG,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,cACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,kBACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,aCUOmD,I,OAhBA,SAAC3D,GACd,OACE,yBAAKK,UAAU,SAASiB,YAAU,UAChC,kBAAC,GAAD,CAAQA,YAAU,WAClB,0BAAMjB,UAAU,OAAOiB,YAAU,QAC9BtB,EAAMO,UAET,kBAAC,GAAD,CAAQe,YAAU,c,yBCUTsC,I,cAnBE,SAAC5D,GAChB,OACE,4BACE6D,MAAO7D,EAAM6D,MAAQ7D,EAAM6D,MAAQ,EACnCC,SAAU9D,EAAM8D,SAChBzD,UAAU,YAETL,EAAM+D,QAAQC,KAAI,SAACC,GAClB,OAAO,4BAAQvC,IAAKuC,GAASA,S,8HCAxBC,GAAa,CAJC,cACE,iBACD,gBAIfC,IAAoB,oBANN,cAOV,CACbC,QAASC,KACTC,KAAMC,OAHuB,eALJ,iBAUV,CACfH,QAASI,KACTF,KAAMG,OAPuB,eAJL,eAaV,CACdL,QAASM,KACTJ,KAAMK,KACNC,kBAAmB,WAZU,GCTpBC,GAAQ,CAJA,QACC,SACE,Y,ybC4BXC,IAAgB,oBARJ,YASV,CACXV,QAASW,KACTC,aAAcC,KACdX,KAAMY,OAJmB,eAPE,kBAaV,CACjBd,QAASe,KACTH,aAAcI,KACdd,KAAMe,OATmB,eANV,MAiBV,CACLjB,QAASkB,KACTN,aAAcO,KACdjB,KAAMkB,OAdmB,eALR,QAqBV,CACPpB,QAASqB,KACTT,aAAcU,KACdpB,KAAMqB,OAnBmB,eAJE,kBAyBV,CACjBvB,QAASwB,KACTZ,aAAca,KACdvB,KAAMwB,OAxBmB,eAHT,OA6BV,CACN1B,QAAS2B,KACTf,aAAcgB,KACd1B,KAAM2B,OA7BmB,eAFT,OAiCV,CACN7B,QAAS8B,KACTlB,aAAcmB,KACd7B,KAAM8B,OAlCmB,G,kiBCChBC,GAAS,6BACTC,GAAe,qBAMfC,IAAmB,oBAVP,YAWV,CACXnC,QAASoC,KACTxB,aAAcyB,KACdnC,KAAMoC,OAJsB,eATD,kBAeV,CACjBtC,QAASuC,KACT3B,aAAc4B,KACdtC,KAAMuC,OATsB,eARN,aAmBV,CACZzC,QAAS0C,KACT9B,aAAc+B,KACdzC,KAAM0C,OAdsB,eAgB7BX,GAAS,CACRjC,QAAS6C,KACTjC,aAAckC,KACd5C,KAAM6C,OAnBsB,eAqB7Bb,GAAe,CACdlC,QAASgD,KACTpC,aAAcqC,KACd/C,KAAMgD,OAxBsB,eALF,iBA+BV,CAChBlD,QAASmD,KACTvC,aAAcwC,KACdlD,KAAMmD,OA7BsB,eAJP,YAmCV,CACXrD,QAASsD,KACT1C,aAAc2C,KACdrD,KAAMsD,OAlCsB,eAHA,mBAuCV,CAClBxD,QAASyD,KACT7C,aAAc8C,KACdxD,KAAMyD,OAvCsB,eAFH,gBA2CV,CACf3D,QAAS4D,KACThD,aAAciD,KACd3D,KAAM4D,OA5CsB,GCtCnBC,GAAQ,QACRC,GAAO,OACPC,GAAQ,QAIRC,GAAQ,QACRC,GAAU,UAIVC,GAAQ,QCNRC,GAAgB,CAJD,QADE,UAEF,QACH,QASZC,GAA2B,gBAXZ,QAYV,CACdC,MAAO,W,oFCJEC,IAAiB,oBALE,mBAMV,CAClBtE,KAAMuE,OAFoB,eAJQ,yBAQV,CACxBvE,KAAMwE,OALoB,eAHN,WAUV,CACVxE,KAAMyE,OARoB,eAFP,UAYV,CACTzE,KAAM0E,OAXoB,GAoBjBC,GAAe,CAJD,QADE,UAEF,QACH,QAIXC,GAA0B,gBANZ,QAOV,CACbtE,kBAAmB,W,6LCnBVuE,GAAgB,CAJE,kBACK,uBACJ,oBAQnBC,IAAuB,oBAVL,kBAWV,CACjB9E,KAAM+E,OAF0B,eATA,wBASA,oBPdT,cOmBR,CACbjF,QAASkF,OANqB,ePbP,iBOqBR,CACflF,QAASmF,OATqB,ePZR,eOuBR,CACdnF,QAASoF,OAZqB,sBAc1BC,MAd0B,mBARJ,oBAQI,oBPdT,cO+BR,CACbrF,QAASsF,OAlBqB,ePbP,iBOiCR,CACftF,QAASuF,OArBqB,ePZR,eOmCR,CACdvF,QAASwF,OAxBqB,sBA0B1BC,MA1B0B,OCwBvBC,GAAU,UACVC,GAAQ,QAERC,IAAc,oBAhBL,UAgBK,oBAEtB1B,GAAQ,IAFc,eAGtBC,GAAU,IAHY,mBAfI,aAeJ,oBAMtBD,GANsB,gBN1BF,YMgCG,CAAE2B,OJ5CC,UI4CwBC,QAAS1B,MANrC,eAOtBD,GAAU,IAPY,mBAdD,gBAcC,oBAUtBD,IAVsB,oBN1BF,YMqCN,CAAE2B,OJjDU,UIiDeC,QAAS1B,KAX5B,eNxBR,MMoCN,CAAEyB,OJlDgB,UIkDSC,QAAS1B,KAZtB,eNpBP,OMiCN,CAAEyB,OJnDe,UImDUC,QAAS1B,KAbvB,eNrBP,OMmCN,CAAEyB,OJpDe,UIoDUC,QAAS1B,KAdvB,eNzBI,kBMwCN,CAAEyB,OJrDI,UIqDqBC,QAAS1B,KAflC,eNvBN,QMuCN,CAAEyB,OJtDc,UIsDWC,QAAS1B,KAhBxB,mBAkBtBD,GAAU,IAlBY,mBAZI,qBAYJ,oBAqBtBD,GArBsB,gBN1BF,YM+CG,CAAE2B,OJ5DD,QI4DwBC,QAAS1B,MArBnC,eAsBtBD,GAAU,IAtBY,mBAbJ,WAaI,oBAyBtBD,IAzBsB,oBN1BF,YMoDN,CAAE2B,OJhEU,UIgEeC,QAAS1B,KA1B5B,eNpBP,OM+CN,CAAEyB,OJjEe,UIiEUC,QAAS1B,KA3BvB,eNrBP,OMiDN,CAAEyB,OJlEe,UIkEUC,QAAS1B,KA5BvB,mBA8BtBD,IA9BsB,oBLpBF,YKmDN,CAAE0B,OJrEU,UIqEeC,QAAS1B,KA/B5B,eAgCpBlC,GAAe,CAAE2D,OJtEO,UIsEkBC,QAAS1B,KAhC/B,eLlBD,aKmDN,CAAEyB,OJvES,UIuEgBC,QAAS1B,KAjC7B,uBAXE,iBAWF,oBAqCtBF,IArCsB,oBN1BF,YMgEN,CAAE2B,OJ5EU,UI4EeC,QAAS1B,KAtC5B,eNpBP,OM2DN,CAAEyB,OJ7Ee,UI6EUC,QAAS1B,KAvCvB,eNrBP,OM6DN,CAAEyB,OJ9Ee,UI8EUC,QAAS1B,KAxCvB,eNxBR,MMiEN,CAAEyB,OJ/EgB,UI+ESC,QAAS1B,KAzCtB,eNzBI,kBMmEN,CAAEyB,OJhFI,UIgFqBC,QAAS1B,KA1ClC,mBA4CtBD,IA5CsB,oBLpBF,YKiEN,CAAE0B,OJnFU,UImFeC,QAAS1B,KA7C5B,eA8CpBlC,GAAe,CAAE2D,OJpFO,UIoFkBC,QAAS1B,KA9C/B,eLlBD,aKiEN,CAAEyB,OJrFS,UIqFgBC,QAAS1B,KA/C7B,eAgDpBnC,GAAS,CAAE4D,OJtFa,UIsFYC,QAAS1B,KAhDzB,uBAVC,kBAUD,oBAoDtBF,GAAQ,IApDc,eAqDtBC,IArDsB,oBAsDpBlC,GAAS,CAAE4D,OJ5Fa,UI4FYC,QAAS1B,KAtDzB,eLZE,gBKmEN,CAAEyB,OJ7FM,UI6FmBC,QAAS1B,KAvDhC,eAwDpBlC,GAAe,CAAE2D,OJ9FO,UI8FkBC,QAAS1B,KAxD/B,eLpBF,YK6EN,CAAEyB,OJ/FU,UI+FeC,QAAS1B,KAzD5B,eLlBD,aK4EN,CAAEyB,OJhGS,UIgGgBC,QAAS1B,KA1D7B,uBATU,2BASV,oBJ5CE,eCHD,SG+CD,eA+DtBF,GAAQ,IA/Dc,eAgEtBC,GAAU,IAhEY,mBARI,mBAQJ,oBAmEtBD,GAnEsB,gBNtBI,kBMyFG,CAAE2B,OJzGL,UIyG8BC,QAAS1B,MAnE3C,eAoEtBD,IApEsB,oBLfG,iBKoFN,CAAE0B,OJ3GK,UI2GoBC,QAAS1B,KArEjC,eLlBD,aKwFN,CAAEyB,OJ5GS,UI4GgBC,QAAS1B,KAtE7B,mBAwEtBH,GAAQ,CFhHU,YEwCI,mBAPA,eAOA,oBA2EtBC,IA3EsB,oBNvBN,QMmGN,CAAE2B,OJlHc,UIkHWC,QAAS1B,KA5ExB,eNtBI,kBMmGN,CAAEyB,OJnHI,UImHqBC,QAAS1B,KA7ElC,mBA+EtBD,GA/EsB,gBLlBD,aKiGK,CAAE0B,OJrHF,UIqH2BC,QAAS1B,MA/ExC,eAgFtBH,GFzHmB,YEyCG,mBANK,oBAML,oBAmFtBC,IAnFsB,oBNxBR,MM4GN,CAAE2B,OJ1HgB,UI0HSC,QAAS1B,KApFtB,eNtBI,kBM2GN,CAAEyB,OJ3HI,UI2HqBC,QAAS1B,KArFlC,mBAuFtBD,IAvFsB,oBAwFpBjC,GAAe,CAAE2D,OJ9HO,UI8HkBC,QAAS1B,KAxF/B,eLdF,YKuGN,CAAEyB,OJ/HU,UI+HeC,QAAS1B,KAzF5B,uBALW,0BAKX,oBA6FtBF,IA7FsB,oBNvBN,QMqHN,CAAE2B,OJpIc,UIoIWC,QAAS1B,KA9FxB,eNtBI,kBMqHN,CAAEyB,OJrII,UIqIqBC,QAAS1B,KA/FlC,mBAiGtBD,GAjGsB,gBLZE,gBK6GK,CAAE0B,OJvIL,UIuI8BC,QAAS1B,MAjG3C,eJ3CC,cGQI,oBCmCL,OC/Cd2B,GAAyB,SAACC,EAAOhI,EAAUiI,GACtD,MAAO,CACLxJ,KCL8B,qBDM9BuJ,MAAOA,EACPhI,SAAUA,EACViI,OAAQA,I,oBELNC,GAAWC,KAAMC,OAAO,CAC5BC,QAASC,4CAGXH,KAAMI,aAAaC,SAASC,KAC1B,SAAUD,GACR,OAAOA,KAET,SAAUE,GACR,OAAOC,QAAQC,OAAOF,MAIXR,I,8BAAAA,M,mDCfTW,GAAWC,EAAQ,KAEnBC,GAAaT,0CAGNU,GAAgB,IAAIC,KAAcC,aAAc,CAC3DC,KAAM,SAAc7J,GAGlB,OAFAA,EAAMuJ,GAASO,OAAO9J,EAAKyJ,KAEhBM,YAEbC,QAAS,SAAiBC,GAKxB,OAFAA,GAFAA,EAAOV,GAASW,IAAIF,QAAQC,EAAMR,KAEtBM,YAIdI,QAAS,SAAiBF,GAKxB,OAFAA,GAFAA,EAAOV,GAASW,IAAIC,QAAQF,EAAMR,KAEtBM,SAASR,GAASa,IAAIC,SC4EhCC,GAAmB,SAACxI,GACxB,IAAIyI,EAAgB,EAKpB,OAJAC,OAAOC,OAAO3I,GAAO4I,SAAQ,SAACC,GAC5BJ,GAAiBK,SAASD,EAAKjK,aAG1B6J,GAWHM,GAAgB,WACpB,MAAO,CACL1L,KClH2B,oBDuHlB2L,GAAU,SAACtL,EAASuL,GAC/B,OAAO,SAACC,GACNA,EAfK,CACL7L,KC7G0B,mBD4H1B,IAEIuB,EAFAoB,EAAQ,KACRmJ,EAAS,KAEbC,GACGC,IACC,oBACE3L,EACA,8BACAuL,EACA,KAEHK,MAAK,SAACC,GACL,GAAIb,OAAOc,QAAQD,EAAIpB,MAAMsB,OAAS,EAAG,CACvCzJ,EAAQ0I,OAAOC,OAAOY,EAAIpB,MAAM,GAAGnI,OAAS,GAC5CmJ,EAAST,OAAOgB,KAAKH,EAAIpB,MAAM,GAC/B,IAAIwB,EAAY/B,GAAcgC,QAAQ,QAEtC,GAAID,EAAU/K,SAAW,EACvBsK,EAnGgB,SAACS,EAAW3J,EAAOmJ,EAAQF,EAAQvL,GAC7D,OAAO,SAACwL,GACN,IAAMW,EAAsBrB,GAAiBxI,GACzC8J,EAAcC,GAAoB/J,GAClCgK,EAAa,GAEjBtB,OAAOc,QAAQG,EAAU3J,OAAO4I,SAAQ,YAAqB,IAAD,oBAAlB/B,EAAkB,KAAVgC,EAAU,KACpDoB,EAAYlC,KAAKc,EAAKjC,OACtBsD,EAAiBJ,EAAYG,GACnC,GAAIC,EAAgB,CAClB,IAAMC,EAAenK,EAAM8J,EAAYG,IACvCE,EAAavL,SACXkK,SAASqB,EAAavL,UAAYkK,SAASD,EAAKjK,UAClDoL,EAAWE,GAAkBC,OAE7BL,EAAYG,GAAapD,EACzB7G,EAAM6G,GAAUgC,EAChBmB,EAAWnD,GAAUgC,KAIrBH,OAAOgB,KAAKM,GACdZ,GACGgB,MAAM,UAAYjB,EAAS,oBAAsBzL,EAASsM,GAC1DV,MAAK,WAEJ1B,GAAcyC,QAAQ,OADN,CAAErK,MAAO,GAAIpB,SAAU,IAEvCsK,EAAS,CACP7L,KCtEoB,mBDuEpB4L,OAAQA,EACRE,OAAQA,EACRnJ,MAAOA,EACPpB,SAAUkK,SAASa,EAAU/K,UAAYiL,EACzCC,YAAaA,OAXnB,OAcS,WACLZ,EAASH,MACTG,EAAS/L,EE/EK,qBFkFlB+L,EAAS,CACP7L,KCpFwB,mBDqFxB4L,OAAQA,EACRE,OAAQA,EACRnJ,MAAOA,EACPpB,SAAU+K,EAAU/K,SAAWiL,EAC/BC,YAAaA,KAoDAQ,CAAaX,EAAW3J,EAAOmJ,EAAQF,EAAQvL,QAGrD,CACH,IAAMoM,EAAcC,GAAoB/J,GACxCpB,EAAW4J,GAAiBxI,GAC5BkJ,EAAS,CACP7L,KCpJkB,mBDqJlB4L,OAAQA,EACRE,OAAQA,EACRnJ,MAAOA,EACPpB,SAAUA,EACVkL,YAAaA,UAIjBZ,EA7IgB,SAACxL,EAASuL,GAClC,OAAO,SAACC,GACN,IAAMjJ,EAAO,CACXgJ,OAAQA,GAEVG,GAAcmB,KAAK,oBAAsB7M,EAASuC,GAAMqJ,MAAK,SAACC,GAC5DL,EAAS,CACP7L,KCzBmB,cD0BnB8L,OAAQI,EAAIpB,KAAKqC,KACjBvB,OAAQA,QAoIGwB,CAAW/M,EAASuL,OA/BnC,OAkCS,WACLC,EAASH,MACTG,EAAS/L,EEjKO,uBFuKlB4M,GAAsB,SAAC/J,GAC3B,IAAI8J,EAAc,GAKlB,OAJApB,OAAOc,QAAQxJ,GAAO4I,SAAQ,YAAqB,IAAD,oBAAlB/B,EAAkB,KAAVgC,EAAU,KAChDiB,EAAY/B,KAAKc,EAAKjC,QAAUC,KAG3BiD,GAoDIY,GAAY,SAAC9D,EAAOhI,GAC/B,OAAO,SAACsK,EAAUyB,GACX/D,EAAM/B,MACT+B,EAAM/B,IPhOoB,oBOkOvB+B,EAAK,cACRA,EAAK,YP/MkB,WOiNpBA,EAAK,eACRA,EAAK,aR3OmB,WQ6OrBA,EAAK,cACRA,EAAK,YNnOoB,mBMwOW,IAApC8B,OAAOgB,KAAK9C,EAAMgE,OAAOnB,QACzB7C,EAAMgE,MAAMC,cAAgBnC,eAErB9B,EAAMgE,MAGyB,IAAtClC,OAAOgB,KAAK9C,EAAMkE,SAASrB,QAC3B7C,EAAMkE,QAAQD,cAAgBnC,eAEvB9B,EAAMkE,QAGf,IAAMC,EAAsBJ,IAAW1K,KAAK6J,YAAY/B,KAAKnB,IAC7D,GAAImE,EAAqB,CACvB,IAAMC,EACJlC,SAAS6B,IAAW1K,KAAKD,MAAM+K,GAAqBnM,UACpDkK,SAASlK,GACXsK,EAAS+B,GAAmBF,EAAqBC,SAEjD9B,EA5EmB,SAACtC,EAAOhI,GAC/B,OAAO,SAACsK,EAAUyB,GAChB,IAAI9B,EAAO,CAAEjC,MAAOA,EAAOhI,SAAUA,GAErC,GAAI+L,IAAW1K,KAAKkJ,OAClBC,GACGmB,KACC,UACEI,IAAW1K,KAAKkJ,OAChB,oBACAwB,IAAWlN,KAAKC,QAClBmL,GAEDS,MAAK,SAACC,GACLL,EAAS,CACP7L,KCtMe,cDuMfwJ,OAAQ0C,EAAIpB,KAAKqC,KACjB3B,KAAMA,OAZZ,OAeS,WACLK,EAAS/L,EE/Ma,+BFiNrB,CAEL,IAAI8C,EAAO2H,GAAcgC,QAAQ,QAC3B/C,EAASqE,eACfjL,EAAKD,MAAM6G,GAAUgC,EACrB5I,EAAKrB,UAAYkK,SAASD,EAAKjK,UAC/BgJ,GAAcyC,QAAQ,OAAQpK,GAC9BiJ,EAAS,CACP7L,KCtNmB,cDuNnBwJ,OAAQA,EACRgC,KAAMA,MA2CCsC,CAAiBvE,EAAOhI,MAM1BwM,GAAe,SAACnL,GAC3B,IAAI6J,EAAcC,GAAoB9J,EAAKD,OAC3C,MAAO,CACL3C,KC3Q0B,iBD4Q1B2C,MAAOC,EAAKD,MACZpB,SAAUqB,EAAKrB,SACfkL,YAAaA,IAKJmB,GAAqB,SAACpE,EAAQjI,GACzC,OAAO,SAACsK,EAAUyB,GAChB,IAAM9B,EAAI,gBAAQ8B,IAAW1K,KAAKD,MAAM6G,IAIxC,GAHAqC,EAASmC,GAAoBxC,EAAKjC,QAClCiC,EAAKjK,SAAWA,EAEZ+L,IAAW1K,KAAKkJ,OAClBC,GACGkC,IACC,UACEX,IAAW1K,KAAKkJ,OAChB,UACAtC,EACA,cACA8D,IAAWlN,KAAKC,QAClBmL,GAEDS,MAAK,WACJJ,EAAS,CACP7L,KCrSwB,uBDsSxBwJ,OAAQA,EACRjI,SAAUA,OAdhB,OAiBS,WACLsK,EAAS/L,EE7SiB,yBF8S1B+L,EAASqC,aAIV,CACH,IAAItL,EAAO2H,GAAcgC,QAAQ,QACjC3J,EAAKrB,UAAYqB,EAAKD,MAAM6G,GAAQjI,SACpCqB,EAAKrB,UAAYkK,SAASlK,GAC1BqB,EAAKD,MAAM6G,GAAQjI,SAAWA,EAC9BgJ,GAAcyC,QAAQ,OAAQpK,GAC9BiJ,EAAS,CACP7L,KCvT4B,uBDwT5BwJ,OAAQA,EACRjI,SAAUA,OAOZyM,GAAsB,SAACzE,GAC3B,MAAO,CACLvJ,KChUkC,yBDiUlCmO,iBAAkB5E,IAKhB2E,GAAuB,WAC3B,MAAO,CACLlO,KCtUmC,4BD2U1BoO,GAAa,SAAC5E,EAAQD,GACjC,OAAO,SAACsC,EAAUyB,GAGhB,GAFAzB,EAASmC,GAAoBzE,IAEzB+D,IAAW1K,KAAKkJ,OAClBC,GAAa,OAET,UACEuB,IAAW1K,KAAKkJ,OAChB,UACAtC,EACA,cACA8D,IAAWlN,KAAKC,SAEnB4L,MAAK,WACJJ,EAAS,CACP7L,KC5VuB,sBD6VvBwJ,OAAQA,EACRD,MAAOA,OAbb,OAgBS,WACLsC,EAASqC,MACTrC,EAAS/L,EEvWQ,uBFyWhB,CAEL,IAAI8C,EAAO2H,GAAcgC,QAAQ,QACjC3J,EAAKrB,UAAYqB,EAAKD,MAAM6G,GAAQjI,gBAC7BqB,EAAKD,MAAM6G,GAClBe,GAAcyC,QAAQ,OAAQpK,GAC9BiJ,EAAS,CACP7L,KC5W2B,sBD6W3BwJ,OAAQA,EACRD,MAAOA,O,UGjXF8E,IAAiB,sBfLT,SeKS,sBhBEH,cgBAR,GAFW,gBhBGD,iBgBAR,GAHS,gBhBIF,egBAR,GAJU,qBfJR,UeIQ,sBhBEH,cgBKR,GAPW,gBhBGD,iBgBKR,GARS,gBhBIF,egBKR,GATU,qBfHN,YeGM,sBhBEH,cgBUR,GAZW,gBhBGD,iBgBUR,GAbS,gBhBIF,egBUR,GAdU,SAkBjBC,IAAgB,sBfvBR,SeuBQ,sBAExBrF,GAAU,OAFc,gBAGxBC,GAAQ,OAHgB,qBftBP,UesBO,sBAMxBD,GAAU,OANc,gBAOxBC,GAAQ,OAPgB,qBfrBL,YeqBK,sBAUxBD,GAAU,MAVc,gBAWxBC,GAAQ,OAXgB,SAehBqF,IAAoB,sBVZN,QUaV,GADgB,gBXrCL,QWuCV,GAFe,I,kBCnBpBC,GAAe,CAC1BC,kBAAkB,EAClBjF,OAAQ,KACRD,OAAK,sBblBsB,eCJC,WYsBvB,gBbdmB,YagBR,MAFX,gBAGFjC,GjBlBsB,eiBepB,gBbjBqB,cGMG,mBUWxB,gBAKFG,GAAQ,IALN,gBAMFC,GAAU,IANR,gBAOFF,GXxB2B,oBWiBzB,gBbnBqB,cEsBC,WWHtB,gBASFD,GhB/BgB,SgBsBd,4BAUQ0B,IAVR,KAyHQyF,GA3Ga,WAAmC,IAAD,EAAjCxO,EAAiC,uDAAzBsO,GAAcG,EAAW,uCACxDC,EAAW,KACXC,EAAU,KACd,OAAQF,EAAO3O,MAEb,IP3C8B,qBO4C5B,OAAO,gBACFE,EADL,CAEEuO,kBAAkB,EAClBjF,OAAQmF,EAAOnF,OACfD,OAAK,oBb1CgB,ea2CFoF,EAAOpF,MAAP,aACboF,EAAOpF,MAAP,aZhDgB,WY8CjB,ebtCa,Ya0CFoF,EAAOpF,MAAP,UACVoF,EAAOpF,MAAP,UACA,MAND,eAOFjC,GAAQqH,EAAOpF,MAAMjC,KAPnB,ebzCe,caiDFqH,EAAOpF,MAAP,YACZoF,EAAOpF,MAAP,YV5CiB,mBUmClB,eAWF9B,GAAQkH,EAAOpF,MAAM9B,KAXnB,eAYFC,GAAUiH,EAAOpF,MAAM7B,KAZrB,eAaFF,GAAQmH,EAAOpF,MAAM/B,IAASmH,EAAOpF,MAAM/B,IXtDtB,oBWyCnB,eb3Ce,cayDFmH,EAAOpF,MAAP,YACZoF,EAAOpF,MAAP,YXpCe,WWqBhB,eAiBFhC,GAAOoH,EAAOpF,MAAMhC,KAjBlB,uBAmBIoH,EAAOpF,MAAMzB,OAnBjB,2BAoBQ6G,EAAOpF,MAAMuF,WApBrB,GAsBLvN,SAAUoN,EAAOpN,WAGrB,IPxE+B,sBOyE7B,OAAO,gBACFrB,EADL,CAEEuO,kBAAkB,IAGtB,IP7EwB,eO8EtB,OAAO,gBACFvO,EADL,CAEEqJ,MAAM,gBACDrJ,EAAMqJ,MADN,gBAEFoF,EAAOI,SAAWJ,EAAO3L,UAIhC,IPrF0B,iBO8FxB,OARA4L,EAAW1O,EAAMqJ,MAAMoF,EAAOI,UAAnB,gBACF7O,EAAMqJ,MAAMoF,EAAOI,WACxB,IACSJ,EAAO3L,cACX4L,EAASD,EAAO3L,OAEvB4L,EAASD,EAAO3L,OAAS,CAAEoG,ObnFJ,UamF6BC,QAAS1B,IAExD,gBACFzH,EADL,CAEEqJ,MAAM,gBACDrJ,EAAMqJ,MADN,gBAEFoF,EAAOI,SAAWH,MAIzB,IPrG8B,qBOiH5B,OAPAC,GAJAD,EAAW1O,EAAMqJ,MAAMoF,EAAOI,UAAnB,gBACF7O,EAAMqJ,MAAMoF,EAAOI,WACxB,IAEeJ,EAAOE,UAIxBA,EAAQzF,OAASuF,EAAO3L,MAFxB6L,EAAU,CAAEzF,OAAQuF,EAAO3L,MAAOqG,QAAS1B,IAI7CiH,EAASD,EAAOE,SAAWA,EACpB,gBACF3O,EADL,CAEEqJ,MAAM,gBACDrJ,EAAMqJ,MADN,gBAEFoF,EAAOI,SAAWH,MAIzB,IPxH+B,sBOgI7B,OAHAC,GAJAD,EAAW1O,EAAMqJ,MAAMoF,EAAOI,UAAnB,gBACF7O,EAAMqJ,MAAMoF,EAAOI,WACxB,IAEeJ,EAAOE,UAClBxF,QAAUsF,EAAO3L,MACzB4L,EAASD,EAAOE,SAAWA,EACpB,gBACF3O,EADL,CAEEqJ,MAAM,gBACDrJ,EAAMqJ,MADN,gBAEFoF,EAAOI,SAAWH,MAGzB,QACE,OAAO1O,IC1IPsO,GAAe,CACnB1C,OAAQ,KACRF,OAAQ,KACRjJ,MAAO,GACPpB,SAAU,EACVkL,YAAa,GACb/K,cAAe,EACfsN,aAAa,EACbC,iBAAiB,EACjBd,iBAAkB,KAClBpO,cAAe,MAmJFmP,GAhJK,WAAmC,IAGjD3N,EAHerB,EAAiC,uDAAzBsO,GAAcG,EAAW,uCAChDhM,EAAQ,KACR8J,EAAc,KAEd/K,EAAgB,EACpB,OAAQiN,EAAO3O,MAEb,IJvBuB,cIwBrB,OAAO,gBACFE,EADL,CAEE4L,OAAQ6C,EAAO7C,OACfF,OAAQ+C,EAAO/C,SAGnB,IJzBuB,cIgCrB,OANAjJ,EAAK,gBAAQzC,EAAMyC,MAAd,gBAAsBgM,EAAOnF,OAASmF,EAAOnD,OAClDjK,EAAWrB,EAAMqB,WAAYoN,EAAOnD,KAAKjK,SACzCkL,EAAW,gBACNvM,EAAMuM,YADA,gBAER/B,KAAKiE,EAAOnD,KAAKjC,OAASoF,EAAOnF,SAE7B,gBACFtJ,EADL,CAEEyC,MAAOA,EACPpB,SAAUA,EACVkL,YAAaA,EACb/K,cAAeiN,EAAOnD,KAAKjK,WAG/B,IJ5C0B,iBI6CxB,OAAO,gBACFrB,EADL,CAEE8O,aAAa,EACbG,UAAW,OAGf,IJjD2B,kBIkDzB,OAAO,gBACFjP,EADL,CAEE8O,aAAa,IAGjB,IJxD4B,mBIyD1B,OAAO,gBACF9O,EADL,CAEE4L,OAAQ6C,EAAO7C,OACfF,OAAQ+C,EAAO/C,OACfjJ,MAAOgM,EAAOhM,MACdpB,SAAUoN,EAAOpN,SACjBkL,YAAakC,EAAOlC,YACpBuC,aAAa,IAGjB,IJjEsB,aIkEpB,OAAO,gBACF9O,EADL,CAEE4L,OAAQ,KACRF,OAAQ,KACRjJ,MAAO,GACPpB,SAAU,EACVkL,YAAa,GACb/K,cAAe,IAGnB,IJ1E0B,iBI2ExB,OAAO,gBACFxB,EADL,CAEEyC,MAAOgM,EAAOhM,MACdpB,SAAUoN,EAAOpN,SACjBkL,YAAakC,EAAOlC,cAGxB,IJjFgC,uBIyF9B,OAPA9J,EAAK,gBAAQzC,EAAMyC,OACnBpB,EAAWrB,EAAMqB,SAAWoB,EAAMgM,EAAOnF,QAAQjI,SACjDoB,EAAMgM,EAAOnF,QAAQjI,SAAWoN,EAAOpN,SACvCA,GAAYkK,SAASkD,EAAOpN,UACxBrB,EAAMqB,SAAWA,IACnBG,EAAgBH,EAAWrB,EAAMqB,UAE5B,gBACFrB,EADL,CAEEyC,MAAOA,EACPpB,SAAUA,EACVG,cAAeA,EACfuN,iBAAiB,IAGrB,IJ/FkC,yBIgGhC,OAAO,gBACF/O,EADL,CAEE+O,iBAAiB,EACjBd,iBAAkBQ,EAAOR,mBAG7B,IJpGmC,0BIqGjC,OAAO,gBACFjO,EADL,CAEE+O,iBAAiB,EACjBd,iBAAkB,OAGtB,IJ5G+B,sBIkH7B,OALAxL,EAAK,gBAAQzC,EAAMyC,OACnB8J,EAAW,gBAAQvM,EAAMuM,aACzBlL,EAAWrB,EAAMqB,SAAWoB,EAAMgM,EAAOnF,QAAQjI,gBAC1CoB,EAAMgM,EAAOnF,eACbiD,EAAY/B,KAAKiE,EAAOpF,QACxB,gBACFrJ,EADL,CAEEyC,MAAOA,EACPpB,SAAUA,EACVkL,YAAaA,EACb/K,cAAe,EACfuN,iBAAiB,EACjBd,iBAAkB,OAGtB,IJ1HwB,eI+HtB,OAJAxL,EAAK,gBAAQzC,EAAMyC,OACnBpB,EAAWrB,EAAMqB,SAAWoB,EAAMgM,EAAOnF,QAAQjI,SACjDoB,EAAMgM,EAAOnF,QAAUmF,EAAOnD,KAC9BjK,IAAaoN,EAAOnD,KAAKjK,SAClB,gBACFrB,EADL,CAEEyC,MAAOA,EACPpB,SAAUA,EACVG,cAAe,EACfuN,iBAAiB,IAGrB,IJtIsB,aIuIpB,OAAO,gBACF/O,EADL,CAEEyC,MAAO,GACPpB,SAAU,EACVG,cAAe,EACf+K,YAAa,KAEjB,QACE,OAAOvM,IC1JAsO,GAAe,CAC1BY,SAAU,KACVC,OAAQ,GACRC,mBAAmB,EACnBC,cAAc,EACdC,uBAAwB,KACxBC,gBAAiB,KACjBC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,GAqFHC,GAlFS,WAAmC,IAAlC5P,EAAiC,uDAAzBsO,GAAcG,EAAW,uCACxD,OAAQA,EAAO3O,MAEb,IClB8B,qBDmB5B,OAAO,gBACFE,EADL,CAEEyP,iBAAiB,EACjBC,kBAAkB,IAGtB,ICxBgC,uBDyB9B,IAAMP,EAAM,gBAAQnP,EAAMmP,OAAd,gBAAuBV,EAAOoB,QAAUpB,EAAOqB,QAC3D,OAAO,gBACF9P,EADL,CAEEmP,OAAQA,EACRM,iBAAiB,IAGrB,IC/B+B,sBDgC7B,OAAO,gBACFzP,EADL,CAEEyP,iBAAiB,EACjBC,kBAAkB,IAGtB,ICpC4B,mBDqC1B,OAAO,gBACF1P,EADL,CAEEwP,eAAe,EACfG,gBAAgB,IAGpB,IC1C8B,qBD2C5B,OAAO,gBACF3P,EADL,CAEEwP,eAAe,EACfL,OAAQV,EAAOU,SAGnB,IChD6B,oBDiD3B,OAAO,gBACFnP,EADL,CAEEwP,eAAe,EACfG,gBAAgB,IAGpB,ICrDoC,2BDsDlC,OAAO,gBACF3P,EADL,CAEEqP,cAAc,EACdC,uBAAwB,KACxBF,mBAAmB,EACnBG,gBAAiBd,EAAOc,kBAG5B,IC7DmC,0BD8DjC,OAAO,gBACFvP,EADL,CAEEqP,cAAc,EACdC,uBAAwBb,EAAO1E,MAC/BqF,mBAAmB,IAGvB,ICvEkC,yBDwEhC,OAAO,gBACFpP,EADL,CAEEoP,mBAAmB,EACnBE,uBAAwB,OAG5B,IC3EkC,yBD4EhC,OAAO,gBACFtP,EADL,CAEEoP,mBAAmB,EACnBC,cAAc,EACdC,uBAAwB,OAE5B,QACE,OAAOtP,IE3FPsO,GAAe,CACnBnO,QAAS,KACTuL,OAAQ,KACRqE,YAAa,KACbC,YAAa,KACbC,SAAS,GAgDIC,GA7CK,WAAmC,IAAlClQ,EAAiC,uDAAzBsO,GAAcG,EAAW,uCACpD,OAAQA,EAAO3O,MAEb,ICbsB,aDcpB,OAAO,gBACFE,EADL,CAEE+P,YAAa,KACbC,YAAa,KACbC,SAAS,IAGb,ICpBwB,eDqBtB,OAAO,gBACFjQ,EADL,CAEEiQ,SAAS,EACT9P,QAASsO,EAAOtO,QAChBuL,OAAQ+C,EAAO/C,OACfqE,YAAa,OAGjB,IC5B0B,iBD6BxB,OAAO,gBACF/P,EADL,CAEEiQ,SAAS,EACTF,YAAatB,EAAO1E,QAGxB,IClC0B,iBDmCxB,OAAO,gBACF/J,EADL,CAEEiQ,SAAS,EACTD,YAAavB,EAAO1E,QAGxB,ICxCwB,eDyCtB,OAAO,gBACF/J,EADL,CAEEG,QAAS,KACTuL,OAAQ,OAEZ,QACE,OAAO1L,IEjDAsO,GAAe,CAC1B6B,aAAa,EACbtQ,cAAe,MA6BFuQ,GA1BG,WAAmC,IAAlCpQ,EAAiC,uDAAzBsO,GAAcG,EAAW,uCAClD,OAAQA,EAAO3O,MAEb,IhCV0B,iBgCWxB,IAAIqQ,EAAcnQ,EAAMmQ,YACxB,OAAO,gBACFnQ,EADL,CAEEmQ,aAAcA,IAGlB,IhChByB,gBgCiBvB,OAAO,gBACFnQ,EADL,CAEEmQ,aAAa,IAGjB,IhCrB8B,qBgCsB5B,OAAO,gBACFnQ,EADL,CAEEH,cAAe4O,EAAO5O,gBAE1B,QACE,OAAOG,ICtBEqQ,gBAAgB,CAC7BC,aAAc9B,GACd9L,KAAMsM,GACNuB,SAAUX,GACV1P,KAAMgQ,GACNM,GAAIJ,KCROK,GAAa,C,OAACC,GAIrBC,GAAmBC,OAAOC,sCAAwCC,KAQzDC,GANDC,aACZC,GALmB,GAOnBN,GAAiBO,KAAe,WAAf,EAAmBT,MCazBU,GAAkB,SAACC,GAC9B,MAAkB,qBAAdA,GAAkD,oBAAdA,EAC/B,qDACEA,EAAUC,SAAS,+BACrB,sEACgB,iBAAdD,EACF,kEAEA,mDAKEE,GAAiB,SAACjI,GAC7B,IAAMkI,EACJnD,GAAiB/E,EAAMhC,KAAOgC,EAAMuF,WACpCT,GAAkB9E,EAAMhC,KAAOgC,EAAMjC,KAEnCoK,EAAiBnD,GAAqBhF,EAAK,cAAmB,EAClEmI,GAAkBnD,GAAqBhF,EAAK,eAAoB,EAEhE,IAAIoI,EAAa,EACbC,EAAe,EAUnB,OARIrI,EAAMuF,YAAc5F,IACtByI,GAAcE,GAAiBtI,EAAO9B,IAAO,GAC7CmK,GAAgBC,GAAiBtI,EAAO7B,IAAS,KAEjDiK,GAAcE,GAAiBtI,EAAO9B,IAAO,GAC7CmK,GAAgBC,GAAiBtI,EAAO7B,IAAS,KAG3C+J,EAAYE,EAAaC,EAAeF,GAAgBI,QAAQ,IAIpED,GAAmB,SAACtI,EAAOwI,EAAaC,GAC5C,IAAIpD,EAAWrF,EAAMwI,GACjBE,EAAgB,EAsBpB,OArBArD,GACEvD,OAAOc,QAAQyC,GAAUrD,SAAQ,YAA8B,IAAD,oBAA3BsD,EAA2B,KAAlBqD,EAAkB,KACtDC,EACJH,GACA3G,OAAOgB,KAAKlD,GAAeI,EAAK,WAAcwI,IAAcR,SAC1D1C,GAECsD,GAAyBH,EAO5BG,GtBpEqB,UsBqErBD,EAAa9I,SAEb6I,GAAiBG,GtBvEI,UsB8DjBF,EAAa9I,OACf6I,GV5BuB,IU8BvBA,GV/BkB,OUyCnBA,GAIII,GAAiB,SAAClT,EAAOoK,EAAOhI,EAAUiI,GACrDrK,EAAMmK,uBAAuBC,EAAOhI,EAAUiI,IAInC8I,GAA2B,SAACnT,EAAOqK,EAAQjI,GACtDpC,EAAMyO,mBAAmBpE,EAAQjI,IAItBgR,GAAmB,SAACpT,EAAOqK,EAAQD,GAC9CpK,EAAMiP,WAAW5E,EAAQD,IAIdiJ,GAAoB,SAAC7P,GAChC,IAAI8P,EAAW,EAQf,OAPApH,OAAOC,OAAO3I,GAAO4I,SAAQ,SAACC,GAC5B,IAAI1D,EAAQ0D,EAAKjC,MAAMzB,MAClBA,IACHA,EAAQ0J,GAAehG,EAAKjC,QAE9BkJ,GAAY3K,EAAQ0D,EAAKjK,YAEpBkR,EAASX,QAAQ,IC9FpBY,G,kDACJ,WAAYvT,GAAQ,IAAD,uBACjB,cAAMA,IAQRwT,gBAAkB,WAAO,IAAD,EAClBnE,EAAe,CACjBjF,OAAK,GACHuF,UAAW,EAAK3P,MAAM2P,WADnB,evBtBe,YuBwBJ,EAAK3P,MAAMyT,WAFtB,eAGFtL,G3B1BkB,e2BuBhB,eAIFC,G1BlCY,S0B8BV,GAMLhG,SAAU,GAaZ,OAVI4H,GAAe,EAAKhK,MAAMyT,aAC5BpE,EAAY,gBACPA,EADO,CAEVjF,MAAM,gBACDiF,EAAajF,MADb,GAEAJ,GAAe,EAAKhK,MAAMyT,eAK5BpE,GA9BU,EAiCnBqE,WAAa,WACX,EAAKC,SAAS,EAAKH,oBAlCF,EAqCnBI,qBAAuB,SAAC5R,GACtBA,EAAM6R,UACN,EAAKF,SAAS,CACZvR,SAAUJ,EAAM8R,OAAOjQ,SAxCR,EA6CnBkQ,SAAW,SAACC,GACV,IACMC,EADS,iBACMC,KAAKF,GAC1B,OAAOC,EAAQA,EAAM,GAAKD,GAhDT,EAmDnBG,kBAAoB,SAACnS,GACnBA,EAAM6R,UAEN,EAAKF,SAAS,CACZvJ,MAAM,gBACD,EAAKrJ,MAAMqJ,MADX,gBAEFjC,GAAQnG,EAAM8R,OAAOjQ,WAzDT,EA8DnBuQ,iBAAmB,SAACpS,GAClBA,EAAM6R,UACN,EAAKF,SAAS,CACZvJ,MAAM,gBACD,EAAKrJ,MAAMqJ,MADX,gBAEFhC,GAAOpG,EAAM8R,OAAOjQ,WAnER,EAwEnBwQ,iBAAmB,WACjB,IAAIjK,EAAK,gBAAQ,EAAKrJ,MAAMqJ,OAC5BA,EAAMkK,MAAQ,EAAKP,SAAS3J,EAAMkK,OAClC,EAAKtU,MAAMmK,uBAAuBC,EAAO,EAAKrJ,MAAMqB,UACpD,EAAKsR,cA5EY,EA+EnBa,gBAAkB,WAChB,IAAInK,EAAK,gBAAQ,EAAKrJ,MAAMqJ,OAC5BA,EAAMkK,MAAQ,EAAKP,SAAS3J,EAAMkK,OAClC,EAAKtU,MAAMkO,UAAU9D,EAAO,EAAKrJ,MAAMqB,UACvC,EAAKsR,cAjFL,IAAMrE,EAAe,EAAKmE,kBAFT,OAGjB,EAAKzS,MAAL,cACEyT,MAAO7C,OAAO8C,YACXpF,GALY,E,qDAsFT,IAAD,OACDqF,EAAexI,OAAOc,QAAQ7I,IAAsBH,KACxD,YAA6B,IAAD,oBAA1BsQ,EAA0B,KAAnBK,EAAmB,KAC1B,OACEL,GACCK,EAAc/P,kBACX,IAAM+P,EAAc/P,kBACpB,OAKJgQ,EAAc/P,GAGhBuF,EAAK,gBAAQjI,KAAKpB,MAAMqJ,OAC5BA,EAAMkK,MAAQnS,KAAK4R,SAAS3J,EAAMkK,OAClC,IAAM3L,EAAQ0J,GAAejI,GAEzByK,EAAW,KACXC,EAAY,KACZC,EAAY,KACZC,EAAqB,KAyCzB,OAvCI7S,KAAKnC,MAAMiV,YACbJ,EACE,kBAAC,EAAD,CAAQhU,KlCjIO,SkCiIQJ,QAAS,kBAAM,EAAK4T,iBAAiB1L,KAA5D,eAIFmM,EAAY,iBACZC,EAAY,yBAAK1U,UAAU,mBAE3BwU,EACE,kBAAC,IAAMzT,SAAP,KACE,yBAAKf,UAAU,uBACb,kBAAC,GAAD,CACEyD,SAAU3B,KAAKyR,qBACf7P,QAzBc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA0BvCF,MAAO1B,KAAKpB,MAAMqB,YAGtB,kBAAC,EAAD,CAAQvB,KlCjJK,SkCiJUJ,QAAS,kBAAM,EAAK8T,oBAA3C,iBAKJO,EAAY3S,KAAKnC,MAAMyT,UACvBsB,EACE,kBAAC,EAAD,CAAQlU,KlCvJS,2BkCuJQJ,QAAS,kBAAM,EAAK4T,qBAA7C,aAIFW,EACE,0BACE3U,UAAU,4BACVI,QAAS,kBAAM,EAAK4T,iBAAiB1L,KAFvC,cAUF,yBAAKtI,UAAU,aACb,wBAAIA,UAAU,mBAAmByU,EAAjC,UACA,yBAAKzU,UAAU,wBACb,yBAAKA,UAAU,sBACZ2U,EAED,wBAAI3U,UAAU,oBAAd,KACK8B,KAAKpB,MAAMqB,SAAWuG,GAAOgK,QAAQ,IAE1C,yBAAKtS,UAAU,sBACb,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CACE0D,QAAS2Q,EACT5Q,SAAU3B,KAAKgS,kBACftQ,MAAO1B,KAAKpB,MAAMqJ,MAAMkK,SAG5B,yBAAKjU,UAAU,mBACb,kBAAC,GAAD,CACE0D,QAAS6Q,EACT9Q,SAAU3B,KAAKiS,iBACfvQ,MAAO1B,KAAKpB,MAAMqJ,MAAM8K,QAG5B,yBAAK7U,UAAU,kBAAkBwU,KAGrC,yBAAKxU,UAAU,oBACb,yBACEA,UAAU,mBACVgD,IAAKlB,KAAKnC,MAAMmV,SAChB/R,IAAKjB,KAAKnC,MAAM8U,YAEjBC,S,GAxLUjS,aAuMRhC,eAAQ,KAAM,CAAEqJ,0BAAwB+D,cAAxCpN,CAAqDyS,I,mFCnMrD6B,I,OAnBS,WACtB,OACE,yBAAK/U,UAAU,oBACb,8BACE,wBAAIuC,MAAO,CAAEyS,QAAS,UAAYhV,UAAU,4BAA5C,wCADF,OAKE,wBAAIuC,MAAO,CAAEyS,QAAS,WAAtB,YACY,IACV,kBAAC,IAAD,CAAMhV,UAAU,2BAA2BG,GAAG,cAA9C,UAEQ,SCNH8U,GARU,WACvB,OACE,yBAAKjV,UAAU,sBACb,wBAAIuC,MAAO,CAAEyS,QAAS,WAAtB,uCCOSE,GAVS,WACtB,OACE,yBAAKlV,UAAU,qBACb,wBAAIuC,MAAO,CAAEyS,QAAS,WAAtB,+CCaSG,I,OAdC,SAACxV,GACf,OACE,yBAAKK,UAAU,uBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WAAWL,EAAMO,cCsEzBkV,GA5DF,SAACzV,GACZ,IAAI0V,EAAU,KAqBd,OApBI1V,EAAMwC,SAASG,aACjB+S,EACE,kBAAC,GAAD,KACE,kBAAC,GAAD,OAGK1V,EAAMwC,SAASmT,YACxBD,EACE,kBAAC,GAAD,KACE,kBAAC,GAAD,OAGK1V,EAAMwC,SAASoT,aACxBF,EACE,kBAAC,GAAD,KACE,kBAAC,GAAD,QAMJ,kBAAC,IAAMtU,SAAP,KACGsU,EACD,yBAAKrV,UAAU,cACb,wBAAIA,UAAU,qBAAd,WACA,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CACEoT,UxBdU,SwBeV9D,UAAW7F,GACXmL,YAAU,EACVE,SAAUU,OAEZ,kBAAC,GAAD,CACEpC,UxBpBU,SwBqBV9D,UAAW7F,GACXqL,SAAUU,OAEZ,kBAAC,GAAD,CACEpC,UxBxBmB,YwByBnB9D,UAAW7F,GACXqL,SAAUW,OAEZ,kBAAC,GAAD,CACErC,UxB5Bc,ewB6Bd9D,UAAW5F,GACXoL,SAAUY,OAEZ,kBAAC,GAAD,CACEtC,UxBhCW,UwBiCX9D,UAAW5F,GACXoL,SAAUa,W,qBCnBPC,GApCD,WACZ,OACE,yBAAK5V,UAAU,cACb,wBAAIA,UAAU,qBAAd,SACA,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CACEoT,UzBYY,SyBXZ9D,UAAW7F,GACXmL,YAAU,EACVE,SAAUU,OAEZ,kBAAC,GAAD,CACEpC,UzBSa,UyBRb9D,UAAW5F,GACXoL,SAAUa,OAEZ,kBAAC,GAAD,CACEvC,UzBGgB,eyBFhB9D,UAAW5F,GACXoL,SAAUY,OAEZ,kBAAC,GAAD,CACEtC,UzBAqB,oByBCrB9D,UAAW5F,GACXoL,SAAUe,OAEZ,kBAAC,GAAD,CACEzC,UzBJmB,gByBKnB9D,UAAW5F,GACXoL,SAAUa,U,0CCLLG,GA1BC,WACd,OACE,yBAAK9V,UAAU,cACb,wBAAIA,UAAU,qBAAd,WACA,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CACEoT,U1BcY,S0BbZ9D,UAAW7F,GACXmL,YAAU,EACVE,SAAUU,OAEZ,kBAAC,GAAD,CACEpC,U1BckB,iB0BblB9D,UAAW5F,GACXoL,SAAUiB,OAEZ,kBAAC,GAAD,CACE3C,U1BU2B,0B0BT3B9D,UAAW5F,GACXoL,SAAUkB,U,oFCqBLC,GApCC,WACd,OACE,yBAAKjW,UAAU,cACb,wBAAIA,UAAU,qBAAd,WACA,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CACEoT,U3BUY,S2BTZ9D,UAAW7F,GACXmL,YAAU,EACVE,SAAUU,OAEZ,kBAAC,GAAD,CACEpC,U3BcsB,mB2BbtB9D,UAAW5F,GACXoL,SAAUoB,OAEZ,kBAAC,GAAD,CACE9C,U3BU4B,yB2BT5B9D,UAAW5F,GACXoL,SAAUqB,OAEZ,kBAAC,GAAD,CACE/C,U3BGiB,c2BFjB9D,UAAW5F,GACXoL,SAAUsB,OAEZ,kBAAC,GAAD,CACEhD,U3BHqB,kB2BIrB9D,UAAW5F,GACXoL,SAAUuB,U,qCC0DLC,I,8KAnFX,OACE,yBACEtW,UAAW8B,KAAKnC,MAAM4W,MAAQ,uBAAyB,iBAEvD,yBACEvW,UAAU,0BACVgD,IAAKc,GAAqBhC,KAAKnC,MAAMoK,MAAMjC,KAAQ/D,QACnDhB,IAAKjB,KAAKnC,MAAMoK,MAAMjC,M7BhBD,oB6BkBtBhG,KAAKnC,MAAMoK,MAAX,YACC,yBACE/J,UAAU,0BACVgD,IACE+F,GAAwBjH,KAAKnC,MAAMoK,MAAX,aACtBjI,KAAKnC,MAAMoK,MAAMjC,KACjB/D,QAEJhB,IAAKjB,KAAKnC,MAAMoK,MAAX,cAEL,KACJ,yBAAK/J,UAAU,0BAA0BgD,IAAKwT,KAAQzT,IAAI,WACzDjB,KAAKnC,MAAMoK,MAAM9B,KAChB4D,OAAOc,QAAQ7K,KAAKnC,MAAMoK,MAAM9B,KAAQtE,KACtC,YAAgC,IAAD,oBAA7B8S,EAA6B,KAAvBC,EAAuB,KACzB1T,EAAM,KAERA,EhCrCa,UgCoCX0T,EAAkB9M,OACdnF,GAAiBgS,GAAM9R,aAEvBF,GAAiBgS,GAAM1S,QAG/B,IAAI4S,EAAgB,CAAC,2BAMrB,MhC7CW,agCwCPD,EAAkB7M,QACpB8M,EAAc7W,KAAK,iChCxCT,cgCyCD4W,EAAkB7M,SAC3B8M,EAAc7W,KAAK,kCAGnB,yBACEuB,IAAKoV,EACLzW,UAAW2W,EAAc1W,KAAK,KAC9B+C,IAAKA,EACLD,IAAK0T,OAKd3U,KAAKnC,MAAMoK,MAAM7B,KAChB2D,OAAOc,QAAQ7K,KAAKnC,MAAMoK,MAAM7B,KAAUvE,KACxC,YAAkC,IAAD,oBAA/BiT,EAA+B,KAAxBC,EAAwB,KAC3B7T,EAAM,KAERA,EhC/Da,UgC8DX6T,EAAmBjN,OACf1D,GAAoB0Q,GAAOjS,aAE3BuB,GAAoB0Q,GAAO7S,QAGnC,IAAI4S,EAAgB,CAAC,2BAMrB,MhCvEW,agCkEPE,EAAmBhN,QACrB8M,EAAc7W,KAAK,2BhClET,cgCmED+W,EAAmBhN,SAC5B8M,EAAc7W,KAAK,kCAGnB,yBACEuB,IAAKuV,EACL5W,UAAW2W,EAAc1W,KAAK,KAC9B+C,IAAKA,EACLD,IAAK6T,Y,GAtEInU,cCSZqU,G,oLAtBSC,GACpB,OAAIjV,KAAKnC,MAAMoK,QAAUgN,EAAUhN,Q,+BAMnC,OACE,yBAAK/J,UAAU,yBACb,wBAAIA,UAAU,0BAAd,WACA,yBAAKA,UAAU,kCACb,kBAAC,GAAD,CAAc+J,MAAOjI,KAAKnC,MAAMoK,c,GAZRtH,aCyHnBuU,I,OAxGU,SAACrX,GACxB,IAAIsX,EAAQtX,EAAMoK,MAAN,YAA4B,IAAMpK,EAAMoK,MAAM/B,IhCMpC,SgCLlBrI,EAAMoK,MAAN,cACFkN,EAAQ,MAGV,IAAIC,EAAevX,EAAMoK,MAAN,ajCxBI,SiCyBnBpK,EAAMoK,MAAN,eACFmN,EAAe,MAGjB,IAAIC,EAAc,K/BrBW,oB+BsBzBxX,EAAMoK,MAAN,cACFoN,EAAc,mCAASxX,EAAMoK,MAAN,YAAT,kBAGhB,IAAMqN,EAAyB,SAAChI,GAC9B,IAAIiI,EAAsB,GAe1B,OAdAxL,OAAOc,QAAQyC,GAAUrD,SAAQ,YAA8B,IAAD,oBAA3BsD,EAA2B,KAAlBqD,EAAkB,KACxD4E,EAAqB,GlC5BN,akC6Bf5E,EAAa7I,QACfyN,GAAsB,alC7BJ,ckC8BT5E,EAAa7I,UACtByN,GAAsB,elCnCD,UkCsCnB5E,EAAa9I,SACf0N,GAAsB,UAExBD,EAAoBvX,KAAKwX,EAAqBjI,MAGzCgI,GAGLtJ,EAAQpO,EAAMoK,MAAM9B,KAAU,GAC9BgG,EAAUtO,EAAMoK,MAAM7B,KAAY,GAElCkH,EAAQ,uBACPgI,EAAuBrJ,IADhB,aAEPqJ,EAAuBnJ,KAI1BmB,EADsB,IAApBA,EAASxC,OACA,KAGT,yBAAK5M,UAAU,yBACb,0CACA,8BAAOoP,EAASnP,KAAK,QAK3B,IACIsX,GADgBvF,GAAerS,EAAMoK,OACPpK,EAAMoC,UAAUuQ,QAAQ,GACtDvQ,EAAW,KACXyV,EAAY,QAkBhB,OAhBI7X,EAAMyD,KACRmU,EACE,wBAAIvX,UAAU,4BAAd,IAA2CuX,GAEpC5X,EAAM6Q,OACf+G,EACE,wBAAIvX,UAAU,6BAAd,IAA4CuX,GAE9CxV,EAAWpC,EAAMoC,SAAW,IACxBpC,EAAMoC,SAAW,IACnByV,EAAY,WAGdD,EAAe,wBAAIvX,UAAU,sBAAd,IAAqCuX,GAIpD,yBAAKvX,UAAU,eACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,4BACX+B,EADH,IACcpC,EAAMoK,MAAMhC,IAD1B,IACkCpI,EAAMoK,MAAMjC,IAAQ,IACnDnI,EAAMoK,MAAN,UAFH,IAE6ByN,IAG9BD,GAEH,yBAAKvX,UAAU,wBACb,8BAAOiX,EAAP,YACA,8BAAOC,EAAP,WACCC,EACA/H,MCzBMqI,I,mNA9Eb/W,MAAQ,CACNqB,SAAU,EAAKpC,MAAMoC,U,EAcvBwR,qBAAuB,SAAC5R,GACtB,EAAK2R,SAAS,CAAEvR,SAAUJ,EAAM8R,OAAOjQ,S,oEAZnB3B,EAAW6V,GAC/B,OACE5V,KAAKnC,MAAMoC,WAAaF,EAAUE,UAClCD,KAAKnC,MAAMoK,QAAUlI,EAAUkI,OAC/BjI,KAAKpB,MAAMqB,WAAa2V,EAAU3V,W,+BAW5B,IAAD,OACDuG,EAAQ0J,GAAelQ,KAAKnC,MAAMoK,OAEpC4N,EAAO,KAqBX,OAnBEA,EADE7V,KAAKnC,MAAMqK,OAEX,kBAAC,EAAD,CACExJ,K9ChCa,S8CiCbJ,QAAS,kBAAM,EAAKT,MAAMiY,WAAW,EAAKlX,MAAMqB,YAFlD,gBASA,kBAAC,EAAD,CACEvB,K9CzCa,S8C0CbJ,QAAS,kBAAM,EAAKT,MAAMkO,UAAU,EAAKnN,MAAMqB,YAFjD,eAUF,yBAAK/B,UAAU,iBACb,wBAAIA,UAAU,iBAAd,YACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,8BACb,kBAAC,GAAD,CACE+B,SAAUD,KAAKpB,MAAMqB,SACrBgI,MAAOjI,KAAKnC,MAAMoK,SAGtB,yBAAK/J,UAAU,0BACb,wBAAIA,UAAU,wBAAd,KACKsI,EAAQxG,KAAKpB,MAAMqB,UAAUuQ,QAAQ,IAE1C,yBAAKtS,UAAU,2BACb,kBAAC,GAAD,CACEA,UAAU,aACV0D,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClCF,MAAO1B,KAAKpB,MAAMqB,SAClB0B,SAAU3B,KAAKyR,wBAGnB,yBAAKvT,UAAU,uBAAuB2X,U,GAlEvBlV,cC0CZoV,I,OAzCc,SAAClY,GAE5B,OADAmY,qBAAU,cAAU,CAACnY,EAAMoY,QAEzB,yBAAK/X,UAAU,YACb,4BACEI,QAAST,EAAMS,QACfJ,UACEL,EAAMoY,QAAUC,GACZ,yEACA,8CAENxU,MAAOwU,IAPT,YAWA,4BACE5X,QAAST,EAAMS,QACfJ,UACEL,EAAMoY,QAAUE,GACZ,6EACA,kDAENzU,MAAOyU,IAPT,kBAWA,4BACE7X,QAAST,EAAMS,QACfJ,UAAU,gDACVwD,MAAO0U,IAHT,mBCvBSC,I,cARE,SAACxY,GAChB,OAAOA,EAAMyY,KAAO,yBAAKpY,UAAU,YAAYL,EAAMO,UAAkB,OCkC1DmY,GAhCD,SAAC1Y,GACbmY,qBAAU,WACJnY,EAAMyY,KACRE,SAASC,KAAKhW,MAAMiW,SAAW,SAE/BF,SAASC,KAAKhW,MAAMiW,SAAW,WAInC,IAAIC,EAAkB,CAAC,SAOvB,OANI9Y,EAAM8K,OACRgO,EAAgB3Y,KAAK,gBAElBH,EAAMyY,MACTK,EAAgB3Y,KAAK,iBAGrB,kBAAC,GAAD,CAAUsY,KAAMzY,EAAMyY,KAAMM,QAAS/Y,EAAMgZ,aACzC,yBAAK3Y,UAAWyY,EAAgBxY,KAAK,MACnC,kBAAC,IAAD,CAASD,UAAU,eAAeI,QAAST,EAAMgZ,cACjD,yBAAK3Y,UAAU,mBAAmBL,EAAMO,a,mBCsBjC0Y,GA5CM,SAACjZ,GACpB,OACE,yBAAKK,UAAU,mBACZ6L,OAAOgB,KAAKlN,EAAMkZ,cAAclV,KAAI,SAACC,GACpC,IAAMkV,EAAWnZ,EAAMoZ,eAAiBnV,EACpCW,EAAoB,KAIxB,OAHI5E,EAAMqZ,mBAAqBrZ,EAAMqZ,kBAAkBpV,KACrDW,EAAoB5E,EAAMqZ,kBAAkBpV,GAAQW,mBAGpD,yBACElD,IAAKuC,EACLxD,QAAST,EAAMS,QACfJ,UAAU,SACViZ,aAAYrV,GAEXkV,EAAW,kBAAC,KAAD,CAAe9Y,UAAU,sBAAyB,KAC9D,yBACEA,UAAU,cACVgD,IAAKrD,EAAMkZ,aAAajV,GAAQK,KAChClB,IAAKa,IAEP,yBACE5D,UACE8Y,EACI,sCACA,gBAGLlV,EAPH,IAOYW,SCGT2U,I,OAjCO,SAACvZ,GACrB,OACE,yBAAKK,UAAU,mBACZL,EAAMwZ,iBAAiBxV,KAAI,SAACC,GAC3B,IAAIW,EAAoB,KAIxB,OAHI5E,EAAMqZ,mBAAqBrZ,EAAMqZ,kBAAkBpV,KACrDW,EAAoB5E,EAAMqZ,kBAAkBpV,GAAQW,mBAGpD,yBACElD,IAAKuC,EACLxD,QAAST,EAAMS,QACfJ,UACEL,EAAMoZ,eAAiBnV,EACnB,wCACA,gBAENqV,aAAYrV,GAEXA,EAVH,IAUYW,S,oBCJhB6U,G,uKACM,IAAD,OACP,OACE,yBAAKpZ,UAAU,WACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,0BAAd,QACA,kBAAC,GAAD,CACEmZ,iBAAkB3U,GAClBuU,aAAcjX,KAAKnC,MAAMoK,MAAMhC,IAC/B3H,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,EAAGtR,QAG1C,yBAAK/H,UAAU,mBACb,wBAAIA,UAAU,0BAAd,SACA,kBAAC,GAAD,CACEgZ,kBAAmBlV,GACnBqV,iBAAkBtV,GAClBkV,aAAcjX,KAAKnC,MAAMoK,MAAMjC,IAC/B+Q,aAAc/U,GACd1D,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,EAAGvR,QAI1C,yBAAK9H,UAAU,mBACb,wBAAIA,UAAU,0BAAd,gBACA,kBAAC,GAAD,CACEmZ,iBAAkBrQ,GAClBiQ,aAAcjX,KAAKnC,MAAMoK,MAAX,YACd8O,aAAc9P,GACd3I,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,EzC1CnB,wB,GyCaG5W,aAqC/B2W,GAAiBE,WAAa,CAC5BvP,MAAOwP,KAAUC,OAAOC,YAGXL,UCFAM,G,uKAtCH,IAAD,OACP,OACE,yBAAK1Z,UAAU,WACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,0BAAd,SACA,kBAAC,GAAD,CACE+Y,aAAcjX,KAAKnC,MAAMoK,MAAM/B,IAC/B6Q,aAActQ,GACdnI,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,EAAGrR,QAG1C,yBAAKhI,UAAU,mBACb,wBAAIA,UAAU,0BAAd,mBACA,kBAAC,GAAD,CACEgZ,kBAAmBnQ,GACnBsQ,iBAAkBvQ,GAClBmQ,aAAcjX,KAAKnC,MAAMoK,MAAX,YACd3J,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,E1CjCnB,mB0CoCpB,yBAAKrZ,UAAU,mBACb,wBAAIA,UAAU,0BAAd,oBACA,kBAAC,GAAD,CACEgZ,kBAAmB3Q,GACnB8Q,iBAAkB/Q,GAClB2Q,aAAcjX,KAAKnC,MAAMoK,MAAX,aACd3J,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,E1CzClB,yB,G0CcI5W,aCsKlBkX,I,cA5KQ,SAACha,GACtB,IAAMS,EAAU,SAACuB,GACfA,EAAMC,kBACNjC,EAAMS,QAAQuB,IAGViY,EAAgB,SAACjY,GACrBA,EAAMC,kBACNjC,EAAMia,cAAcjY,IAGhBkY,EAAiB,SAAClY,GACtBA,EAAMC,kBACNjC,EAAMka,eAAelY,IAGvB,OACE,yBAAK3B,UAAU,gBACZ6L,OAAOgB,KAAKlN,EAAMkZ,cAAclV,KAAI,SAAC0L,GACpC,IAGIyK,EAHEhB,EAAWjN,OAAOgB,KAAKlN,EAAMoa,eAAehI,SAAS1C,GACvD2K,EAAY,KACZC,EAAuB,CAAC,kBAExBC,EAAiB,KACjBC,EAAYxa,EAAMoa,cAAc1K,GAyCpC,GAxCA4K,EAAqBna,KAAK,4BAC1Bga,EACE,yBAAK9Z,UAAU,0BACb,yBACEA,UACEma,G3CjCa,U2CiCAA,EAAUvQ,OACnB,wCACA,gBAENwQ,eAAc/K,EACd4J,a3CtCe,Q2CuCf7Y,QAASwZ,GARX,SAYA,yBACE5Z,UACEma,G3C5Ce,Y2C4CFA,EAAUvQ,OACnB,wCACA,gBAENwQ,eAAc/K,EACd4J,a3CjDiB,U2CkDjB7Y,QAASwZ,GARX,WAYA,yBACE5Z,UACGma,EAEG,gBADA,wCAGNlB,aAAY5J,EACZjP,QAASA,GAPX,SAaA0Y,EAAU,CACZkB,EAAY,kBAAC,KAAD,CAAeha,UAAU,8BAErC,IAAIqa,EAAiBF,EAAUtQ,UAAY1B,GACvCmS,E3CrEW,a2CqEKH,EAAUtQ,QAC1B0Q,E3CrEY,c2CqEKJ,EAAUtQ,QAC/BqQ,EACE,yBAAKla,UAAU,2BACb,yBACEA,UACEqa,EACI,0CACA,iBAEND,eAAc/K,EACd4J,aAAY9Q,GACZ/H,QAASyZ,GAET,yBACE7Z,UACEqa,EACI,wDACA,2BAIV,yBACEra,UACEsa,EACI,0CACA,iBAENF,eAAc/K,EACd4J,a3ClGS,W2CmGT7Y,QAASyZ,GAET,yBACE7Z,UACEsa,EACI,sDACA,0BAIV,yBACEta,UACEua,EACI,0CACA,iBAENH,eAAc/K,EACd4J,a3CnHU,Y2CoHV7Y,QAASyZ,GAET,yBACE7Z,UACEua,EACI,wDACA,4BAQhB,OACE,yBACElZ,IAAKgO,EACLjP,QAAST,EAAMS,QACfJ,UAAWia,EAAqBha,KAAK,KACrCgZ,aAAY5J,GAEZ,yBACErP,UAAU,gCACViZ,aAAY5J,EACZjP,QAASA,GAER4Z,EACD,yBACEha,UAAU,sBACVgD,IAAKrD,EAAMkZ,aAAaxJ,GAASpL,KACjClB,IAAKsM,KAGT,yBAAKrP,UAAU,2BACb,0BAAMA,UAAU,wBAAwBqP,GACxC,yBACErP,UAAU,iCACVI,QAAS,SAACiZ,GAAD,OAAOA,EAAEzX,oBAEjBkY,EACAI,WCzHFM,I,mNA3Cb9Z,MAAQ,G,EAER+Z,kBAAoB,SAAC7W,GACnBA,EAAOxD,W,uDAGC,IAAD,OACP,OACE,yBAAKJ,UAAU,iBACZ8B,KAAKnC,MAAM+D,QAAQC,KAAI,SAACC,GAuBvB,OArBI,EAAKjE,MAAM+a,iBAAmB9W,EAAO+W,WAErC,kBAAC,EAAD,CACEtZ,IAAKuC,EAAO+W,WACZva,QAAS,kBAAM,EAAKqa,kBAAkB7W,IACtCpD,KvDjBQ,2BuDmBPoD,EAAOgX,aAKV,4BACEvZ,IAAKuC,EAAO+W,WACZva,QAAS,kBAAM,EAAKqa,kBAAkB7W,IACtC5D,UAAU,yBAET4D,EAAOgX,qB,GA7BInY,cCyEboY,G,4MApEbna,MAAQ,CACNqX,MAAO,EAAKpY,MAAM4S,aAAetK,I,EAGnC6S,mBAAqB,WACnB,EAAKxH,SAAS,CAAEyE,MAAO7P,M,EAGzB6S,iBAAmB,WACjB,EAAKzH,SAAS,CAAEyE,MAAO9P,M,uDAGf,IAAD,OACH+S,EAAkB,KAEpBA,EADElZ,KAAKpB,MAAMqX,QAAU9P,GAErB,kBAAC,IAAMlH,SAAP,KACE,kBAAC,GAAD,CACEX,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,EAAGpR,KACtC2R,cAAe,SAACP,GAAD,OAAO,EAAK1Z,MAAMia,cAAcP,EAAGpR,KAClD4R,eAAgB,SAACR,GAAD,OAAO,EAAK1Z,MAAMka,eAAeR,EAAGpR,KACpD4Q,aAAcpU,GACdsV,cAAejY,KAAKnC,MAAMoK,MAAM9B,KAAU,MAM9C,kBAAC,IAAMlH,SAAP,KACE,kBAAC,GAAD,CACEX,QAAS,SAACiZ,GAAD,OAAO,EAAK1Z,MAAMS,QAAQiZ,EAAGnR,KACtC0R,cAAe,SAACP,GAAD,OAAO,EAAK1Z,MAAMia,cAAcP,EAAGnR,KAClD2R,eAAgB,SAACR,GAAD,OAAO,EAAK1Z,MAAMka,eAAeR,EAAGnR,KACpD2Q,aAAc3S,GACd6T,cAAejY,KAAKnC,MAAMoK,MAAM7B,KAAY,MAMpD,IAAMxE,EAAU,CACd,CACEiX,WAAY1S,GACZ2S,YAAa,QACbxa,QAAS0B,KAAKiZ,kBAEhB,CACEJ,WAAYzS,GACZ0S,YAAa,UACbxa,QAAS0B,KAAKgZ,qBAGlB,OACE,yBAAK9a,UAAU,WACb,yBAAKA,UAAU,yBACb,kBAAC,GAAD,CAAe0a,eAAgB5Y,KAAKpB,MAAMqX,MAAOrU,QAASA,KAE5D,yBAAK1D,UAAU,qBACdgb,O,GA3DqBvY,aCajByV,GAAa,aACbD,GAAe,eACfD,GAAW,WAGlBiD,G,4MACJva,MAAQ,CACNqX,MAAOG,I,EAKTgD,iBAAmB,SAACvZ,GAClB,EAAK2R,SAAS,CAAEyE,MAAOpW,EAAM8R,OAAOjQ,S,EAKtC2X,kBAAoB,SAACpD,GACnB,EAAKzE,SAAS,CAAEyE,MAAOA,K,EAIzBqD,mBAAqB,WACnB,EAAK9H,SAAS,CAAEyE,MAAOG,KACvB,EAAKvY,MAAM0b,qB,EAIbC,oBAAsB,SAAC3Z,EAAO4N,GAC5B,EAAK5P,MAAM4b,YAAYhM,EAAU5N,EAAM6Z,cAAcC,QAAQjY,Q,EAI/DkY,mBAAqB,SAAC/Z,EAAO4N,GAC3B,EAAK5P,MAAMgc,cAAcpM,EAAU5N,EAAM6Z,cAAcC,QAAQjY,Q,EAGjEoY,kBAAoB,SAACja,EAAO4N,GAC1B,EAAK5P,MAAMkc,iBACTtM,EACA5N,EAAM6Z,cAAcC,QAAQpM,QAC5B1N,EAAM6Z,cAAcC,QAAQjY,Q,EAIhCsY,mBAAqB,SAACna,EAAO4N,GAC3B,EAAK5P,MAAMoc,kBACTxM,EACA5N,EAAM6Z,cAAcC,QAAQpM,QAC5B1N,EAAM6Z,cAAcC,QAAQjY,Q,EAKhC0Q,gBAAkB,SAACnS,GACjB,EAAKpC,MAAMkO,UAAU,EAAKlO,MAAMoK,MAAOhI,GACvC,EAAKqZ,sB,EAIPY,iBAAmB,SAACja,GAClB,EAAKpC,MAAMiY,WAAW,EAAKjY,MAAMoK,MAAOhI,EAAU,EAAKpC,MAAMqK,QAC7D,EAAKoR,sB,uDAGG,IAAD,OACHa,EAAU,KACVC,EAAO,KACPC,EAAO,KAILC,EAAkB,SAACrE,EAAOsE,GAC9B,OACE,yBAAKrc,UAAU,wBACb,kBAAC,EAAD,CAAQQ,KzD/FK,SyD+FUJ,QAAS,kBAAM,EAAK+a,kBAAkBpD,KAC1DsE,KAQLva,KAAKpB,MAAMqX,QAAUG,IACvB+D,EACE,kBAAC,GAAD,CACElS,MAAOjI,KAAKnC,MAAMoK,MAClB3J,QAAS0B,KAAKwZ,sBAGlBa,EAAOC,EAAgBnE,GAAc,SAC5BnW,KAAKpB,MAAMqX,QAAUE,IAG9BgE,EACE,kBAAC,GAAD,CACElS,MAAOjI,KAAKnC,MAAMoK,MAClB3J,QAAS0B,KAAKwZ,sBAGlBY,EAAOE,EAAgBlE,GAAY,QACnCiE,EAAOC,EAAgBpE,GAAU,SACxBlW,KAAKpB,MAAMqX,QAAUC,KAG9BiE,EACE,kBAAC,GAAD,CACElS,MAAOjI,KAAKnC,MAAMoK,MAClB3J,QAAS0B,KAAK4Z,mBACd9B,cAAe9X,KAAK8Z,kBACpB/B,eAAgB/X,KAAKga,qBAGzBI,EAAOE,EAAgBnE,GAAc,SAGvC,IAAIqE,EAAe,KAoCnB,OAnCIxa,KAAKnC,MAAMsP,mBACbqN,EACE,yBAAKtc,UAAU,gBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,yBACb,kBAAC,GAAD,CACE6N,UAAW/L,KAAKoS,gBAChB0D,WAAY9V,KAAKka,iBACjBjS,MAAOjI,KAAKnC,MAAMoK,MAClBhI,SAAUD,KAAKnC,MAAMoC,SACrBiI,OAAQlI,KAAKnC,MAAMqK,UAGvB,yBAAKhK,UAAU,yBACb,kBAAC,GAAD,CAAqB+J,MAAOjI,KAAKnC,MAAMoK,UAG3C,yBAAK/J,UAAU,yBACb,wBAAIA,UAAU,iBAAd,iBACA,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CACE+X,MAAOjW,KAAKpB,MAAMqX,MAClB3X,QAAS0B,KAAKoZ,oBAGjBe,EACD,yBAAKjc,UAAU,kBACZkc,EACAC,MAQT,kBAAC,GAAD,CACE/D,KAAMtW,KAAKnC,MAAMsP,iBACjB0J,YAAa7W,KAAKsZ,oBAEjBkB,O,GA1JkB7Z,aA8KZhC,gBAPS,SAACC,GAAD,MAAY,CAClCsJ,OAAQtJ,EAAMsQ,aAAahH,OAC3BD,MAAOrJ,EAAMsQ,aAAajH,MAC1BhI,SAAUrB,EAAMsQ,aAAajP,SAC7BkN,iBAAkBvO,EAAMsQ,aAAa/B,oBAGC,CACtCoM,kBzC/L+B,WAC/B,MAAO,CACL7a,KCb+B,wBwC2MjC+a,YzCzLyB,SAAChM,EAAU/L,GACpC,MAAO,CACLhD,KCnBwB,eDoBxB+O,SAAUA,EACV/L,MAAOA,IyCsLTmY,czCjL2B,SAACpM,EAAU/L,GACtC,MAAO,CACLhD,KC3B0B,iBD4B1B+O,SAAUA,EACV/L,MAAOA,IyC8KTqY,iBzCzK8B,SAACtM,EAAUF,EAAS7L,GAClD,MAAO,CACLhD,KCnC8B,qBDoC9B+O,SAAUA,EACVF,QAASA,EACT7L,MAAOA,IyCqKTuY,kBzChK+B,SAACxM,EAAUF,EAAS7L,GACnD,MAAO,CACLhD,KC5C+B,sBD6C/B+O,SAAUA,EACVF,QAASA,EACT7L,MAAOA,IyC4JTqK,aACA+J,WrCiNwB,SAAC7N,EAAOhI,EAAUiI,GAC1C,OAAO,SAACqC,EAAUyB,GAChB,IAAM9B,EAAO,CAAEjC,MAAOA,EAAOhI,SAAUA,GAGvC,GAFAsK,EAASmC,GAAoBV,IAAW1K,KAAKD,MAAM6G,GAAQD,QAEvD+D,IAAW1K,KAAKkJ,OAClBC,GACGkC,IACC,UACEX,IAAW1K,KAAKkJ,OAChB,UACAtC,EACA,cACA8D,IAAWlN,KAAKC,QAClBmL,GAEDS,MAAK,WACJJ,EAAS,CACP7L,KCxagB,eDyahBwJ,OAAQA,EACRgC,KAAMA,OAdZ,OAiBS,WACLK,EAASqC,MACTrC,EAAS/L,EEpbS,6BFwbnB,CACH,IAAI8C,EAAO2H,GAAcgC,QAAQ,QACjC3J,EAAKrB,UAAYqB,EAAKD,MAAM6G,GAAQjI,SACpCqB,EAAKD,MAAM6G,GAAUgC,EACrB5I,EAAKrB,UAAYiK,EAAKjK,SACtBgJ,GAAcyC,QAAQ,OAAQpK,GAC9BiJ,EAAS,CACP7L,KC1boB,eD2bpBwJ,OAAQA,EACRgC,KAAMA,QqC9PCvL,CAQZwa,I,4BC7HYxa,gBALS,SAACC,GAAD,MAAY,CAClCiQ,QAASjQ,EAAM0C,KAAKqM,gBACpBd,iBAAkBjO,EAAM0C,KAAKuL,oBAGS,KAAzBlO,EAzEE,SAACd,GAChB,IAEI4c,EAAS,KACR5c,EAAMsR,WACTsL,EACE,0BAAMvc,UAAU,OAAOI,QAAST,EAAMiP,YAAtC,WAMJ,IAAI2I,GAAgBvF,GAAerS,EAAMoK,OAASpK,EAAMoC,UAAUuQ,QAAQ,GA6C1E,OA1CI3S,EAAMgR,SAAW6L,mBAAQ7c,EAAMgP,iBAAkBhP,EAAMoK,OAEvD,yBAAK/J,UAAU,eACb,kBAAC,cAAD,OAKF,yBAAKA,UAAU,QACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAcuW,OAAK,EAACxM,MAAOpK,EAAMoK,SAEnC,yBAAK/J,UAAU,qBACb,kBAAC,GAAD,CACEyc,SAAU9c,EAAM8c,SAChBrZ,MAAI,EACJ2G,MAAOpK,EAAMoK,MACbhI,SAAUpC,EAAMoC,aAItB,yBAAK/B,UAAU,iBACb,yBAAKA,UAAU,eAAf,IAA+BuX,GAC/B,yBAAKvX,UAAU,kBACb,kBAAC,GAAD,CACEyD,SAAU9D,EAAMyO,mBAChB1K,QAzCY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA0CrCF,MAAO7D,EAAMoC,YAGjB,yBAAK/B,UAAU,iBACb,0BAAMA,UAAU,kBAAkBI,QAAST,EAAM8c,UAAjD,QAGCF,QCpCEG,GArBG,SAAC/c,GACjB,OAAOkM,OAAOgB,KAAKlN,EAAMwD,OAAOQ,KAAI,SAACqG,GACnC,IAAMgC,EAAOrM,EAAMwD,MAAM6G,GACzB,OACE,kBAAC,GAAD,CACE3I,IAAK2I,EACLD,MAAOiC,EAAKjC,MACZhI,SAAUiK,EAAKjK,SACfqM,mBAAoB,SAACiL,GAAD,OAAO1Z,EAAMmT,yBAAyBuG,EAAGrP,IAC7D4E,WAAY,kBAAMjP,EAAMoT,iBAAiB/I,EAAQgC,EAAKjC,QACtD0S,SAAU,kBAAM9c,EAAMkT,eAAe7G,EAAKjC,MAAOiC,EAAKjK,SAAUiI,IAChEiH,SAAUtR,EAAMsR,eCiFTxQ,gBARS,SAACC,GAAD,MAAY,CAClCyC,MAAOzC,EAAM0C,KAAKD,MAClBmJ,OAAQ5L,EAAM0C,KAAKkJ,OACnBqE,QAASjQ,EAAM0C,KAAKoM,YACpB/E,MAAO/J,EAAM0C,KAAKuM,UAClBhP,gBAAiBD,EAAME,KAAKC,WAGU,CACtCiJ,0BACAsE,sBACAQ,eAHanO,EAhFF,SAACd,GACZ,IAAMsT,EAAWD,GAAkBrT,EAAMwD,OAErCC,EAAO,KAoDX,OAlDEA,EADEzD,EAAMgR,QAEN,yBAAK3Q,UAAU,oBACb,kBAAC,cAAD,OAGK6L,OAAOgB,KAAKlN,EAAMwD,OAAOyJ,OAAS,EAEzC,kBAAC,IAAM7L,SAAP,KACE,kBAAC,GAAD,CACE8R,eAAgB,SAAC9I,EAAOhI,EAAUiI,GAAlB,OACd6I,GAAelT,EAAOoK,EAAOhI,EAAUiI,IAEzC+I,iBAAkB,SAAC/I,EAAQD,GAAT,OAChBgJ,GAAiBpT,EAAOqK,EAAQD,IAElC+I,yBAA0B,SAACnR,EAAOqI,GAAR,OACxB8I,GAAyBnT,EAAOqK,EAAQrI,EAAM8R,OAAOjQ,QAEvDL,MAAOxD,EAAMwD,QAEf,yBAAKnD,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,qBACb,yCADF,IACqB,gCAAMiT,KAI7B,kBAAC,IAAD,CACE9S,GAAI,CACFiC,SAAUzC,EAAMgB,gBACZ,uBACA,UACJ2B,cAAc,IAGhB,kBAAC,EAAD,CAAQ9B,K5DtDC,U4DsDT,gBAQR,yBAAKR,UAAU,oBACb,oDAMJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,oBAAd,iBACCoD,O,wCC/BIuZ,GAAoB,WAC/B,MAAO,CACLnc,KlC7C+B,wBkCsItBoc,GAAY,SAAC/b,EAASuL,GACjC,OAAO,SAACC,GACNA,EAfK,CACL7L,KlCxH4B,qBkCuI5B+L,GACGC,IACC,qBACE3L,EACA,8BACAuL,EACA,KAEHK,MAAK,SAACC,GACL,IAAMmD,EAASnD,EAAIpB,KACnBe,EAAS,CACP7L,KlCjJwB,qBkCkJxBqP,OAAQA,OAZd,OAeS,WACLxD,EAAS/L,EvC1JS,yBuC2JlB+L,EA1BC,CACL7L,KlC7H6B,2BmCcpBqc,GAAc,SAAChc,EAASuL,GACnC,MAAO,CACL5L,KjCrBwB,eiCsBxBK,QAASA,EACTuL,OAAQA,IAqBC0Q,GAAU,WACrB,OAAO,SAACzQ,GACNtB,GAAc6D,WAAW,WACzB7D,GAAc6D,WAAW,kBACzB7D,GAAc6D,WAAW,UACzBvC,E1CoIK,CACL7L,KCnLsB,eyC+CtB6L,EAAS,CACP7L,KjChDsB,mBiCsDfuc,GAAmB,SAACC,GAC/B,OAAO,SAAC3Q,GACN4Q,YAAW,WACT5Q,EAASyQ,QACS,IAAjBE,KCsBQE,I,OA9ED,SAACvd,GACb,IAAIwd,EAAe,KACbC,EAAe,CAAC,kBAClBC,EAAkB,KAatB,OAXE1d,EAAM2d,SACN3d,EAAM4d,gBACN5d,EAAM6d,SACN7d,EAAM8d,gBAENL,EAAatd,KAAK,kBAClBud,EACE,uBAAGrd,UAAU,wBAAwBL,EAAM+d,eAIvC/d,EAAMge,aACZ,IAAK,QACHR,EACE,yCACEnd,UAAWod,EAAand,KAAK,MACzBN,EAAMie,cAFZ,CAGEpa,MAAO7D,EAAM6D,MACbC,SAAU9D,EAAM8D,YAGpB,MACF,IAAK,WACH0Z,EACE,4CACEnd,UAAWod,EAAand,KAAK,MACzBN,EAAMie,cAFZ,CAGEpa,MAAO7D,EAAM6D,MACbC,SAAU9D,EAAM8D,YAGpB,MACF,IAAK,SACH0Z,EACE,kBAAC,GAAD,CACEtI,KAAMlV,EAAMie,cAAc/I,KAC1BnR,QAAS/D,EAAMie,cAAcla,QAC7BF,MAAO7D,EAAM6D,MACbC,SAAU9D,EAAM8D,WAGpB,MACF,QACE0Z,EACE,yCACEnd,UAAWod,EAAand,KAAK,MACzBN,EAAMie,cAFZ,CAGEpa,MAAO7D,EAAM6D,MACbC,SAAU9D,EAAM8D,YAIxB,OACE,yBAAKzD,UAAU,SACb,+BAAQL,EAAMke,OACbV,EACAE,KCxDMS,GAAoB,SAACC,EAAMpc,EAAOqc,GAC7C,IAAMC,EAAW,gBACZF,GAGCG,EAAkB,gBACnBD,EAAYD,IAGsB,gBAAnCE,EAAmBP,YACrBO,EAAmB1a,MAnBG,SAAC2a,GACzB,IACIvK,GADW,GAAKuK,GAAQC,QAAQ,MAAO,IACvBxK,MAAM,2BAC1B,OAAIA,EACK,IAAMA,EAAM,GAAK,KAAOA,EAAM,GAAK,IAAMA,EAAM,GAEjDuK,EAasBE,CAAkB1c,EAAM8R,OAAOjQ,OAE1D0a,EAAmB1a,MAAQ7B,EAAM8R,OAAOjQ,MAE1C0a,EAAmBI,MAAQC,GACzBL,EAAmB1a,MACnB0a,EAAmBM,YAErBN,EAAmBV,SAAU,EAC7BS,EAAYD,GAAWE,EAEvB,IAAIO,GAAc,EAClB,IAAK,IAAIT,KAAWC,EAClBQ,EAAcR,EAAYD,GAASM,OAASG,EAE9C,MAAO,CAAEV,KAAME,EAAaQ,YAAaA,IAGrCF,GAAgB,SAAC/a,EAAOkb,GAC5B,IAAIC,GAAU,EAEd,IAAKD,EACH,OAAO,EAeT,GAZIA,EAAME,WACRD,EAA2B,KAAjBnb,EAAMqb,QAAiBF,GAG/BD,EAAMI,YACRH,EAAUnb,EAAMoJ,QAAU8R,EAAMI,WAAaH,GAG3CD,EAAMK,YACRJ,EAAUnb,EAAMoJ,QAAU8R,EAAMK,WAAaJ,GAG3CD,EAAMM,QAAS,CAEjBL,EADgB,wIACEM,KAAKzb,IAAUmb,EAGnC,GAAID,EAAMQ,UAAW,CAEnBP,EADgB,QACEM,KAAKzb,IAAUmb,EAGnC,GAAID,EAAMS,cAAe,CAEvBR,EADgB,+CACEM,KAAKzb,IAAUmb,EAGnC,OAAOA,GCJMS,G,4MA7DbtB,kBAAoB,SAACnc,EAAOqc,GAC1B,IAAMqB,EAAkBvB,GAAkB,EAAKne,MAAMoe,KAAMpc,EAAOqc,GAClE,EAAKre,MAAM2f,WAAW,CACpBvB,KAAMsB,EAAgBtB,KACtBU,YAAaY,EAAgBZ,e,uDAIvB,IAAD,OACDc,EAAoB,GAC1B,IAAK,IAAIle,KAAOS,KAAKnC,MAAMoe,KACzBwB,EAAkBzf,KAAK,CACrB0f,GAAIne,EACJoe,OAAQ3d,KAAKnC,MAAMoe,KAAK1c,KAI5B,IAAI0c,EA8BJ,OA7BAA,EACE,kBAAC,IAAMhd,SAAP,KACGwe,EAAkB5b,KAAI,SAAC+b,GACtB,OACE,kBAAC,GAAD,CACEre,IAAKqe,EAAYF,GACjB7B,YAAa+B,EAAYD,OAAO9B,YAChCC,cAAe8B,EAAYD,OAAO7B,cAClCpa,MAAOkc,EAAYD,OAAOjc,MAC1B+Z,eAAgBmC,EAAYD,OAAOjB,WACnClB,SAAUoC,EAAYD,OAAOnB,MAC7Bd,QAASkC,EAAYD,OAAOjC,QAC5BC,cAAe,EAAK9d,MAAM8d,cAC1BC,aAAcgC,EAAYD,OAAO/B,aACjCja,SAAU,SAAC4V,GAAD,OAAO,EAAKyE,kBAAkBzE,EAAGqG,EAAYF,UAI7D,yBAAKxf,UAAU,0BACb,kBAAC,EAAD,CACEQ,KjE1CW,SiE2CXU,SAAUY,KAAKnC,MAAM8d,gBAAkB3b,KAAKnC,MAAM8e,aAFpD,YAWJ,0BAAMze,UAAU,uBAAuB2f,SAAU7d,KAAKnC,MAAMggB,UACzD5B,O,GAlDUtb,aCMbmd,G,4MACJlf,MAAQ,CACNqd,KAAM,CACJ8B,MAAO,CACLlC,YAAa,QACbC,cAAe,CACbkC,YAAa,SAEftc,MAAO,GACPka,aAAc,qCACdc,WAAY,CACVI,UAAU,EACVI,SAAS,GAEXV,OAAO,GAETyB,SAAU,CACRpC,YAAa,QACbC,cAAe,CACbpd,KAAM,WACNsf,YAAa,YAEftc,MAAO,GACPka,aAAc,gDACdc,WAAY,CACVI,UAAU,EACVE,UAAW,GAEbR,OAAO,IAGXG,aAAa,EACbhB,eAAe,G,EAGjBuC,aAAe,SAACre,GACdA,EAAMse,iBACN,EAAK3M,SAAS,CAAEmK,eAAe,IAC3B,EAAK/c,MAAM+d,aACb,EAAK9e,MAAMugB,OACT,EAAKxf,MAAMqd,KAAK8B,MAAMrc,MACtB,EAAK9C,MAAMqd,KAAKgC,SAASvc,Q,EAK/B8b,WAAa,SAACa,GACZ,EAAK7M,SAAS6M,I,uDAId,IAAIpC,EACF,kBAAC,GAAD,iBACMjc,KAAKpB,MADX,CAEEif,SAAU7d,KAAKke,aACfV,WAAYxd,KAAKwd,cAGjBxd,KAAKnC,MAAMgR,UACboN,EACE,yBAAK/d,UAAU,WACb,kBAAC,cAAD,QAKN,IAAI0d,EAAe,KACf5b,KAAKnC,MAAM8K,QACbiT,EACE,yBAAK1d,UAAU,yBACb,2BAAI6R,GAAgB/P,KAAKnC,MAAM8K,MAAM4K,YAK3C,IAAI+K,EAAW,KASf,OARIte,KAAKnC,MAAMgB,kBAEXyf,EADEte,KAAKnC,MAAMwC,SAASG,aACX,kBAAC,IAAD,CAAUnC,GAAG,yBAEb,kBAAC,IAAD,CAAUA,GAAG,OAK1B,yBAAKH,UAAU,kBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,yBAAd,kCAGCogB,EACA1C,EACAK,EACD,yBAAK/d,UAAU,UACb,kBAAC,IAAD,CACEG,GAAI,CACFiC,SAAU,UACVE,aAAcR,KAAKnC,MAAMwC,SAASG,eAGpC,kBAAC,EAAD,CAAQ9B,KlE5GG,4BkE4GX,mB,GApGOiC,aAyHNhC,gBANS,SAACC,GAAD,MAAY,CAClCiQ,QAASjQ,EAAME,KAAK+P,QACpBlG,MAAO/J,EAAME,KAAK6P,YAClB9P,gBAAiBD,EAAME,KAAKC,WAGU,CAAEqf,OJlEpB,SAACL,EAAOE,GAC5B,gDAAO,WAAO1T,GAAP,gBAAAgU,EAAA,6DACLhU,EAxDK,CACL7L,KjCfsB,eiCuEhB8f,EAAW,CACfT,MAAOA,EACPE,SAAUA,EACVQ,mBAAmB,GALhB,SAOCrW,KACHwD,KACC,oHAEA4S,GAED7T,MAAK,SAACC,GACL3B,GAAcyC,QAAQ,UAAWd,EAAIpB,KAAKzK,SAE1CkK,GAAcyC,QACZ,iBACA,IAAIgT,MAAK,IAAIA,MAAOC,UAAiC,IAArB/T,EAAIpB,KAAKoV,YAE3C3V,GAAcyC,QAAQ,SAAUd,EAAIpB,KAAKqV,SAEzCtU,EAASwQ,GAAYnQ,EAAIpB,KAAKzK,QAAS6L,EAAIpB,KAAKqV,UAChDtU,EAAS0Q,GAAiBrQ,EAAIpB,KAAKoV,YACnCrU,EAASF,GAAQO,EAAIpB,KAAKzK,QAAS6L,EAAIpB,KAAKqV,UAC5CtU,EAASuQ,GAAUlQ,EAAIpB,KAAKzK,QAAS6L,EAAIpB,KAAKqV,aAlB5C,OAoBG,SAACC,GACNvU,EAAS/L,ExCzFM,YwC0Ff+L,EApEC,CACL7L,KjC7B0B,iBiC8B1BiK,MAkE0BmW,EAAIrW,SAASe,KAAKb,WA7BvC,2CAAP,wDIiEahK,CAAqCmf,IChI9CiB,G,kLAEF/e,KAAKnC,MAAMmd,Y,+BAIX,OACE,kBAAC,IAAD,CACE3c,GAAI,CACFiC,SAAU,IACVkT,aAAa,S,GAVD7S,aAiBPhC,eAAQ,KAAM,CAAEqc,YAAhBrc,CAA2BogB,ICbpCC,G,4MACJpgB,MAAQ,CACNqd,KAAM,CACJ8B,MAAO,CACLlC,YAAa,QACbC,cAAe,CACbkC,YAAa,SAEftc,MAAO,GACPka,aAAc,qCACdc,WAAY,CACVI,UAAU,EACVI,SAAS,GAEXV,OAAO,GAETyB,SAAU,CACRpC,YAAa,QACbC,cAAe,CACbpd,KAAM,WACNsf,YAAa,YAEftc,MAAO,GACPka,aAAc,gDACdc,WAAY,CACVI,UAAU,EACVE,UAAW,GAEbR,OAAO,IAGXG,aAAa,EACbhB,eAAe,G,EAGjBuC,aAAe,SAACre,GACdA,EAAMse,iBACN,EAAK3M,SAAS,CAAEmK,eAAe,IAC3B,EAAK/c,MAAM+d,aACb,EAAK9e,MAAMohB,OACT,EAAKrgB,MAAMqd,KAAK8B,MAAMrc,MACtB,EAAK9C,MAAMqd,KAAKgC,SAASvc,Q,EAK/B8b,WAAa,SAACa,GACZ,EAAK7M,SAAS6M,I,uDAId,IAAIpC,EACF,kBAAC,GAAD,iBACMjc,KAAKpB,MADX,CAEEif,SAAU7d,KAAKke,aACfV,WAAYxd,KAAKwd,cAGjBxd,KAAKnC,MAAMgR,UACboN,EACE,yBAAK/d,UAAU,WACb,kBAAC,cAAD,QAKN,IAAI0d,EAAe,KACf5b,KAAKnC,MAAM8K,QACbiT,EACE,yBAAK1d,UAAU,yBACb,2BAAI6R,GAAgB/P,KAAKnC,MAAM8K,MAAM4K,YAK3C,IAAI+K,EAAW,KAaf,OAZIte,KAAKnC,MAAMgB,kBAEXyf,EADEte,KAAKnC,MAAMwC,SAASG,aAEpB,kBAAC,IAAD,CACEnC,GAAI,CAAEiC,SAAU,uBAAwBmT,WAAY,UAI7C,kBAAC,IAAD,CAAUpV,GAAI,CAAEiC,SAAU,IAAKmT,WAAY,WAKxD,yBAAKvV,UAAU,kBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,yBAAd,0BACCogB,EACA1C,EACAK,Q,GA9FUtb,aAiHNhC,gBANS,SAACC,GAAD,MAAY,CAClCiQ,QAASjQ,EAAME,KAAK+P,QACpBlG,MAAO/J,EAAME,KAAK8P,YAClB/P,gBAAiBD,EAAME,KAAKC,WAGU,CAAEkgB,ONnBpB,SAAClB,EAAOE,GAC5B,OAAO,SAAC1T,GACNA,EA5FK,CACL7L,KjCfsB,eiC2GtB,IAAM8f,EAAW,CACfT,MAAOA,EACPE,SAAUA,EACVQ,mBAAmB,GAErBrW,KACGwD,KACC,wGAEA4S,GAED7T,MAAK,SAACC,GACLL,EAASwQ,GAAYnQ,EAAIpB,KAAKzK,QAAS6L,EAAIpB,KAAKqV,aAPpD,OASS,SAACC,GACNvU,EAAS/L,ExCjHM,YwCkHf+L,EArFC,CACL7L,KjCpC0B,iBiCqC1BiK,MAmF0BmW,EAAIrW,SAASe,KAAKb,cMAjChK,CAAqCqgB,IC/G9CE,I,yDAgEJ,WAAYrhB,GAAQ,IAAD,8BACjB,cAAMA,IAhERe,MAAQ,CACNqd,KAAM,CACJkD,OAAQ,CACNtD,YAAa,QACbC,cAAe,CACbkC,YAAa,kBAEftc,MAAO,GACPgb,WAAY,CACVI,UAAU,GAEZN,OAAO,GAET4C,KAAM,CACJvD,YAAa,QACbC,cAAe,CACbkC,YAAa,cAEftB,WAAY,CACVU,WAAW,GAEbxB,aAAc,wCACdla,MAAO,GACP8a,OAAO,GAET6C,KAAM,CACJxD,YAAa,QACbC,cAAe,CACbkC,YAAa,QAEftc,MAAO,GACPgb,WAAY,CACV4C,UAAW,EACXxC,UAAU,GAEZN,OAAO,GAET5d,MAAO,CACLid,YAAa,QACbC,cAAe,CACbkC,YAAa,SAEftc,MAAO,GACPgb,WAAY,CACVI,UAAU,GAEZN,OAAO,GAET+C,QAAS,CACP1D,YAAa,QACbC,cAAe,CACbkC,YAAa,YAEftc,MAAO,GACPgb,WAAY,CACVI,UAAU,GAEZN,OAAO,IAGXG,aAAa,EACbhB,eAAe,GAEE,EAKnBuC,aAAe,SAACre,GACdA,EAAMse,iBACN,EAAK3M,SAAS,CAAEmK,eAAe,IAC3B,EAAK/c,MAAM+d,aACb,EAAK9e,MAAM2hB,gBAAgB,EAAK5gB,MAAMqd,OATvB,EAanBuB,WAAa,SAACa,GACZ,EAAK7M,SAAS6M,IAZd,EAAKxgB,MAAM4hB,uBAFM,E,iEAkBbzf,KAAKnC,MAAMoQ,cACbjO,KAAKnC,MAAM8B,QAAQ3B,KAAK,e,+BAK1B,IAAI4d,EAAe,KACfK,EAAO,KAwBX,OAtBEA,EADEjc,KAAKnC,MAAMgR,QAEX,yBAAK3Q,UAAU,WACb,kBAAC,cAAD,OAKF,kBAAC,GAAD,iBACM8B,KAAKpB,MADX,CAEEif,SAAU7d,KAAKke,aACfV,WAAYxd,KAAKwd,cAKnBxd,KAAKnC,MAAM8K,QACbiT,EACE,yBAAK1d,UAAU,yBACb,2BAAI8B,KAAKnC,MAAM8K,SAKnB,kBAAC,IAAM1J,SAAP,KACE,wBAAIf,UAAU,yBAAd,sCAGC0d,EACAK,O,GAvHiBtb,cAyIXhC,gBANS,SAACC,GAAD,MAAY,CAClCqP,aAAcrP,EAAMuQ,SAASlB,aAC7BtF,MAAO/J,EAAMuQ,SAASjB,uBACtBW,QAASjQ,EAAMuQ,SAASnB,qBAGc,CACtCwR,gBR1F6B,SAACE,GAC9B,OAAO,SAACnV,GACN,IAAIoV,EAAS,CACXpgB,IAAKgJ,mBACL4W,OAAQO,EAAYP,OAAOzd,MAC3Bke,UAAWF,EAAYN,KAAK1d,MAC5B2d,KAAMK,EAAYL,KAAK3d,MACvB9C,MAAO8gB,EAAY9gB,MAAM8C,MACzB6d,QAASG,EAAYH,QAAQ7d,MAC7Bme,WAAY,IAGdtV,EAAS,CACP7L,KlClEgC,2BkCqElCohB,KACGpV,IAAInC,yDAA+C,CAClDoX,OAAQA,IAEThV,MAAK,SAACC,GACL,GAAIA,EAAIpB,KAAKsB,OAAS,EAAG,CACvB,IAAMiV,EAAYnV,EAAIpB,KAAK,GAAGwW,SAASC,eACrB,MAAdF,EACFxV,EAAS,CACP7L,KlC7E0B,2BkC8E1ByP,gBAAiB,CACfgR,OAAQO,EAAYP,OAAOzd,MAC3Bke,UAAWF,EAAYN,KAAK1d,MAC5B2d,KAAMK,EAAYL,KAAK3d,MACvB9C,MAAO8gB,EAAY9gB,MAAM8C,MACzB6d,QAASG,EAAYH,QAAQ7d,SAGV,MAAdqe,EACTxV,EAAS,CACP7L,KlCvFyB,0BkCwFzBiK,MAAO,uCAEc,MAAdoX,GAAmC,MAAdA,GAC9BxV,EAAS,CACP7L,KlC5FyB,0BkC6FzBiK,MAAO,2DAIX4B,EAAS,CACP7L,KlClG2B,0BkCmG3BiK,MAAO,0CAhCf,OAoCS,WACL4B,EAAS/L,EvCvGe,qBuCwGxB+L,EAAS,CACP7L,KlC1G6B,iC0C8IrC+gB,qBRnGkC,WAClC,MAAO,CACL/gB,KlC5CkC,4B0C2IvBC,CAGZiC,YAAWse,KC7IRgB,G,4MACJthB,MAAQ,CACNuhB,YAAY,G,EAGdC,YAAc,SAACvgB,GAC4B,aAArCA,EAAM6Z,cAAcC,QAAQjb,KAC9B,EAAK8S,SAAS,CAAE2O,YAAY,IAE5B,EAAKtiB,MAAM8B,QAAQ3B,KAAK,c,uDAK1B,IAAIuV,EAAU,KAQd,GAPIvT,KAAKnC,MAAMwC,SAASoT,aACtBF,EACE,kBAAC,GAAD,KACE,kBAAC,GAAD,SAIDvT,KAAKnC,MAAMgB,gBACd,OACE,kBAAC,IAAD,CACER,GAAI,CACFiC,SAAU,UACVE,cAAc,KAMtB,IAAIyb,EAAO,KAEPjc,KAAKpB,MAAMuhB,aACblE,EAAO,kBAAC,GAAD,OAGT,IAAIoE,EAAsB,CAAC,cACvBC,EAAqB,CAAC,oBACtBC,EAAiB,CAAC,oBAOtB,OANIvgB,KAAKpB,MAAMuhB,aACbE,EAAoBriB,KAAK,wBACzBsiB,EAAmBtiB,KAAK,8BACxBuiB,EAAeviB,KAAK,+BAIpB,kBAAC,IAAMiB,SAAP,KACGsU,EACD,yBAAKrV,UAAU,kBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,yBAAd,iCAGA,yBAAKA,UAAWmiB,EAAoBliB,KAAK,MACvC,yBACEG,QAAS0B,KAAKogB,YACdI,YAAU,WACVtiB,UAAWoiB,EAAmBniB,KAAK,MAEnC,yBAAKD,UAAWqiB,EAAepiB,KAAK,MAClC,kBAAC,IAAD,OAEF,0BAAMD,UAAU,2BAAhB,aAEF,yBACEI,QAAS0B,KAAKogB,YACdI,YAAU,WACVtiB,UAAU,oBAEV,yBAAKA,UAAU,oBACb,kBAAC,IAAD,OAEF,0BAAMA,UAAU,2BAAhB,cAGH+d,S,GA9EWtb,aA8FThC,gBAJS,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKC,WAGU,KAAzBJ,CAA+BuhB,IC/E/BO,GAtBS,SAAC5iB,GACvB,OACE,0BAAMK,UAAU,qBACd,qDACA,0BAAMA,UAAU,WACd,4BACGL,EAAMsQ,gBAAgBgR,OADzB,eAEGthB,EAAMsQ,gBAAgByR,WAEzB,4BACG/hB,EAAMsQ,gBAAgBkR,KADzB,KACiCxhB,EAAMsQ,gBAAgBvP,MAAO,IAC3Df,EAAMsQ,gBAAgBoR,YCI3BmB,G,4MACJC,kBAAoB,SAACC,GACf,EAAK/iB,MAAMkB,SACb,EAAKlB,MAAMgjB,YACTD,EACA,EAAK/iB,MAAMwD,MACX,EAAKxD,MAAMkB,QACX,EAAKlB,MAAMyM,S,iEAKE2K,IAEfA,EAAU5G,iBACTrO,KAAKnC,MAAMwQ,iBACXrO,KAAKnC,MAAMyQ,mBAEZtO,KAAKnC,MAAM8B,QAAQ3B,KAAK,CAAEsC,SAAU,IAAKE,cAAc,IACvDR,KAAKnC,MAAMijB,UAAU9gB,KAAKnC,MAAMyM,W,+BAI1B,IAAD,OACD6G,EAAWD,GAAkBlR,KAAKnC,MAAMwD,OACxC0f,EvC0EkB,SAAC5P,GAC3B,OAAmB,GAAXA,GAAgBX,QAAQ,GuC3ElBwQ,CAAa7P,GACnByP,IAAUzP,IAAY4P,GAAKvQ,QAAQ,GACrCrC,EAAkB,KAClBnO,KAAKnC,MAAMsQ,kBACbA,EACE,kBAAC,GAAD,CAAiBA,gBAAiBnO,KAAKnC,MAAMsQ,mBAIjD,IAAI0S,EAAc,KAEhBA,EADE7gB,KAAKnC,MAAMwQ,gBAEX,kBAAC,EAAD,CAAQ3P,KxEpDO,UwEqDb,kBAAC,cAAD,CAAYuiB,MAAM,WAKpB,kBAAC,EAAD,CAAQ3iB,QAAS,kBAAM,EAAKqiB,kBAAkBC,IAAQliB,KxE1DvC,UwE0Df,eAMJ,IAAI4C,EAAO,KAmDX,OAjDEA,EADEtB,KAAKnC,MAAMgR,QAEX,yBAAK3Q,UAAU,oBACb,kBAAC,cAAD,OAGK6L,OAAOgB,KAAK/K,KAAKnC,MAAMwD,OAAOyJ,OAAS,EAE9C,kBAAC,IAAM7L,SAAP,KACE,kBAAC,GAAD,CACE8R,eAAgB,SAAC9I,EAAOhI,EAAUiI,GAAlB,OACd6I,GAAe,EAAKlT,MAAOoK,EAAOhI,EAAUiI,IAE9C+I,iBAAkB,SAAC/I,EAAQD,GAAT,OAChBgJ,GAAiB,EAAKpT,MAAOqK,EAAQD,IAEvC+I,yBAA0B,SAACnR,EAAOqI,GAAR,OACxB8I,GAAyB,EAAKnT,MAAOqK,EAAQrI,EAAM8R,OAAOjQ,QAE5DyN,UAAQ,EACR9N,MAAOrB,KAAKnC,MAAMwD,QAEpB,yBAAKnD,UAAU,qBACZiQ,EACD,yBAAKjQ,UAAU,UACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,qBACb,yCADF,IACqB,gCAAMiT,IAE3B,yBAAKjT,UAAU,qBACb,oCADF,IACgB,gCAAM6iB,IAEtB,yBAAK7iB,UAAU,qBACb,sCADF,IACkB,gCAAM0iB,KAIzBC,KAOP,yBAAK3iB,UAAU,oBACb,oDAMJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,oBAAd,iBACCoD,Q,GAxGYX,aAmIRhC,gBAVS,SAACC,GAAD,MAAY,CAClCyC,MAAOzC,EAAM0C,KAAKD,MAClBtC,QAASH,EAAME,KAAKC,QACpBuL,OAAQ1L,EAAME,KAAKwL,OACnBoD,YAAa9O,EAAM0C,KAAKoM,YACxBW,gBAAiBzP,EAAMuQ,SAASd,gBAChCF,gBAAiBvP,EAAMuQ,SAAShB,gBAChCG,iBAAkB1P,EAAMuQ,SAASb,oBAGK,CACtCuS,YXzIyB,SAACD,EAAOvf,EAAOtC,EAASuL,GACjD,OAAO,SAACC,EAAUyB,GAChBzB,EARK,CACL7L,KlCT8B,uBkCiB9B,IAAIgQ,EAAQ,CACVpE,OAAQA,EACRjJ,MAAOA,EACP6f,KAAM,IAAIxC,KACVkC,MAAOA,GAGHzS,EAAkBnC,IAAWmD,SAAShB,gBACxCA,IACFO,EAAK,gBAAQA,EAAR,CAAeP,gBAAiBA,KAEvC1D,GACGmB,KAAK,qBAAuB7M,EAAS2P,GACrC/D,MAAK,SAACC,GACLL,EAAS,CACP7L,KlC/B0B,uBkCgC1B+P,QAAS7D,EAAIpB,KAAKqC,KAClB6C,MAAOA,OANb,OASS,WACLnE,EAAS/L,EvCtCW,sBuCuCpB+L,EAASsQ,WWiHfiG,UpDsOuB,SAACxW,GACxB,OAAO,SAACC,EAAUyB,GAEhB,GAAIA,IAAW1K,KAAKkJ,OAAQ,CAC1B,IAAIsW,EAAY,CACdxW,OAAQA,GAEVG,GACGkC,IACC,UACEX,IAAW1K,KAAKkJ,OAChB,cACAwB,IAAWlN,KAAKC,QAClB+hB,GAEDnW,MAAK,WACJJ,EAAS,CACP7L,KClYc,kBDwXpB,OAaS,WACL6L,EAAS/L,EE/YO,sBFmZjB,CAEHyK,GAAcyC,QAAQ,OADN,CAAErK,MAAO,GAAIpB,SAAU,IAEvCsK,EAAS,CACP7L,KC9YkB,kBmD4IxBoO,cACA9E,0BACAsE,uBALa3N,CAMZ+hB,IClJGS,I,mNACJC,oBAAsB,WACpB,EAAKvjB,MAAMwjB,gB,uDAIX,IAAIC,EAA6B,CAAC,qBAC9BC,EAAoB,CAAC,WAMzB,OALKvhB,KAAKnC,MAAMkR,cACdwS,EAAkBvjB,KAAK,mBACvBsjB,EAA2BtjB,KAAK,8BAIhC,yBACEM,QAAS0B,KAAKohB,oBACdljB,UAAWojB,EAA2BnjB,KAAK,MAE3C,yBAAKD,UAAWqjB,EAAkBpjB,KAAK,MACrC,yBAAKD,UAAU,uBACb,kBAAC,EAAD,CAAgBH,UAAQ,KAE1B,yBAAKG,UAAU,oBACb,kBAAC,EAAD,CAAgBH,UAAQ,EAACM,GAAG,SAA5B,QAGA,kBAAC,EAAD,CAAkBN,UAAQ,W,GA1BhB4C,cA4CPhC,gBALS,SAACC,GAAD,MAAY,CAClCmQ,YAAanQ,EAAMwQ,GAAGL,YACtBlQ,gBAAiBD,EAAME,KAAKC,WAGU,CAAEsiB,a5E5Cd,WAC1B,MAAO,CACL3iB,KCXyB,mB2EqDdC,CAA2CwiB,ICvB3CK,I,OAzBD,SAAC3jB,GACb,OACE,yBAAKK,UAAU,oBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAcuW,OAAK,EAACxM,MAAOpK,EAAMoK,SAEnC,yBAAK/J,UAAU,qBACb,kBAAC,GAAD,CACEwQ,OAAK,EACLzO,SAAUpC,EAAMoC,SAChBgI,MAAOpK,EAAMoK,aCNnBwZ,G,uKAEF,IAAI1T,EAAS,KACb,IACG/N,KAAKnC,MAAMkB,SACZiB,KAAKnC,MAAMuQ,eACXpO,KAAKnC,MAAM0Q,gBACkC,IAA7CxE,OAAOc,QAAQ7K,KAAKnC,MAAMkQ,QAAQjD,OAClC,CACA,IAAI4W,EAAgB,KAIlBA,EAHG1hB,KAAKnC,MAAMkB,QAELiB,KAAKnC,MAAMuQ,cACJ,kBAAC,cAAD,MACPpO,KAAKnC,MAAM0Q,eACJ,+DAEA,uDANA,2DASlBR,EACE,yBAAK7P,UAAU,uBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oBACb,uCAEF,yBAAKA,UAAU,oBAAoBwjB,UAKzC3T,EACE,kBAAC,IAAM9O,SAAP,KACG8K,OAAOc,QAAQ7K,KAAKnC,MAAMkQ,QACxB4T,MAAK,cAAyC,IAAD,oBAA7BC,GAA6B,+BAAXC,GAAW,WAG5C,QAFkB,IAAInD,KAAKkD,EAAMV,MAAMvC,UACrB,IAAID,KAAKmD,EAAMX,MAAMvC,cAGxC9c,KAAI,YAAuB,IAAD,oBAApB4M,EAAoB,KAAXC,EAAW,KACrBoT,EAAY,KAShB,OANEA,EADEpT,EAAMP,gBAEN,kBAAC,GAAD,CAAiBA,gBAAiBO,EAAMP,kBAG9B,8CAGZ,yBAAK5O,IAAKkP,EAASvQ,UAAU,uBAC3B,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,uBACd,0BAAMA,UAAU,eACd,oDACA,gC1CwDK,SAAC6jB,GAC9B,IAcMb,EAAO,IAAIxC,KAAKqD,GAItB,MAlBmB,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGuBb,EAAKc,YAGf,IAFHd,EAAKe,UAEU,KADdf,EAAKgB,c0C1EYC,CAAgBzT,EAAMwS,QAE7BY,GAGH,0BAAM5jB,UAAU,gBACd,0CACA,gCAAMwQ,EAAMkS,SAIf7W,OAAOc,QAAQ6D,EAAMrN,OAAOQ,KAAI,YAAqB,IAAD,oBAAlBqG,EAAkB,KAAVgC,EAAU,KACnD,OACE,kBAAC,GAAD,CACE3K,IAAK2I,EACLjI,SAAUiK,EAAKjK,SACfgI,MAAOiC,EAAKjC,iBAYlC,OAAO8F,M,GApFUpN,aAwGNhC,gBARS,SAACC,GAAD,MAAY,CAClCG,QAASH,EAAME,KAAKC,QACpBuL,OAAQ1L,EAAME,KAAKwL,OACnByD,OAAQnP,EAAMuQ,SAASpB,OACvBK,cAAexP,EAAMuQ,SAASf,cAC9BG,eAAgB3P,EAAMuQ,SAASZ,kBAGO,CAAEuM,cAA3Bnc,CAAwC8iB,IClDxCW,GA3DU,SAACC,EAAkBja,GAAW,IAC/Cka,EAD8C,4MAElD1jB,MAAQ,CACN+J,MAAO,MAHyC,EAqBlD4Z,kBAAoB,WAClB,EAAK/Q,SAAS,CAAE7I,MAAO,QAtByB,kEAM7B,IAAD,OAClBP,EAAMI,aAAaga,QAAQ9Z,KAAI,SAAC+Z,GAE9B,OADA,EAAKjR,SAAS,CAAE7I,MAAO,OAChB8Z,KAGTra,EAAMI,aAAaC,SAASC,KAC1B,SAACkC,GAAD,OAASA,KACT,SAACjC,GAEC,OADA,EAAK6I,SAAS,CAAE7I,MAAOA,IAChBC,QAAQC,OAAOF,QAhBsB,+BA0BhD,GtDxBiB,YsDyBf3I,KAAKnC,MAAMY,etDxBI,YsDyBfuB,KAAKnC,MAAMY,cAEX,OAAO,kBAAC4jB,EAAqBriB,KAAKnC,OAEpC,IAAIY,EAAgB,iBAGpB,OAFAA,EAAgBuB,KAAKnC,MAAMY,eAAiBA,EAG1C,kBAAC,IAAMQ,SAAP,KACE,kBAAC,GAAD,CACE0J,OAAK,EACL2N,KAAMtW,KAAKpB,MAAM+J,MACjBkO,YAAa7W,KAAKuiB,mBAEjBviB,KAAKpB,MAAM+J,MACR,aAAelK,EAAgB,KAAOuB,KAAKpB,MAAM+J,MAAM4K,QACvD,MAEN,kBAAC8O,EAAqBriB,KAAKnC,YA9CiB,GAC1B8C,aAuD1B,OAAOhC,aAJiB,SAACC,GAAD,MAAY,CAClCH,cAAeG,EAAMwQ,GAAG3Q,iBAGM,KAAzBE,CAA+B2jB,ICvC3BI,GAAb,kLAEI1iB,KAAKnC,MAAM8kB,YAFf,+BAMI,OACE,kBAAC,GAAD,CAAQxjB,YAAU,UAChB,kBAAC,GAAD,CAAcA,YAAU,iBACxB,kBAAC,GAAD,CAASA,YAAU,YACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyjB,OAAK,EAACC,KAAK,YAAYC,UAAWpC,KACzC,kBAAC,IAAD,CAAOmC,KAAK,uBAAuBC,UAAW5C,KAC9C,kBAAC,IAAD,CAAO2C,KAAK,UAAUC,UAAWhF,KACjC,kBAAC,IAAD,CAAO+E,KAAK,UAAUC,UAAW9D,KACjC,kBAAC,IAAD,CAAO6D,KAAK,aAAaC,UAAWrB,KACpC,kBAAC,IAAD,CAAOoB,KAAK,WAAWC,UAAW/D,KAClC,kBAAC,IAAD,CAAO8D,KAAK,QAAQC,UAAWC,KAC/B,kBAAC,IAAD,CAAOF,KAAK,IAAID,OAAK,EAACE,UAAWxP,KACjC,kBAAC,IAAD,CAAOuP,KAAK,SAASD,OAAK,EAACE,UAAWhP,KACtC,kBAAC,IAAD,CAAO+O,KAAK,WAAWD,OAAK,EAACE,UAAW9O,KACxC,kBAAC,IAAD,CAAO6O,KAAK,WAAWD,OAAK,EAACE,UAAW3O,WArBlD,GAAyBxT,aA4BVhC,eAAQ,KAAM,CAAEgkB,Qf8ER,WACrB,OAAO,SAACpY,GACN,IAAMuW,EAAY,CAAEzf,MAAO,GAAIpB,SAAU,GACrC+K,EAAY,KAChB,IACEA,EAAY/B,GAAcgC,QAAQ,QAClC,MAAOtC,GACPM,GAAcyC,QAAQ,OAAQoV,GAG3B9V,GACH/B,GAAcyC,QAAQ,OAAQoV,GAGhC,IAAM/hB,EAAUkK,GAAcgC,QAAQ,WAClC+X,EAAe,EAEnB,GAAIjkB,EAAS,CACX,IAAMmc,EAAiBjS,GAAcgC,QAAQ,kBAE7C,IADA+X,EAAe,IAAItE,KAAKxD,GAAgByD,WAAY,IAAID,MAAOC,WAC5C,EAAG,CACpB,IAAMrU,EAASrB,GAAcgC,QAAQ,UACrCV,EAASwQ,GAAYhc,EAASuL,IAC9BC,EAAS0Q,GAAiB+H,EAAe,MACzCzY,EAASF,GAAQtL,EAASuL,IAC1BC,EAASuQ,GAAU/b,EAASuL,WAItBvL,GAAWikB,GAAgB,IACnCzY,G1C5HG,SAACA,GACN,IAAIjJ,EAAO2H,GAAcgC,QAAQ,QAC7B3J,EAAKrB,SAAW,GAClBsK,EAASkC,GAAanL,UyDab3C,CACbyjB,GAAiBA,GAAiBM,GAAKjY,IAAgBrC,OCvC1CxH,gBATK,SAAC,GAA2B,IAAzBjB,EAAwB,EAAxBA,QAASvB,EAAe,EAAfA,SAM9B,OALA4X,qBAAU,WACRrW,EAAQsjB,QAAO,WACbzT,OAAO0T,SAAS,EAAG,QAEpB,CAACvjB,IACGvB,KCIT+kB,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAU9a,cACvB,kBAAC,IAAD,CAAUoH,MAAOA,IACf,kBAAC,GAAD,KACE,kBAAC,GAAD,SAIN6G,SAAS8M,eAAe,W","file":"static/js/main.feac2ba0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza_supreme.d32db457.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_GreenBellPepper_ML_reg.0e00f485.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_meat_lovers.6888d88d.png\";","module.exports = __webpack_public_path__ + \"static/media/alarm-clock.e343a2cb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_NoFinish.3abbb296.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_ht.ef946a28.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_NoFinish.3d23efc8.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_thin.6c415f1e.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_NoFinish.857451fd.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_pan.a639fd58.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_reg.bd65daa5.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_extra.1a5dda64.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pepperoni.c8384ebc.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_reg.67e2467d.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_extra.c854f9c4.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_ItalianSausage.30f1abc9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_reg.de53578e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_extra.5a14d4e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Ham.f9a4b089.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_reg.9ad0ed0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_extra.09ab3e70.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Bacon.01d8344a.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_reg.9f9c0251.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_extra.b8e5a0bf.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Chicken.5ad44911.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_reg.2aa6b6df.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_extra.ed2a2c61.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Beef.3b7c67c7.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_reg.6342108f.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_extra.029c5390.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pork.f6ce9e4e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_reg.ac08da62.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_extra.4d46fc4f.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Mushroom.13419b0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_reg.a1aa56b9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_extra.70bff6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Spinach_fresh.0f9a3e93.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_reg.56b4f355.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_extra.a0e7bd25.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Onion_Red.fc649c44.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_reg.2c37ed8c.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_extra.37addb7c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Olive_black.f36bd555.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_GreenBellPepper.52813aeb.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_reg.f86003d4.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_extra.f22472f1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_BananaPepper.f3bcdf43.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_reg.84001df3.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_extra.97e5f278.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pineapple.25272d60.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_reg.351d9ecd.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_extra.d8ec6a52.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Jalapeno.010847af.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_reg.6d5ebb38.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_extra.8efd4042.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Tomato.45793eeb.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Marinara.85fd0f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_CreamyGarlicParm.c6e0d76c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_BBQ.552f71e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Buffalo.75e74963.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_GarlicButteryBlend.3519578d.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_GarlicButteryBlend.cbd8d06b.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_GarlicButteryBlend.eed3a573.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_GarlicButteryBlend_whole_2017.cb6aaecb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_ToastedParmesan.2d159915.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_ToastedParmesan.936d9f40.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_ToastedParmesan.78b23d6e.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_ToastedParm_whole_2017.222e5fd7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_none_whole_2017.b6008bb6.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_pepperoni.50a5d0e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Pepperoni_Lovers.436141dc.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Veggie_Lovers.eb41eca4.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Ultimate_Cheese_Lovers.cf9afb2c.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Hawaiian_Chicken.8799700a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Chicken_Bacon_Parmesan.44137224.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Backyard_BBQ_Chicken.cdffd12a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Buffalo_Chicken.332af0a5.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese_mozz_ML.10abdd1f.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_cheese.f7ed334d.jpg\";","import React from 'react';\nimport './NavigationItem.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Standard navigation item that is part of either the header or sidebar menus */\nconst NavigationItem = (props) => {\n  let classNames = ['navigation-item__text'];\n  if (props.vertical) {\n    classNames.push('navigation-item__text--vertical');\n  }\n  let navigationItemContent = null;\n\n  navigationItemContent = (\n    <span className={classNames.join(' ')}>\n      <h3>{props.children}</h3>\n    </span>\n  );\n\n  let navigationItem = null;\n  if (props.to) {\n    navigationItem = (\n      <Link onClick={props.onClick} to={props.to} className='navigation-item'>\n        {navigationItemContent}\n      </Link>\n    );\n  } else {\n    navigationItem = (\n      <span onClick={props.onClick} className='navigation-item'>\n        {navigationItemContent}\n      </span>\n    );\n  }\n\n  return navigationItem;\n};\n\nNavigationItem.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  vertical: PropTypes.bool,\n};\n\nexport default NavigationItem;\n","import React from 'react';\nimport './PizzaMenuItems.scss';\nimport NavigationItem from '../../UI/NavigationItem/NavigationItem';\n\n/* Menu items that display links to different categories of pizza */\n\nconst PizzaMenuItems = (props) => {\n  return (\n    <div className='pizza-menu-items'>\n      <NavigationItem {...props} onClick={props.onClick} to='/meats'>\n        Meats\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/chicken'>\n        Chicken\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/veggies'>\n        Veggies\n      </NavigationItem>\n    </div>\n  );\n};\n\nexport default PizzaMenuItems;\n","import * as actionTypes from './uiActionTypes';\n\n/* open/close the sidebar menu */\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR,\n  };\n};\n\n/* close the sidebar menu */\nexport const closeSidebar = () => {\n  return {\n    type: actionTypes.CLOSE_SIDEBAR,\n  };\n};\n\n/* set error for withErrorHandler HOC to pickup */\nexport const setErroredAction = (erroredAction) => {\n  return {\n    type: actionTypes.SET_ERRORED_ACTION,\n    erroredAction: erroredAction,\n  };\n};\n","export const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n","import React from 'react';\nimport NavigationItem from '../../UI/NavigationItem/NavigationItem';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n/* Menu items that deal with account information, namely authentication and orders */\nconst AccountMenuItems = (props) => {\n  let accountMenuItems = (\n    <NavigationItem {...props} to='/signin'>\n      <span>Sign In</span>\n    </NavigationItem>\n  );\n  if (props.isAuthenticated) {\n    accountMenuItems = (\n      <React.Fragment>\n        <NavigationItem {...props} to='/my-orders'>\n          My Orders\n        </NavigationItem>\n        <NavigationItem {...props} to='/signout'>\n          Sign Out\n        </NavigationItem>\n      </React.Fragment>\n    );\n  }\n  return accountMenuItems;\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.idToken,\n});\n\nAccountMenuItems.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nexport default connect(mapStateToProps, null)(AccountMenuItems);\n","import React from 'react';\nimport './Button.scss';\nimport PropTypes from 'prop-types';\n\nexport const primary = 'button';\nexport const secondary = 'button button--secondary';\nexport const tertiary = 'button button--tertiary';\n\n/* Standard button across entire app */\nconst Button = (props) => {\n  return (\n    <button\n      data-test='button'\n      onClick={props.onClick}\n      disabled={props.disabled}\n      className={props.type}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  type: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n    .isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport './DropdownAlert.scss';\nimport PropTypes from 'prop-types';\n\n/* Dropdown alert disappears automatically in a few seconds */\nconst DropdownAlert = (props) => {\n  return (\n    <div\n      key={props.alertKey}\n      onClick={props.onClick}\n      className='dropdown-menu-alert'\n    >\n      <div className='dropdown-menu-alert__container'>{props.children}</div>\n    </div>\n  );\n};\n\nDropdownAlert.propTypes = {\n  alertKey: PropTypes.string.isRequired,\n  children: PropTypes.array,\n};\n\nexport default React.memo(DropdownAlert);\n","import React, { Component } from 'react';\nimport { MdShoppingCart } from 'react-icons/md';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport DropdownAlert from '../../components/UI/DropdownAlert/DropdownAlert';\nimport PropTypes from 'prop-types';\n\nclass CartIcon extends Component {\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.quantity !== nextProps.quantity) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    let numItemsInCart = null;\n    if (this.props.quantity > 0) {\n      numItemsInCart = (\n        <div\n          data-test='numItems'\n          key={`${this.props.quantity}-num-items`}\n          className='header__cart-items animate-num-items'\n        >\n          {this.props.quantity}\n        </div>\n      );\n    }\n    let itemAdded = null;\n    if (\n      this.props.numItemsAdded > 0 &&\n      this.props.location.pathname !== '/cart' &&\n      this.props.location.pathname !== '/checkout'\n    ) {\n      let numItems = null;\n      if (this.props.numItemsAdded === 1) {\n        numItems = <span>{this.props.numItemsAdded} new item</span>;\n      } else {\n        numItems = <span>{this.props.numItemsAdded} new items</span>;\n      }\n      itemAdded = (\n        <DropdownAlert\n          data-test='itemAdded'\n          onClick={this.handleClickItemAddedAlert}\n          alertKey={`${this.props.quantity}-add-items`}\n        >\n          <h3 className='header__alert-text'>{numItems} added to cart</h3>\n          <Link\n            onClick={this.handleClickCheckout}\n            className='header__checkout'\n            to={{\n              pathname: this.props.isAuthenticated\n                ? '/checkout/order-type'\n                : '/signin',\n              fromCheckout: true,\n            }}\n          >\n            <Button type={primary}>Checkout</Button>\n          </Link>\n        </DropdownAlert>\n      );\n    }\n\n    return (\n      <div style={{ height: '100%' }} data-test='cartIconContainer'>\n        <NavigationItem to='/cart' data-test='navigationItem'>\n          <div className='header__cart header__icon' data-test='cartIcon'>\n            <MdShoppingCart />\n            {numItemsInCart}\n          </div>\n        </NavigationItem>\n        {itemAdded}\n      </div>\n    );\n  }\n}\n\nCartIcon.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default withRouter(CartIcon);\n","import React, { Component } from 'react';\nimport './Header.scss';\nimport PizzaTimeLogo from '../../assets/images/alarm-clock.png';\nimport { MdMenu } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport PizzaMenuItems from '../../components/MenuItems/PizzaMenuItems/PizzaMenuItems';\nimport { toggleSidebar } from '../../store/ui/uiActions';\nimport AccountMenuItems from '../../components/MenuItems/AccountMenuItems/AccountMenuItems';\nimport CartIcon from '../../components/CartIcon/CartIcon';\nimport PropTypes from 'prop-types';\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClickCheckout = this.handleClickCheckout.bind(this);\n  }\n  shouldComponentUpdate(nextProps) {\n    if (this.props.quantity !== nextProps.quantity) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClickMenuIcon = () => {\n    this.props.toggleSidebar();\n  };\n\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  render() {\n    return (\n      <header className='header'>\n        <div className='header__main'>\n          <div onClick={this.handleClickMenuIcon} className='header__menu'>\n            <NavigationItem>\n              <div className='header__icon'>\n                <MdMenu />\n              </div>\n            </NavigationItem>\n          </div>\n          <Link to='/' className='header__logo-title'>\n            <img\n              alt='PizzaTime logo'\n              className='header__logo'\n              src={PizzaTimeLogo}\n            />\n            <div className='header__title'>\n              <span>PizzaTime</span>\n            </div>\n          </Link>\n          <div className='header__menu-items'>\n            <PizzaMenuItems />\n          </div>\n        </div>\n        <div className='header__account'>\n          <div className='header__account-actions'>\n            <AccountMenuItems />\n          </div>\n          <div style={{ position: 'relative' }}>\n            <CartIcon\n              numItemsAdded={this.props.numItemsAdded}\n              quantity={this.props.quantity}\n            />\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  quantity: state.cart.quantity,\n  numItemsAdded: state.cart.numItemsAdded,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { toggleSidebar })(withRouter(Header));\n","import React from 'react';\nimport './Footer.scss';\nimport { Link } from 'react-router-dom';\n\n/* Footer containing informational links */\nconst Footer = (props) => {\n  return (\n    <footer className='footer'>\n      <div className='footer__links'>\n        <Link to='#'>ABOUT</Link>\n        <Link to='#'>CONTACT US</Link>\n        <Link to='#'>CAREERS</Link>\n        <Link to='#'>PRIVACY POLICY</Link>\n        <Link to='#'>TERMS</Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../../../containers/Header/Header';\nimport Footer from '../Footer/Footer';\nimport './Layout.scss';\nimport PropTypes from 'prop-types';\n\n/* Overall app layout */\nconst Layout = (props) => {\n  return (\n    <div className='layout' data-test='layout'>\n      <Header data-test='header' />\n      <main className='main' data-test='main'>\n        {props.children}\n      </main>\n      <Footer data-test='footer' />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport './Dropdown.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard dropdown selectors across entire app */\nconst Dropdown = (props) => {\n  return (\n    <select\n      value={props.value ? props.value : 1}\n      onChange={props.onChange}\n      className='dropdown'\n    >\n      {props.options.map((option) => {\n        return <option key={option}>{option}</option>;\n      })}\n    </select>\n  );\n};\n\nDropdown.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  options: PropTypes.array.isRequired,\n};\n\nexport default Dropdown;\n","import HandTossedPreview from '../assets/images/crust_ht_NoFinish.png';\nimport HandTossedIcon from '../assets/images/icon_crust_ht.png';\nimport ThinNCrispyPreview from '../assets/images/crust_thin_NoFinish.png';\nimport ThinNCrispyIcon from '../assets/images/icon_crust_thin.png';\nimport OriginalPanPreview from '../assets/images/crust_pan_NoFinish.png';\nimport OriginalPanIcon from '../assets/images/icon_crust_pan.png';\n\n/* All metadata related to the display of crust options */\n\nexport const HAND_TOSSED = 'Hand Tossed';\nexport const THIN_N_CRISPY = \"Thin 'N Crispy\";\nexport const ORIGINAL_PAN = 'Original Pan';\n\nexport const crustTypes = [HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN];\n\nexport const crustMetadataMapping = {\n  [HAND_TOSSED]: {\n    preview: HandTossedPreview,\n    icon: HandTossedIcon,\n  },\n  [THIN_N_CRISPY]: {\n    preview: ThinNCrispyPreview,\n    icon: ThinNCrispyIcon,\n  },\n  [ORIGINAL_PAN]: {\n    preview: OriginalPanPreview,\n    icon: OriginalPanIcon,\n    additionalDisplay: '+$2.00',\n  },\n};\n","/* All metadata related to the display of size options */\n\nexport const LARGE = 'Large';\nexport const MEDIUM = 'Medium';\nexport const PERSONAL = 'Personal';\n\nexport const sizes = [LARGE, MEDIUM, PERSONAL];\n","import PepperoniPreview from '../assets/images/topping_Pepperoni_ML_reg.png';\nimport ExtraPepperoniPreview from '../assets/images/topping_Pepperoni_ML_extra.png';\nimport PepperoniIcon from '../assets/images/icon_topping_Pepperoni.png';\nimport ItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_reg.png';\nimport ExtraItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_extra.png';\nimport ItalianSausageIcon from '../assets/images/icon_topping_ItalianSausage.png';\nimport HamPreview from '../assets/images/topping_Ham_ML_reg.png';\nimport ExtraHamPreview from '../assets/images/topping_Ham_ML_extra.png';\nimport HamIcon from '../assets/images/icon_topping_Ham.png';\nimport BaconPreview from '../assets/images/topping_Bacon_ML_reg.png';\nimport ExtraBaconPreview from '../assets/images/topping_Bacon_ML_extra.png';\nimport BaconIcon from '../assets/images/icon_topping_Bacon.png';\nimport GrilledChickenPreview from '../assets/images/topping_Chicken_ML_reg.png';\nimport ExtraGrilledChickenPreview from '../assets/images/topping_Chicken_ML_extra.png';\nimport GrilledChickenIcon from '../assets/images/icon_topping_Chicken.png';\nimport BeefPreview from '../assets/images/topping_Beef_ML_reg.png';\nimport ExtraBeefPreview from '../assets/images/topping_Beef_ML_extra.png';\nimport BeefIcon from '../assets/images/icon_topping_Beef.png';\nimport PorkPreview from '../assets/images/topping_Pork_ML_reg.png';\nimport ExtraPorkPreview from '../assets/images/topping_Pork_ML_extra.png';\nimport PorkIcon from '../assets/images/icon_topping_Pork.png';\n\n/* All metadata related to the display of meat options */\n\nexport const PEPPERONI = 'Pepperoni';\nexport const ITALIAN_SAUSAGE = 'Italian Sausage';\nexport const HAM = 'Ham';\nexport const BACON = 'Bacon';\nexport const GRILLED_CHICKEN = 'Grilled Chicken';\nexport const BEEF = 'Beef';\nexport const PORK = 'Pork';\n\nexport const meatImageMapping = {\n  [PEPPERONI]: {\n    preview: PepperoniPreview,\n    previewExtra: ExtraPepperoniPreview,\n    icon: PepperoniIcon,\n  },\n  [ITALIAN_SAUSAGE]: {\n    preview: ItalianSausagePreview,\n    previewExtra: ExtraItalianSausagePreview,\n    icon: ItalianSausageIcon,\n  },\n  [HAM]: {\n    preview: HamPreview,\n    previewExtra: ExtraHamPreview,\n    icon: HamIcon,\n  },\n  [BACON]: {\n    preview: BaconPreview,\n    previewExtra: ExtraBaconPreview,\n    icon: BaconIcon,\n  },\n  [GRILLED_CHICKEN]: {\n    preview: GrilledChickenPreview,\n    previewExtra: ExtraGrilledChickenPreview,\n    icon: GrilledChickenIcon,\n  },\n  [BEEF]: {\n    preview: BeefPreview,\n    previewExtra: ExtraBeefPreview,\n    icon: BeefIcon,\n  },\n  [PORK]: {\n    preview: PorkPreview,\n    previewExtra: ExtraPorkPreview,\n    icon: PorkIcon,\n  },\n};\n","import MushroomsPreview from '../assets/images/topping_Mushroom_ML_reg.png';\nimport ExtraMushroomsPreview from '../assets/images/topping_Mushroom_ML_extra.png';\nimport MushroomsIcon from '../assets/images/icon_topping_Mushroom.png';\nimport RoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_reg.png';\nimport ExtraRoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_extra.png';\nimport RoastedSpinachIcon from '../assets/images/icon_topping_Spinach_fresh.png';\nimport RedOnionsPreview from '../assets/images/topping_Onion_red_ML_reg.png';\nimport ExtraRedOnionsPreview from '../assets/images/topping_Onion_red_ML_extra.png';\nimport RedOnionsIcon from '../assets/images/icon_topping_Onion_Red.png';\nimport OlivesPreview from '../assets/images/topping_Olives_black_ML_reg.png';\nimport ExtraOlivesPreview from '../assets/images/topping_Olives_black_ML_extra.png';\nimport OlivesIcon from '../assets/images/icon_topping_Olive_black.png';\nimport BellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport ExtraBellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport BellPeppersIcon from '../assets/images/icon_topping_GreenBellPepper.png';\nimport BananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_reg.png';\nimport ExtraBananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_extra.png';\nimport BananaPeppersIcon from '../assets/images/icon_topping_BananaPepper.png';\nimport PineapplePreview from '../assets/images/topping_Pineapple_ML_reg.png';\nimport ExtraPineapplePreview from '../assets/images/topping_Pineapple_ML_extra.png';\nimport PineappleIcon from '../assets/images/icon_topping_Pineapple.png';\nimport JalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_reg.png';\nimport ExtraJalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_extra.png';\nimport JalapenoPeppersIcon from '../assets/images/icon_topping_Jalapeno.png';\nimport RomaTomatoesPreview from '../assets/images/topping_Tomato_ML_reg.png';\nimport ExtraRomaTomatoesPreview from '../assets/images/topping_Tomato_ML_extra.png';\nimport RomaTomatoesIcon from '../assets/images/icon_topping_Tomato.png';\n\n/* All metadata related to the display of veggy options */\n\nexport const MUSHROOMS = 'Mushrooms';\nexport const ROASTED_SPINACH = 'Roasted Spinach';\nexport const RED_ONIONS = 'Red Onions';\nexport const OLIVES = 'Mediterranean Black Olives';\nexport const BELL_PEPPERS = 'Green Bell Peppers';\nexport const BANANA_PEPPERS = 'Banana Peppers';\nexport const PINEAPPLE = 'Pineapple';\nexport const JALAPENO_PEPPERS = 'Jalapeno Peppers';\nexport const ROMA_TOMATOES = 'Roma Tomatoes';\n\nexport const veggiesImageMapping = {\n  [MUSHROOMS]: {\n    preview: MushroomsPreview,\n    previewExtra: ExtraMushroomsPreview,\n    icon: MushroomsIcon,\n  },\n  [ROASTED_SPINACH]: {\n    preview: RoastedSpinachPreview,\n    previewExtra: ExtraRoastedSpinachPreview,\n    icon: RoastedSpinachIcon,\n  },\n  [RED_ONIONS]: {\n    preview: RedOnionsPreview,\n    previewExtra: ExtraRedOnionsPreview,\n    icon: RedOnionsIcon,\n  },\n  [OLIVES]: {\n    preview: OlivesPreview,\n    previewExtra: ExtraOlivesPreview,\n    icon: OlivesIcon,\n  },\n  [BELL_PEPPERS]: {\n    preview: BellPeppersPreview,\n    previewExtra: ExtraBellPeppersPreview,\n    icon: BellPeppersIcon,\n  },\n  [BANANA_PEPPERS]: {\n    preview: BananaPeppersPreview,\n    previewExtra: ExtraBananaPeppersPreview,\n    icon: BananaPeppersIcon,\n  },\n  [PINEAPPLE]: {\n    preview: PineapplePreview,\n    previewExtra: ExtraPineapplePreview,\n    icon: PineappleIcon,\n  },\n  [JALAPENO_PEPPERS]: {\n    preview: JalapenoPeppersPreview,\n    previewExtra: ExtraJalapenoPeppersPreview,\n    icon: JalapenoPeppersIcon,\n  },\n  [ROMA_TOMATOES]: {\n    preview: RomaTomatoesPreview,\n    previewExtra: ExtraRomaTomatoesPreview,\n    icon: RomaTomatoesIcon,\n  },\n};\n","/* Standard key names used to store data in app */\n\nexport const CRUST = 'crust';\nexport const SIZE = 'size';\nexport const SAUCE = 'sauce';\nexport const SAUCE_AMOUNT = 'sauceAmount';\nexport const CHEESE_AMOUNT = 'cheeseAmount';\nexport const CRUST_FLAVOR = 'crustFlavor';\nexport const MEATS = 'meats';\nexport const VEGGIES = 'veggies';\nexport const COMBO_NAME = 'comboName';\nexport const EXTRA_TOPPING = 'extra';\nexport const REGULAR_TOPPING = 'regular';\nexport const WHOLE = 'whole';\nexport const LEFT_HALF = 'leftHalf';\nexport const RIGHT_HALF = 'rightHalf';\n","/* All metadata related to the displaying of cheese options */\n\nexport const REGULAR_CHEESE = 'Regular';\nexport const EXTRA_CHEESE = 'Extra';\nexport const LIGHT_CHEESE = 'Light';\nexport const NO_CHEESE = 'None';\n\nexport const cheeseAmounts = [\n  EXTRA_CHEESE,\n  REGULAR_CHEESE,\n  LIGHT_CHEESE,\n  NO_CHEESE,\n];\n\nexport const cheeseAmountMetadataMapping = {\n  [EXTRA_CHEESE]: {\n    price: '+$1.00',\n  },\n};\n","import ClassicMarinaraIcon from '../assets/images/icon_sauce_Marinara.png';\nimport CreamyGarlicParmesanIcon from '../assets/images/icon_sauce_CreamyGarlicParm.png';\nimport BarbequeIcon from '../assets/images/icon_sauce_BBQ.png';\nimport BuffaloIcon from '../assets/images/icon_sauce_Buffalo.png';\n\n/* All metadata related to the display of sauce options */\n\nexport const CLASSIC_MARINARA = 'Classic Marinara';\nexport const CREAMY_GARLIC_PARMESAN = 'Creamy Garlic Parmesan';\nexport const BARBECUE = 'Barbeque';\nexport const BUFFALO = 'Buffalo';\n\nexport const sauceImageMapping = {\n  [CLASSIC_MARINARA]: {\n    icon: ClassicMarinaraIcon,\n  },\n  [CREAMY_GARLIC_PARMESAN]: {\n    icon: CreamyGarlicParmesanIcon,\n  },\n  [BARBECUE]: {\n    icon: BarbequeIcon,\n  },\n  [BUFFALO]: {\n    icon: BuffaloIcon,\n  },\n};\n\nexport const REGULAR_SAUCE = 'Regular';\nexport const EXTRA_SAUCE = 'Extra';\nexport const LIGHT_SAUCE = 'Light';\nexport const NO_SAUCE = 'None';\n\nexport const sauceAmounts = [EXTRA_SAUCE, REGULAR_SAUCE, LIGHT_SAUCE, NO_SAUCE];\n\nexport const sauceAmountMetadataMapping = {\n  [EXTRA_SAUCE]: {\n    additionalDisplay: '+$1.00',\n  },\n};\n","import HTGarlicButteryBlendPreview from '../assets/images/crust_ht_GarlicButteryBlend.png';\nimport ThinGarlicButteryBlendPreview from '../assets/images/crust_thin_GarlicButteryBlend.png';\nimport PanGarlicButteryBlendPreview from '../assets/images/crust_pan_GarlicButteryBlend.png';\nimport GarlicButteryBlendIcon from '../assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png';\nimport HTToastedParmesanPreview from '../assets/images/crust_ht_ToastedParmesan.png';\nimport ThinToastedParmesanPreview from '../assets/images/crust_thin_ToastedParmesan.png';\nimport PanToastedParmesanPreview from '../assets/images/crust_pan_ToastedParmesan.png';\nimport ToastedParmesanIcon from '../assets/images/icon_finisher_ToastedParm_whole_2017.png';\nimport NoCrustFlavorIcon from '../assets/images/icon_finisher_none_whole_2017.png';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\n\n/* All metadata related to the display of crust flavor options */\n\nexport const NO_CRUST_FLAVOR = 'No Crust Flavor';\nexport const GARLIC_BUTTERY_BLEND = 'Garlic Buttery Blend';\nexport const TOASTED_PARMESAN = 'Toasted Parmesan';\n\nexport const crust_flavors = [\n  NO_CRUST_FLAVOR,\n  GARLIC_BUTTERY_BLEND,\n  TOASTED_PARMESAN,\n];\n\nexport const crustFlavorImageMapping = {\n  [NO_CRUST_FLAVOR]: {\n    icon: NoCrustFlavorIcon,\n  },\n  [GARLIC_BUTTERY_BLEND]: {\n    [HAND_TOSSED]: {\n      preview: HTGarlicButteryBlendPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinGarlicButteryBlendPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanGarlicButteryBlendPreview,\n    },\n    icon: GarlicButteryBlendIcon,\n  },\n  [TOASTED_PARMESAN]: {\n    [HAND_TOSSED]: {\n      preview: HTToastedParmesanPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinToastedParmesanPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanToastedParmesanPreview,\n    },\n    icon: ToastedParmesanIcon,\n  },\n};\n","import {\n  HAM,\n  PORK,\n  BEEF,\n  ITALIAN_SAUSAGE,\n  BACON,\n  PEPPERONI,\n  GRILLED_CHICKEN,\n} from './meatMetadata';\nimport {\n  MUSHROOMS,\n  BELL_PEPPERS,\n  RED_ONIONS,\n  OLIVES,\n  ROMA_TOMATOES,\n  BANANA_PEPPERS,\n  PINEAPPLE,\n} from './veggiesMetadata';\nimport {\n  MEATS,\n  VEGGIES,\n  CHEESE_AMOUNT,\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  SAUCE,\n  CRUST_FLAVOR,\n} from './pizzaProperties';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { BUFFALO, BARBECUE } from './sauceMetadata';\nimport { TOASTED_PARMESAN } from './crustFlavorMetadata';\n\n/* Holds various combo related display metadata used in multiple components */\n\nexport const CHEESE = 'Cheese';\nexport const PEPPERONI_PIZZA = 'Pepperoni';\nexport const MEAT_LOVER = \"Meat Lover's\";\nexport const SUPREME = 'Supreme';\nexport const PEPPERONI_LOVER = \"Pepperoni Lover's\";\nexport const SUPER_SUPREME = 'Super Supreme';\nexport const VEGGIE_LOVER = \"Veggie Lover's\";\nexport const ULTIMATE_CHEESE_LOVER = \"Ultimate Cheese Lover's\";\nexport const BUFFALO_CHICKEN = 'Buffalo Chicken';\nexport const BBQ_CHICKEN = 'BBQ Chicken';\nexport const HAWAIIAN_CHICKEN = 'Hawaiian Chicken';\nexport const CHICKEN_BACON_PARMESAN = 'Chicken Bacon Parmesan';\n\nexport const REGULAR = 'Regular';\nexport const COMBO = 'Combo';\n\nexport const toppingMapping = {\n  [CHEESE]: {\n    [MEATS]: {},\n    [VEGGIES]: {},\n  },\n  [PEPPERONI_PIZZA]: {\n    [MEATS]: { [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [VEGGIES]: {},\n  },\n  [MEAT_LOVER]: {\n    [MEATS]: {\n      [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [HAM]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PORK]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BEEF]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [ITALIAN_SAUSAGE]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BACON]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {},\n  },\n  [PEPPERONI_LOVER]: {\n    [MEATS]: { [PEPPERONI]: { amount: EXTRA_TOPPING, portion: WHOLE } },\n    [VEGGIES]: {},\n  },\n  [SUPREME]: {\n    [MEATS]: {\n      [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PORK]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BEEF]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {\n      [MUSHROOMS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [SUPER_SUPREME]: {\n    [MEATS]: {\n      [PEPPERONI]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PORK]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BEEF]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [HAM]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [ITALIAN_SAUSAGE]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {\n      [MUSHROOMS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [OLIVES]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [VEGGIE_LOVER]: {\n    [MEATS]: {},\n    [VEGGIES]: {\n      [OLIVES]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [ROMA_TOMATOES]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [MUSHROOMS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [ULTIMATE_CHEESE_LOVER]: {\n    [CHEESE_AMOUNT]: EXTRA_CHEESE,\n    [MEATS]: {},\n    [VEGGIES]: {},\n  },\n  [BUFFALO_CHICKEN]: {\n    [MEATS]: { [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [VEGGIES]: {\n      [BANANA_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [SAUCE]: [BUFFALO],\n  },\n  [BBQ_CHICKEN]: {\n    [MEATS]: {\n      [BACON]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: { [RED_ONIONS]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [SAUCE]: BARBECUE,\n  },\n  [HAWAIIAN_CHICKEN]: {\n    [MEATS]: {\n      [HAM]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: {\n      [BELL_PEPPERS]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [PINEAPPLE]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n  },\n  [CHICKEN_BACON_PARMESAN]: {\n    [MEATS]: {\n      [BACON]: { amount: REGULAR_TOPPING, portion: WHOLE },\n      [GRILLED_CHICKEN]: { amount: REGULAR_TOPPING, portion: WHOLE },\n    },\n    [VEGGIES]: { [ROMA_TOMATOES]: { amount: REGULAR_TOPPING, portion: WHOLE } },\n    [CRUST_FLAVOR]: TOASTED_PARMESAN,\n  },\n};\n","import * as actionTypes from './pizzaBuilderActionTypes';\n\n/* Initialize pizza builder with properties of given pizza */\nexport const initializePizzaBuilder = (pizza, quantity, itemId) => {\n  return {\n    type: actionTypes.INIT_PIZZA_BUILDER,\n    pizza: pizza,\n    quantity: quantity,\n    itemId: itemId,\n  };\n};\n\nexport const closePizzaBuilder = () => {\n  return {\n    type: actionTypes.CLOSE_PIZZA_BUILDER,\n  };\n};\n\n/* Dynamically set a pizza property value */\nexport const setProperty = (property, value) => {\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: value,\n  };\n};\n\n/* Select/deselect a topping */\nexport const toggleTopping = (property, value) => {\n  return {\n    type: actionTypes.TOGGLE_TOPPING,\n    property: property,\n    value: value,\n  };\n};\n\n/* Set the topping amount, whether regular/extra */\nexport const setToppingAmount = (property, topping, value) => {\n  return {\n    type: actionTypes.SET_TOPPING_AMOUNT,\n    property: property,\n    topping: topping,\n    value: value,\n  };\n};\n\n/* Set the topping portion, whether left/right/whole */\nexport const setToppingPortion = (property, topping, value) => {\n  return {\n    type: actionTypes.SET_TOPPING_PORTION,\n    property: property,\n    topping: topping,\n    value: value,\n  };\n};\n","export const INIT_PIZZA_BUILDER = 'INIT_PIZZA_BUILDER';\nexport const CLOSE_PIZZA_BUILDER = 'CLOSE_PIZZA_BUILDER';\nexport const SET_PROPERTY = 'SET_PROPERTY';\nexport const TOGGLE_TOPPING = 'TOGGLE_TOPPING';\nexport const SET_TOPPING_AMOUNT = 'SET_TOPPING_AMOUNT';\nexport const SET_TOPPING_PORTION = 'SET_TOPPING_PORTION';\n","import axios from 'axios';\n\n/* Axios instance used to call firebase api */\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_FIREBASE_URL,\n});\n\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","import SecureStorage from 'secure-web-storage';\nconst CryptoJS = require('crypto-js');\n\nconst SECRET_KEY = process.env.REACT_APP_SECURE_WEB_STORAGE_SECRET_KEY;\n\n/* decrypt and encrypt data to/from local storage using the provided secret key */\nexport const secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n\n    data = data.toString();\n\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n\n    data = data.toString(CryptoJS.enc.Utf8);\n\n    return data;\n  },\n});\n","import * as actionTypes from './cartActionTypes';\nimport {\n  SAUCE,\n  SAUCE_AMOUNT,\n  CRUST_FLAVOR,\n  CHEESE_AMOUNT,\n} from '../../metadata/pizzaProperties';\nimport { CLASSIC_MARINARA, REGULAR_SAUCE } from '../../metadata/sauceMetadata';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport axiosFirebase from '../../shared/axiosFirebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { REGULAR_CHEESE } from '../../metadata/cheeseMetadata';\nimport hash from 'object-hash';\nimport { secureStorage } from '../../shared/secureStorage';\nimport * as actionDisplays from '../ui/actionDisplays';\nimport { setErroredAction } from '../ui/uiActions';\n\n/* Create cart in backend for a particular user */\nexport const createCart = (idToken, userId) => {\n  return (dispatch) => {\n    const cart = {\n      userId: userId,\n    };\n    axiosFirebase.post('/carts.json?auth=' + idToken, cart).then((res) => {\n      dispatch({\n        type: actionTypes.CREATE_CART,\n        cartId: res.data.name,\n        userId: userId,\n      });\n    });\n  };\n};\n\n/* Set cart in redux store from cart in local storage */\nexport const getCartFromLocalStorage = () => {\n  return (dispatch) => {\n    let cart = secureStorage.getItem('cart');\n    if (cart.quantity > 0) {\n      dispatch(setCartItems(cart));\n    }\n  };\n};\n\n/* Combine local storage cart with cart in backend */\nexport const combineCarts = (localCart, items, cartId, userId, idToken) => {\n  return (dispatch) => {\n    const remoteItemsQuantity = getTotalQuantity(items);\n    let itemHashMap = generateItemHashMap(items);\n    let localItems = {};\n    //Update quantities of matching item in backend cart and add new items\n    Object.entries(localCart.items).forEach(([itemId, item]) => {\n      const pizzaHash = hash(item.pizza);\n      const matchingItemId = itemHashMap[pizzaHash];\n      if (matchingItemId) {\n        const matchingItem = items[itemHashMap[pizzaHash]];\n        matchingItem.quantity =\n          parseInt(matchingItem.quantity) + parseInt(item.quantity);\n        localItems[matchingItemId] = matchingItem;\n      } else {\n        itemHashMap[pizzaHash] = itemId;\n        items[itemId] = item;\n        localItems[itemId] = item;\n      }\n    });\n    //patch REST API call to update backend with changes to items in cart\n    if (Object.keys(localItems)) {\n      axiosFirebase\n        .patch('/carts/' + cartId + '/items.json?auth=' + idToken, localItems)\n        .then(() => {\n          let emptyCart = { items: {}, quantity: 0 };\n          secureStorage.setItem('cart', emptyCart);\n          dispatch({\n            type: actionTypes.GET_CART_SUCCESS,\n            userId: userId,\n            cartId: cartId,\n            items: items,\n            quantity: parseInt(localCart.quantity) + remoteItemsQuantity,\n            itemHashMap: itemHashMap,\n          });\n        })\n        .catch(() => {\n          dispatch(getCartFailed());\n          dispatch(setErroredAction(actionDisplays.GET_CART));\n        });\n    } else {\n      dispatch({\n        type: actionTypes.GET_CART_SUCCESS,\n        userId: userId,\n        cartId: cartId,\n        items: items,\n        quantity: localCart.quantity + remoteItemsQuantity,\n        itemHashMap: itemHashMap,\n      });\n    }\n  };\n};\n\n/* Add up individual item quantities to get total quantity for cart */\nconst getTotalQuantity = (items) => {\n  let totalQuantity = 0;\n  Object.values(items).forEach((item) => {\n    totalQuantity += parseInt(item.quantity);\n  });\n\n  return totalQuantity;\n};\n\n/* To set loading in UI when getting cart */\nconst getCartStart = () => {\n  return {\n    type: actionTypes.GET_CART_START,\n  };\n};\n\n/* To stop loading cart when getting cart failed */\nconst getCartFailed = () => {\n  return {\n    type: actionTypes.GET_CART_FAILED,\n  };\n};\n\n/* Get cart from backend if user signed in or from local storage if not */\nexport const getCart = (idToken, userId) => {\n  return (dispatch) => {\n    dispatch(getCartStart());\n    let items = null;\n    let cartId = null;\n    let quantity;\n    axiosFirebase\n      .get(\n        '/carts.json?auth=' +\n          idToken +\n          '&orderBy=\"userId\"&equalTo=\"' +\n          userId +\n          '\"'\n      )\n      .then((res) => {\n        if (Object.entries(res.data).length > 0) {\n          items = Object.values(res.data)[0].items || {};\n          cartId = Object.keys(res.data)[0];\n          let localCart = secureStorage.getItem('cart');\n          //Combine local cart with backend cart if items in local cart\n          if (localCart.quantity > 0) {\n            dispatch(combineCarts(localCart, items, cartId, userId, idToken));\n          }\n          //Otherwise, just dispatch to reducer with results of get cart call\n          else {\n            const itemHashMap = generateItemHashMap(items);\n            quantity = getTotalQuantity(items);\n            dispatch({\n              type: actionTypes.GET_CART_SUCCESS,\n              userId: userId,\n              cartId: cartId,\n              items: items,\n              quantity: quantity,\n              itemHashMap: itemHashMap,\n            });\n          }\n        } else {\n          dispatch(createCart(idToken, userId));\n        }\n      })\n      .catch(() => {\n        dispatch(getCartFailed());\n        dispatch(setErroredAction(actionDisplays.GET_CART));\n      });\n  };\n};\n\n/* Generate pizza to item id hashmap to take care of duplicate pizzas */\nconst generateItemHashMap = (items) => {\n  let itemHashMap = {};\n  Object.entries(items).forEach(([itemId, item]) => {\n    itemHashMap[hash(item.pizza)] = itemId;\n  });\n\n  return itemHashMap;\n};\n\n/* Just clear cart items from redux store only. \n   Different from empty cart which empties cart in backend as well */\nexport const clearCart = () => {\n  return {\n    type: actionTypes.CLEAR_CART,\n  };\n};\n\n/* Add new item to cart, meaning it doesn't have a match in cart already */\nconst addNewItemToCart = (pizza, quantity) => {\n  return (dispatch, getState) => {\n    let item = { pizza: pizza, quantity: quantity };\n    //if user is signed in, then add to backend cart\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .post(\n          '/carts/' +\n            getState().cart.cartId +\n            '/items.json?auth=' +\n            getState().auth.idToken,\n          item\n        )\n        .then((res) => {\n          dispatch({\n            type: actionTypes.ADD_TO_CART,\n            itemId: res.data.name,\n            item: item,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionDisplays.ADD_ITEM_TO_CART));\n        });\n    } else {\n      //if user not signed in, add to local storage cart\n      let cart = secureStorage.getItem('cart');\n      const itemId = uuidv4();\n      cart.items[itemId] = item;\n      cart.quantity += parseInt(item.quantity);\n      secureStorage.setItem('cart', cart);\n      dispatch({\n        type: actionTypes.ADD_TO_CART,\n        itemId: itemId,\n        item: item,\n      });\n    }\n  };\n};\n\n/* Add to cart, either new item or increase quantity for already existing item */\nexport const addToCart = (pizza, quantity) => {\n  return (dispatch, getState) => {\n    if (!pizza[SAUCE]) {\n      pizza[SAUCE] = CLASSIC_MARINARA;\n    }\n    if (!pizza[SAUCE_AMOUNT]) {\n      pizza[SAUCE_AMOUNT] = REGULAR_SAUCE;\n    }\n    if (!pizza[CHEESE_AMOUNT]) {\n      pizza[CHEESE_AMOUNT] = REGULAR_CHEESE;\n    }\n    if (!pizza[CRUST_FLAVOR]) {\n      pizza[CRUST_FLAVOR] = NO_CRUST_FLAVOR;\n    }\n\n    //Need to delete empty objects because firebase disregards properties with empty objects\n    if (\n      Object.keys(pizza.meats).length === 0 &&\n      pizza.meats.constructor === Object\n    ) {\n      delete pizza.meats;\n    }\n    if (\n      Object.keys(pizza.veggies).length === 0 &&\n      pizza.veggies.constructor === Object\n    ) {\n      delete pizza.veggies;\n    }\n\n    const matchedItemIdInCart = getState().cart.itemHashMap[hash(pizza)];\n    if (matchedItemIdInCart) {\n      const newQuantity =\n        parseInt(getState().cart.items[matchedItemIdInCart].quantity) +\n        parseInt(quantity);\n      dispatch(changeItemQuantity(matchedItemIdInCart, newQuantity));\n    } else {\n      dispatch(addNewItemToCart(pizza, quantity));\n    }\n  };\n};\n\n/* set cart items and metadata in redux store */\nexport const setCartItems = (cart) => {\n  let itemHashMap = generateItemHashMap(cart.items);\n  return {\n    type: actionTypes.SET_CART_ITEMS,\n    items: cart.items,\n    quantity: cart.quantity,\n    itemHashMap: itemHashMap,\n  };\n};\n\n/* Set new item quantity and update total quantity */\nexport const changeItemQuantity = (itemId, quantity) => {\n  return (dispatch, getState) => {\n    const item = { ...getState().cart.items[itemId] };\n    dispatch(changeCartItemStart(item.pizza));\n    item.quantity = quantity;\n    //if user signed in, PUT call to change item quantity in backend cart\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .put(\n          '/carts/' +\n            getState().cart.cartId +\n            '/items/' +\n            itemId +\n            '.json?auth=' +\n            getState().auth.idToken,\n          item\n        )\n        .then(() => {\n          dispatch({\n            type: actionTypes.CHANGE_ITEM_QUANTITY,\n            itemId: itemId,\n            quantity: quantity,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionDisplays.CHANGE_ITEM_QUANTITY));\n          dispatch(changeCartItemFailed());\n        });\n    }\n    //if user not signed in, change item quantity in local storage cart\n    else {\n      let cart = secureStorage.getItem('cart');\n      cart.quantity -= cart.items[itemId].quantity;\n      cart.quantity += parseInt(quantity);\n      cart.items[itemId].quantity = quantity;\n      secureStorage.setItem('cart', cart);\n      dispatch({\n        type: actionTypes.CHANGE_ITEM_QUANTITY,\n        itemId: itemId,\n        quantity: quantity,\n      });\n    }\n  };\n};\n\n/* To set loading in UI when making change to a cart item */\nconst changeCartItemStart = (pizza) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_START,\n    itemBeingChanged: pizza,\n  };\n};\n\n/* To stop loading cart item in UI if changing cart item failed */\nconst changeCartItemFailed = () => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_FAILED,\n  };\n};\n\n/* remove item from cart in backend if user signed in or from cart in local storage if not */\nexport const removeItem = (itemId, pizza) => {\n  return (dispatch, getState) => {\n    dispatch(changeCartItemStart(pizza));\n    //if user signed in, DELETE call to remove item from backend cart\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .delete(\n          '/carts/' +\n            getState().cart.cartId +\n            '/items/' +\n            itemId +\n            '.json?auth=' +\n            getState().auth.idToken\n        )\n        .then(() => {\n          dispatch({\n            type: actionTypes.REMOVE_ITEM_SUCCESS,\n            itemId: itemId,\n            pizza: pizza,\n          });\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionDisplays.REMOVE_ITEM));\n        });\n    } else {\n      //if user not signed in, remove item from local storage cart\n      let cart = secureStorage.getItem('cart');\n      cart.quantity -= cart.items[itemId].quantity;\n      delete cart.items[itemId];\n      secureStorage.setItem('cart', cart);\n      dispatch({\n        type: actionTypes.REMOVE_ITEM_SUCCESS,\n        itemId: itemId,\n        pizza: pizza,\n      });\n    }\n  };\n};\n\nexport const emptyCart = (userId) => {\n  return (dispatch, getState) => {\n    //if user signed in, PUT call to empty backend cart\n    if (getState().cart.cartId) {\n      let emptyCart = {\n        userId: userId,\n      };\n      axiosFirebase\n        .put(\n          '/carts/' +\n            getState().cart.cartId +\n            '.json?auth=' +\n            getState().auth.idToken,\n          emptyCart\n        )\n        .then(() => {\n          dispatch({\n            type: actionTypes.EMPTY_CART,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionDisplays.EMPTY_CART));\n        });\n    }\n    //if user not signed in, empty local storage cart\n    else {\n      let emptyCart = { items: {}, quantity: 0 };\n      secureStorage.setItem('cart', emptyCart);\n      dispatch({\n        type: actionTypes.EMPTY_CART,\n      });\n    }\n  };\n};\n\n/* Save item to cart in backend if user signed in or in local storage if not */\nexport const saveToCart = (pizza, quantity, itemId) => {\n  return (dispatch, getState) => {\n    const item = { pizza: pizza, quantity: quantity };\n    dispatch(changeCartItemStart(getState().cart.items[itemId].pizza));\n    //if user signed in, PUT call to make change to backend cart\n    if (getState().cart.cartId) {\n      axiosFirebase\n        .put(\n          '/carts/' +\n            getState().cart.cartId +\n            '/items/' +\n            itemId +\n            '.json?auth=' +\n            getState().auth.idToken,\n          item\n        )\n        .then(() => {\n          dispatch({\n            type: actionTypes.SAVE_TO_CART,\n            itemId: itemId,\n            item: item,\n          });\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionDisplays.SAVE_TO_CART));\n        });\n    }\n    //if user not signed in, make change to local storage cart\n    else {\n      let cart = secureStorage.getItem('cart');\n      cart.quantity -= cart.items[itemId].quantity;\n      cart.items[itemId] = item;\n      cart.quantity += item.quantity;\n      secureStorage.setItem('cart', cart);\n      dispatch({\n        type: actionTypes.SAVE_TO_CART,\n        itemId: itemId,\n        item: item,\n      });\n    }\n  };\n};\n","export const CREATE_CART = 'CREATE_CART';\nexport const GET_CART_START = 'GET_CART_START';\nexport const GET_CART_SUCCESS = 'GET_CART_SUCCESS';\nexport const GET_CART_FAILED = 'GET_CART_FAILED';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const SET_CART_ITEMS = 'SET_CART_ITEMS';\nexport const CHANGE_ITEM_QUANTITY = 'CHANGE_ITEM_QUANTITY';\nexport const INCREASE_ITEM_QUANTITY = 'INCREASE_ITEM_QUANTITY';\nexport const CHANGE_CART_ITEM_START = 'CHANGE_CART_ITEM_START';\nexport const REMOVE_ITEM_SUCCESS = 'REMOVE_ITEM_SUCCESS';\nexport const CHANGE_CART_ITEM_FAILED = 'CHANGE_CART_ITEM_FAILED';\nexport const SAVE_TO_CART = 'SAVE_TO_CART';\nexport const EMPTY_CART = 'EMPTY_CART';\nexport const SET_ERRORED_ACTION = 'ERRORED_ACTION';\n","export const SUBMIT_ORDER = 'submit your order';\nexport const GET_ORDERS = 'retrieve your orders';\nexport const ADD_ITEM_TO_CART = 'add item(s) to cart';\nexport const GET_CART = 'retrieve cart';\nexport const EMPTY_CART = 'empty cart';\nexport const CHANGE_ITEM_QUANTITY = 'change item quantity';\nexport const REMOVE_ITEM = 'remove item';\nexport const SAVE_TO_CART = 'save item to cart';\nexport const SIGN_IN = 'sign in';\nexport const SIGN_UP = 'sign up';\nexport const VALIDATE_ADDRESS = 'validate address';\n","import { LARGE, MEDIUM, PERSONAL } from './sizeMetadata';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\nimport { REGULAR, COMBO } from './comboMetadata';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { EXTRA_SAUCE } from './sauceMetadata';\n\n/* Holds price mappings for various pizza properties */\nexport const crustPriceMapping = {\n  [LARGE]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [MEDIUM]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [PERSONAL]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n};\n\nexport const sizePriceMapping = {\n  [LARGE]: {\n    [REGULAR]: 13.99,\n    [COMBO]: 18.99,\n  },\n  [MEDIUM]: {\n    [REGULAR]: 11.99,\n    [COMBO]: 15.99,\n  },\n  [PERSONAL]: {\n    [REGULAR]: 9.99,\n    [COMBO]: 11.99,\n  },\n};\n\nexport const propertyPriceMapping = {\n  [EXTRA_SAUCE]: 1.0,\n  [EXTRA_CHEESE]: 1.0,\n};\n\nexport const toppingPrice = 1.5;\nexport const extraToppingPrice = 2.5;\n","import * as actionTypes from './pizzaBuilderActionTypes';\nimport { CLASSIC_MARINARA, REGULAR_SAUCE } from '../../metadata/sauceMetadata';\nimport { HAND_TOSSED } from '../../metadata/crustMetadata';\nimport { LARGE } from '../../metadata/sizeMetadata';\nimport { REGULAR_CHEESE } from '../../metadata/cheeseMetadata';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  SIZE,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n  WHOLE,\n  REGULAR_TOPPING,\n} from '../../metadata/pizzaProperties';\nimport { REGULAR } from '../../metadata/comboMetadata';\n\nexport const initialState = {\n  showPizzaBuilder: false,\n  itemId: null,\n  pizza: {\n    [CHEESE_AMOUNT]: REGULAR_CHEESE,\n    [COMBO_NAME]: null,\n    [CRUST]: HAND_TOSSED,\n    [CRUST_FLAVOR]: NO_CRUST_FLAVOR,\n    [MEATS]: {},\n    [VEGGIES]: {},\n    [SAUCE]: CLASSIC_MARINARA,\n    [SAUCE_AMOUNT]: REGULAR_SAUCE,\n    [SIZE]: LARGE,\n    priceType: REGULAR,\n  },\n};\n\nconst pizzaBuilderReducer = (state = initialState, action) => {\n  let toppings = null;\n  let topping = null;\n  switch (action.type) {\n    //initialize and display pizza builder with given pizza and quantity\n    case actionTypes.INIT_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: true,\n        itemId: action.itemId,\n        pizza: {\n          [CHEESE_AMOUNT]: action.pizza[CHEESE_AMOUNT]\n            ? action.pizza[CHEESE_AMOUNT]\n            : REGULAR_CHEESE,\n          [COMBO_NAME]: action.pizza[COMBO_NAME]\n            ? action.pizza[COMBO_NAME]\n            : null,\n          [CRUST]: action.pizza[CRUST],\n          [CRUST_FLAVOR]: action.pizza[CRUST_FLAVOR]\n            ? action.pizza[CRUST_FLAVOR]\n            : NO_CRUST_FLAVOR,\n          [MEATS]: action.pizza[MEATS],\n          [VEGGIES]: action.pizza[VEGGIES],\n          [SAUCE]: action.pizza[SAUCE] ? action.pizza[SAUCE] : CLASSIC_MARINARA,\n          [SAUCE_AMOUNT]: action.pizza[SAUCE_AMOUNT]\n            ? action.pizza[SAUCE_AMOUNT]\n            : REGULAR_SAUCE,\n          [SIZE]: action.pizza[SIZE],\n\n          price: action.pizza.price,\n          priceType: action.pizza.priceType,\n        },\n        quantity: action.quantity,\n      };\n    //close the pizza builder\n    case actionTypes.CLOSE_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: false,\n      };\n    //dynamically set a pizza property\n    case actionTypes.SET_PROPERTY:\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: action.value,\n        },\n      };\n    //add or remove topping on pizza\n    case actionTypes.TOGGLE_TOPPING:\n      toppings = state.pizza[action.property]\n        ? { ...state.pizza[action.property] }\n        : {};\n      if (toppings[action.value]) {\n        delete toppings[action.value];\n      } else {\n        toppings[action.value] = { amount: REGULAR_TOPPING, portion: WHOLE };\n      }\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: toppings,\n        },\n      };\n    //set the amount of a topping (WHOLE, LEFT_HALF, or RIGHT_HALF)\n    case actionTypes.SET_TOPPING_AMOUNT:\n      toppings = state.pizza[action.property]\n        ? { ...state.pizza[action.property] }\n        : {};\n\n      topping = toppings[action.topping];\n      if (!topping) {\n        topping = { amount: action.value, portion: WHOLE };\n      } else {\n        topping.amount = action.value;\n      }\n      toppings[action.topping] = topping;\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: toppings,\n        },\n      };\n    //set portion of a topping (EXTRA, REGULAR)\n    case actionTypes.SET_TOPPING_PORTION:\n      toppings = state.pizza[action.property]\n        ? { ...state.pizza[action.property] }\n        : {};\n\n      topping = toppings[action.topping];\n      topping.portion = action.value;\n      toppings[action.topping] = topping;\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: toppings,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pizzaBuilderReducer;\n","import * as actionTypes from './cartActionTypes';\nimport hash from 'object-hash';\n\nconst initialState = {\n  cartId: null,\n  userId: null,\n  items: {},\n  quantity: 0,\n  itemHashMap: {},\n  numItemsAdded: 0,\n  loadingCart: false,\n  loadingCartItem: false,\n  itemBeingChanged: null,\n  erroredAction: null,\n};\n\nconst cartReducer = (state = initialState, action) => {\n  let items = null;\n  let itemHashMap = null;\n  let quantity;\n  let numItemsAdded = 0;\n  switch (action.type) {\n    //set cart id and user id once cart has been created\n    case actionTypes.CREATE_CART:\n      return {\n        ...state,\n        cartId: action.cartId,\n        userId: action.userId,\n      };\n    //add item to cart, update pizza to item id hashmap and quantity\n    case actionTypes.ADD_TO_CART:\n      items = { ...state.items, [action.itemId]: action.item };\n      quantity = state.quantity + +action.item.quantity;\n      itemHashMap = {\n        ...state.itemHashMap,\n        [hash(action.item.pizza)]: action.itemId,\n      };\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        itemHashMap: itemHashMap,\n        numItemsAdded: action.item.quantity,\n      };\n    //set loading before getting cart\n    case actionTypes.GET_CART_START:\n      return {\n        ...state,\n        loadingCart: true,\n        errorCart: null,\n      };\n    //finish loading when getting cart failed\n    case actionTypes.GET_CART_FAILED:\n      return {\n        ...state,\n        loadingCart: false,\n      };\n    //successfully got cart for user, set cart metadata\n    case actionTypes.GET_CART_SUCCESS:\n      return {\n        ...state,\n        cartId: action.cartId,\n        userId: action.userId,\n        items: action.items,\n        quantity: action.quantity,\n        itemHashMap: action.itemHashMap,\n        loadingCart: false,\n      };\n    //clear cart after logging out\n    case actionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartId: null,\n        userId: null,\n        items: {},\n        quantity: 0,\n        itemHashMap: {},\n        numItemsAdded: 0,\n      };\n    //set cart items\n    case actionTypes.SET_CART_ITEMS:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        itemHashMap: action.itemHashMap,\n      };\n    //change item quantity\n    case actionTypes.CHANGE_ITEM_QUANTITY:\n      items = { ...state.items };\n      quantity = state.quantity - items[action.itemId].quantity;\n      items[action.itemId].quantity = action.quantity;\n      quantity += parseInt(action.quantity);\n      if (state.quantity < quantity) {\n        numItemsAdded = quantity - state.quantity;\n      }\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        numItemsAdded: numItemsAdded,\n        loadingCartItem: false,\n      };\n    //set loading before changing cart item\n    case actionTypes.CHANGE_CART_ITEM_START:\n      return {\n        ...state,\n        loadingCartItem: true,\n        itemBeingChanged: action.itemBeingChanged,\n      };\n    //failed to change cart item, done loading\n    case actionTypes.CHANGE_CART_ITEM_FAILED:\n      return {\n        ...state,\n        loadingCartItem: false,\n        itemBeingChanged: null,\n      };\n    //update cart metadata with removed item\n    case actionTypes.REMOVE_ITEM_SUCCESS:\n      items = { ...state.items };\n      itemHashMap = { ...state.itemHashMap };\n      quantity = state.quantity - items[action.itemId].quantity;\n      delete items[action.itemId];\n      delete itemHashMap[hash(action.pizza)];\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        itemHashMap: itemHashMap,\n        numItemsAdded: 0,\n        loadingCartItem: false,\n        itemBeingChanged: null,\n      };\n    //save item to list of items and update quantity\n    case actionTypes.SAVE_TO_CART:\n      items = { ...state.items };\n      quantity = state.quantity - items[action.itemId].quantity;\n      items[action.itemId] = action.item;\n      quantity += +action.item.quantity;\n      return {\n        ...state,\n        items: items,\n        quantity: quantity,\n        numItemsAdded: 0,\n        loadingCartItem: false,\n      };\n    //empty cart and all metadata\n    case actionTypes.EMPTY_CART:\n      return {\n        ...state,\n        items: {},\n        quantity: 0,\n        numItemsAdded: 0,\n        itemHashMap: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import * as actionTypes from './checkoutActionTypes';\n\nexport const initialState = {\n  userInfo: null,\n  orders: {},\n  validatingAddress: false,\n  addressValid: false,\n  addressValidationError: null,\n  deliveryAddress: null,\n  gettingOrders: false,\n  submittingOrder: false,\n  submitOrderError: false,\n  getOrdersError: false,\n};\n\nconst checkoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //set loading for submit order\n    case actionTypes.SUBMIT_ORDER_START:\n      return {\n        ...state,\n        submittingOrder: true,\n        submitOrderError: false,\n      };\n    //add submitted order to list of orders\n    case actionTypes.SUBMIT_ORDER_SUCCESS:\n      const orders = { ...state.orders, [action.orderId]: action.order };\n      return {\n        ...state,\n        orders: orders,\n        submittingOrder: false,\n      };\n    //finish loading when submit order failed\n    case actionTypes.SUBMIT_ORDER_FAILED:\n      return {\n        ...state,\n        submittingOrder: false,\n        submitOrderError: true,\n      };\n    //set loading before getting orders\n    case actionTypes.GET_ORDERS_START:\n      return {\n        ...state,\n        gettingOrders: true,\n        getOrdersError: false,\n      };\n    //successfully got orders, set orders\n    case actionTypes.GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        gettingOrders: false,\n        orders: action.orders,\n      };\n    //finish loading when getting orders failed\n    case actionTypes.GET_ORDERS_FAILED:\n      return {\n        ...state,\n        gettingOrders: false,\n        getOrdersError: true,\n      };\n    //successfully validated address, stop loading and set address\n    case actionTypes.VALIDATE_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        addressValid: true,\n        addressValidationError: null,\n        validatingAddress: false,\n        deliveryAddress: action.deliveryAddress,\n      };\n    //finish loading when validating adddress failed\n    case actionTypes.VALIDATE_ADDRESS_FAILED:\n      return {\n        ...state,\n        addressValid: false,\n        addressValidationError: action.error,\n        validatingAddress: false,\n      };\n    //set loading\n    case actionTypes.VALIDATE_ADDRESS_START:\n      return {\n        ...state,\n        validatingAddress: true,\n        addressValidationError: null,\n      };\n    //reset all address validation properties\n    case actionTypes.VALIDATE_ADDRESS_RESET:\n      return {\n        ...state,\n        validatingAddress: false,\n        addressValid: false,\n        addressValidationError: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default checkoutReducer;\n","export const SUBMIT_ORDER_START = 'SUBMIT_ORDER_START';\nexport const SUBMIT_ORDER_SUCCESS = 'SUBMIT_ORDER_SUCCESS';\nexport const SUBMIT_ORDER_FAILED = 'SUBMIT_ORDER_FAILED';\nexport const GET_ORDERS = 'GET_ORDERS';\nexport const GET_ORDERS_START = 'GET_ORDERS_START';\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS';\nexport const GET_ORDERS_FAILED = 'GET_ORDERS_FAILED';\nexport const VALIDATE_ADDRESS_START = 'VALIDATE_ADDRESS_START';\nexport const VALIDATE_ADDRESS_SUCCESS = 'VALIDATE_ADDRESS_SUCCESS';\nexport const VALIDATE_ADDRESS_FAILED = 'VALIDATE_ADDRESS_FAILED';\nexport const VALIDATE_ADDRESS_RESET = 'VALIDATE_ADDRESS_RESET';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n","import * as actionTypes from './authActionTypes';\n\nconst initialState = {\n  idToken: null,\n  userId: null,\n  signInError: null,\n  signUpError: null,\n  loading: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //set loading to true and reset error\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        signInError: null,\n        signUpError: null,\n        loading: true,\n      };\n    //successfully authenticated\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        idToken: action.idToken,\n        userId: action.userId,\n        signInError: null,\n      };\n    //set error and reset loading when sign in failed\n    case actionTypes.SIGN_IN_FAILED:\n      return {\n        ...state,\n        loading: false,\n        signInError: action.error,\n      };\n    //set error and reset loading when sign up failed\n    case actionTypes.SIGN_UP_FAILED:\n      return {\n        ...state,\n        loading: false,\n        signUpError: action.error,\n      };\n    //reset user data on signout\n    case actionTypes.AUTH_SIGNOUT:\n      return {\n        ...state,\n        idToken: null,\n        userId: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const SIGN_IN_FAILED = 'SIGN_IN_FAILED';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const AUTH_SIGNOUT = 'AUTH_SIGNOUT';\nexport const AUTH_RESET = 'AUTH_RESET';\n","import * as actionTypes from './uiActionTypes';\n\nexport const initialState = {\n  sidebarOpen: false,\n  erroredAction: null,\n};\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // open/close sidebar\n    case actionTypes.TOGGLE_SIDEBAR:\n      let sidebarOpen = state.sidebarOpen;\n      return {\n        ...state,\n        sidebarOpen: !sidebarOpen,\n      };\n    //close sidebar\n    case actionTypes.CLOSE_SIDEBAR:\n      return {\n        ...state,\n        sidebarOpen: false,\n      };\n    //set action that produced the error\n    case actionTypes.SET_ERRORED_ACTION:\n      return {\n        ...state,\n        erroredAction: action.erroredAction,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default uiReducer;\n","import { combineReducers } from 'redux';\nimport pizzaBuilderReducer from './pizzaBuilder/pizzaBuilderReducer';\nimport cartReducer from './cart/cartReducer';\nimport checkoutReducer from './checkout/checkoutReducer';\nimport authReducer from './auth/authReducer';\nimport uiReducer from './ui/uiReducer';\n\nexport default combineReducers({\n  pizzaBuilder: pizzaBuilderReducer,\n  cart: cartReducer,\n  checkout: checkoutReducer,\n  auth: authReducer,\n  ui: uiReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nexport const middleware = [thunk];\n\nconst initialState = {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  SIZE,\n  CRUST,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n  CHEESE_AMOUNT,\n  SAUCE_AMOUNT,\n  EXTRA_TOPPING,\n} from '../metadata/pizzaProperties';\nimport { COMBO, toppingMapping } from '../metadata/comboMetadata';\nimport {\n  sizePriceMapping,\n  crustPriceMapping,\n  toppingPrice,\n  extraToppingPrice,\n  propertyPriceMapping,\n} from '../metadata/priceMappings';\nimport checkPropTypes from 'check-prop-types';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from '../store/rootReducer';\nimport { middleware } from '../store/store';\n\n/* Utility functions used across multiple components/containers */\n\n/* Get display message for error code related to authentication */\nexport const lookupErrorCode = (errorCode) => {\n  if (errorCode === 'INVALID_PASSWORD' || errorCode === 'EMAIL_NOT_FOUND') {\n    return 'The username or password you entered is incorrect.';\n  } else if (errorCode.includes('TOO_MANY_ATTEMPTS_TRY_LATER')) {\n    return \"You've made too many unsuccessful attempts. Please try again later.\";\n  } else if (errorCode === 'EMAIL_EXISTS') {\n    return 'The email you entered is already taken. Please try another one.';\n  } else {\n    return 'There was an error submitting your credentials.';\n  }\n};\n\n/* calculate price of a pizza, given its size, crust, toppings and various other properties */\nexport const calculatePrice = (pizza) => {\n  const basePrice =\n    sizePriceMapping[pizza[SIZE]][pizza.priceType] +\n    crustPriceMapping[pizza[SIZE]][pizza[CRUST]];\n\n  let propertyPrices = propertyPriceMapping[pizza[SAUCE_AMOUNT]] || 0;\n  propertyPrices += propertyPriceMapping[pizza[CHEESE_AMOUNT]] || 0;\n\n  let meatsPrice = 0;\n  let veggiesPrice = 0;\n\n  if (pizza.priceType !== COMBO) {\n    meatsPrice += getToppingsPrice(pizza, MEATS, false);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, false);\n  } else {\n    meatsPrice += getToppingsPrice(pizza, MEATS, true);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, true);\n  }\n\n  return (basePrice + meatsPrice + veggiesPrice + propertyPrices).toFixed(2);\n};\n\n/* Get price of only the toppings */\nconst getToppingsPrice = (pizza, toppingType, combo) => {\n  let toppings = pizza[toppingType];\n  let toppingsPrice = 0;\n  toppings &&\n    Object.entries(toppings).forEach(([topping, toppingProps]) => {\n      const comboIncludesTopping =\n        combo &&\n        Object.keys(toppingMapping[pizza[COMBO_NAME]][toppingType]).includes(\n          topping\n        );\n      if (!comboIncludesTopping || !combo) {\n        if (toppingProps.amount === EXTRA_TOPPING) {\n          toppingsPrice += extraToppingPrice;\n        } else {\n          toppingsPrice += toppingPrice;\n        }\n      } else if (\n        comboIncludesTopping &&\n        toppingProps.amount === EXTRA_TOPPING\n      ) {\n        toppingsPrice += extraToppingPrice - toppingPrice;\n      }\n    });\n\n  return toppingsPrice;\n};\n\n/* Open the pizza builder for editing a pizza */\nexport const handleEditItem = (props, pizza, quantity, itemId) => {\n  props.initializePizzaBuilder(pizza, quantity, itemId);\n};\n\n/* Change the quantity of an item in redux store */\nexport const handleChangeItemQuantity = (props, itemId, quantity) => {\n  props.changeItemQuantity(itemId, quantity);\n};\n\n/* Remove item from cart */\nexport const handleRemoveItem = (props, itemId, pizza) => {\n  props.removeItem(itemId, pizza);\n};\n\n/* Calculate the sum of the price of all pizzas in cart before tax */\nexport const calculateSubTotal = (items) => {\n  let subTotal = 0;\n  Object.values(items).forEach((item) => {\n    let price = item.pizza.price;\n    if (!price) {\n      price = calculatePrice(item.pizza);\n    }\n    subTotal += price * item.quantity;\n  });\n  return subTotal.toFixed(2);\n};\n\n/* Calculate the tax */\nexport const calculateTax = (subTotal) => {\n  return (subTotal * 0.1).toFixed(2);\n};\n\n/* Get display date */\nexport const getReadableDate = (givenDate) => {\n  const monthArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const date = new Date(givenDate);\n  const month = monthArray[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return month + ' ' + day + ', ' + year;\n};\n\n/* Get display address */\nexport const getReadableAddress = (givenAddress) => {\n  let address = '';\n  address += givenAddress.street;\n  if (givenAddress.secondary) address += ', ' + givenAddress.secondary;\n  address += '\\n';\n  address += givenAddress.city;\n  address += ', ' + givenAddress.state;\n  address += ' ' + givenAddress.zipcode;\n  return address;\n};\n\nexport const findByTestAttr = (component, attr) => {\n  const wrapper = component.find(`[data-test=\"${attr}\"]`);\n  return wrapper;\n};\n\nexport const checkProps = (component, expectedProps) => {\n  const propsErr = checkPropTypes(\n    component.propTypes,\n    expectedProps,\n    'props',\n    component.name\n  );\n  return propsErr;\n};\n\nexport const testStore = (initialState) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n  );\n  return store;\n};\n","import React, { Component } from 'react';\nimport './PizzaBox.scss';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport Button from '../../components/UI/Button/Button';\nimport {\n  HAND_TOSSED,\n  crustMetadataMapping,\n} from '../../metadata/crustMetadata';\nimport { LARGE, sizes } from '../../metadata/sizeMetadata';\nimport { toppingMapping } from '../../metadata/comboMetadata';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../../store/pizzaBuilder/pizzaBuilderActions';\nimport { addToCart } from '../../store/cart/cartActions';\nimport { SIZE, CRUST, COMBO_NAME } from '../../metadata/pizzaProperties';\nimport { primary, secondary } from '../../components/UI/Button/Button';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* UI box container that holds an pizza and lets user customize various pizza properties.\n   Can add pizza to order and also build your own pizza from here. */\nclass PizzaBox extends Component {\n  constructor(props) {\n    super(props);\n    const initialState = this.getInitialState();\n    this.state = {\n      width: window.innerWidth,\n      ...initialState,\n    };\n  }\n\n  getInitialState = () => {\n    let initialState = {\n      pizza: {\n        priceType: this.props.priceType,\n        [COMBO_NAME]: this.props.pizzaType,\n        [CRUST]: HAND_TOSSED,\n        [SIZE]: LARGE,\n      },\n      quantity: 1,\n    };\n\n    if (toppingMapping[this.props.pizzaType]) {\n      initialState = {\n        ...initialState,\n        pizza: {\n          ...initialState.pizza,\n          ...toppingMapping[this.props.pizzaType],\n        },\n      };\n    }\n\n    return initialState;\n  };\n\n  resetState = () => {\n    this.setState(this.getInitialState());\n  };\n\n  handleChangeQuantity = (event) => {\n    event.persist();\n    this.setState({\n      quantity: event.target.value,\n    });\n  };\n\n  /* get only crust value from crust display value which includes price */\n  getCrust = (crustDisplayValue) => {\n    const regexp = /(.*) (\\+\\$.*)/g;\n    const match = regexp.exec(crustDisplayValue);\n    return match ? match[1] : crustDisplayValue;\n  };\n\n  handleChangeCrust = (event) => {\n    event.persist();\n\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [CRUST]: event.target.value,\n      },\n    });\n  };\n\n  handleChangeSize = (event) => {\n    event.persist();\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [SIZE]: event.target.value,\n      },\n    });\n  };\n\n  handleClickBuild = () => {\n    let pizza = { ...this.state.pizza };\n    pizza.crust = this.getCrust(pizza.crust);\n    this.props.initializePizzaBuilder(pizza, this.state.quantity);\n    this.resetState();\n  };\n\n  handleAddToCart = () => {\n    let pizza = { ...this.state.pizza };\n    pizza.crust = this.getCrust(pizza.crust);\n    this.props.addToCart(pizza, this.state.quantity);\n    this.resetState();\n  };\n\n  render() {\n    const crustOptions = Object.entries(crustMetadataMapping).map(\n      ([crust, crustMetadata]) => {\n        return (\n          crust +\n          (crustMetadata.additionalDisplay\n            ? ' ' + crustMetadata.additionalDisplay\n            : '')\n        );\n      }\n    );\n\n    const sizeOptions = sizes;\n    const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n    let pizza = { ...this.state.pizza };\n    pizza.crust = this.getCrust(pizza.crust);\n    const price = calculatePrice(pizza);\n\n    let pizzaAdd = null;\n    let pizzaName = null;\n    let customize = null;\n    let customizeSecondary = null;\n\n    if (this.props.buildPizza) {\n      pizzaAdd = (\n        <Button type={primary} onClick={() => this.handleClickBuild(price)}>\n          Get Started\n        </Button>\n      );\n      pizzaName = 'Build Your Own';\n      customize = <div className='empty-button'></div>;\n    } else {\n      pizzaAdd = (\n        <React.Fragment>\n          <div className='pizza-box__quantity'>\n            <Dropdown\n              onChange={this.handleChangeQuantity}\n              options={quantityOptions}\n              value={this.state.quantity}\n            />\n          </div>\n          <Button type={primary} onClick={() => this.handleAddToCart()}>\n            Add to Order\n          </Button>\n        </React.Fragment>\n      );\n      pizzaName = this.props.pizzaType;\n      customize = (\n        <Button type={secondary} onClick={() => this.handleClickBuild()}>\n          Customize\n        </Button>\n      );\n      customizeSecondary = (\n        <span\n          className='pizza-box__customize link'\n          onClick={() => this.handleClickBuild(price)}\n        >\n          Customize\n        </span>\n      );\n    }\n\n    return (\n      <div className='pizza-box'>\n        <h3 className='pizza-box__name'>{pizzaName} Pizza</h3>\n        <div className='pizza-box__container'>\n          <div className='pizza-box__details'>\n            {customizeSecondary}\n\n            <h4 className='pizza-box__price'>\n              ${(this.state.quantity * price).toFixed(2)}\n            </h4>\n            <div className='pizza-box__options'>\n              <div className='pizza-box__crust'>\n                <Dropdown\n                  options={crustOptions}\n                  onChange={this.handleChangeCrust}\n                  value={this.state.pizza.crust}\n                />\n              </div>\n              <div className='pizza-box__size'>\n                <Dropdown\n                  options={sizeOptions}\n                  onChange={this.handleChangeSize}\n                  value={this.state.pizza.size}\n                />\n              </div>\n              <div className='pizza-box__add'>{pizzaAdd}</div>\n            </div>\n          </div>\n          <div className='pizza-box__right'>\n            <img\n              className='pizza-box__image'\n              src={this.props.imageSrc}\n              alt={this.props.pizzaName}\n            />\n            {customize}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaBox.propTypes = {\n  priceType: PropTypes.string.isRequired,\n  pizzaType: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  pizzaName: PropTypes.string,\n};\n\nexport default connect(null, { initializePizzaBuilder, addToCart })(PizzaBox);\n","import React from 'react';\nimport './OrderSubmissionMessage.scss';\nimport { Link } from 'react-router-dom';\n\n/* A thank you message to be displayed after successfully submitting an order */\nconst OrderSubmission = () => {\n  return (\n    <div className='order-submission'>\n      <span>\n        <h3 style={{ display: 'inline' }} className='order-submission__thanks'>\n          Thank you for ordering at PizzaTime!\n        </h3>\n        &nbsp;\n        <h3 style={{ display: 'inline' }}>\n          View your{' '}\n          <Link className='order-submission__orders' to='/my-orders'>\n            orders\n          </Link>{' '}\n        </h3>\n      </span>\n    </div>\n  );\n};\n\nexport default OrderSubmission;\n","import React from 'react';\n\n/* A confirmation message to be displayed after successfully signing out */\nconst SignedOutMessage = () => {\n  return (\n    <div className='signed-out-message'>\n      <h3 style={{ display: 'inline' }}>You have successfully signed out!</h3>\n    </div>\n  );\n};\n\nexport default SignedOutMessage;\n","import React from 'react';\n\n/* A confirmation message to be displayed after successfully signing out */\nconst SignedUpMessage = () => {\n  return (\n    <div className='signed-up-message'>\n      <h3 style={{ display: 'inline' }}>\n        You have successfully created an account!\n      </h3>\n    </div>\n  );\n};\n\nexport default SignedUpMessage;\n","import React from 'react';\nimport './Message.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard message alert to the user component */\nconst Message = (props) => {\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <div className='message'>{props.children}</div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default Message;\n","import React from 'react';\nimport PizzaBox from '../../../containers/PizzaBox/PizzaBox';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniPizzaImg from '../../../assets/images/pizza_pepperoni.jpg';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  PEPPERONI_PIZZA,\n  MEAT_LOVER,\n  SUPREME,\n} from '../../../metadata/comboMetadata';\nimport OrderSubmission from '../../Messages/OrderSubmissionMessage/OrderSubmissionMessage';\nimport SignedOutMessage from '../../Messages/SignedOutMessage/SignedOutMessage';\nimport SignedUpMessage from '../../Messages/SignedUpMessage/SignedUpMessage';\nimport Message from '../../UI/Message/Message';\n\n/* Displays popular pizzas */\nconst Home = (props) => {\n  let message = null;\n  if (props.location.fromCheckout) {\n    message = (\n      <Message>\n        <OrderSubmission />\n      </Message>\n    );\n  } else if (props.location.fromSignOut) {\n    message = (\n      <Message>\n        <SignedOutMessage />\n      </Message>\n    );\n  } else if (props.location.fromSignUp) {\n    message = (\n      <Message>\n        <SignedUpMessage />\n      </Message>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {message}\n      <div className='pizza-grid'>\n        <h1 className='pizza-grid__title'>Popular</h1>\n        <div className='pizza-grid__grid'>\n          <PizzaBox\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            buildPizza\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBox\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBox\n            pizzaType={PEPPERONI_PIZZA}\n            priceType={REGULAR}\n            imageSrc={PepperoniPizzaImg}\n          />\n          <PizzaBox\n            pizzaType={MEAT_LOVER}\n            priceType={COMBO}\n            imageSrc={MeatLoversPizzaImg}\n          />\n          <PizzaBox\n            pizzaType={SUPREME}\n            priceType={COMBO}\n            imageSrc={SupremePizzaImg}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PizzaBox from '../../../containers/PizzaBox/PizzaBox';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniLoversPizzaImg from '../../../assets/images/pizza_Pepperoni_Lovers.png';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  MEAT_LOVER,\n  SUPREME,\n  SUPER_SUPREME,\n  PEPPERONI_LOVER,\n} from '../../../metadata/comboMetadata';\n\n/* Displays various types of meat pizzas */\nconst Meats = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Meats</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBox\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBox\n          pizzaType={SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n        <PizzaBox\n          pizzaType={MEAT_LOVER}\n          priceType={COMBO}\n          imageSrc={MeatLoversPizzaImg}\n        />\n        <PizzaBox\n          pizzaType={PEPPERONI_LOVER}\n          priceType={COMBO}\n          imageSrc={PepperoniLoversPizzaImg}\n        />\n        <PizzaBox\n          pizzaType={SUPER_SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Meats;\n","import React from 'react';\nimport PizzaBox from '../../../containers/PizzaBox/PizzaBox';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport VeggieLoversPizzaImg from '../../../assets/images/pizza_Veggie_Lovers.png';\nimport UltimateCheeseLoverPizzaImg from '../../../assets/images/pizza_Ultimate_Cheese_Lovers.png';\nimport {\n  REGULAR,\n  COMBO,\n  VEGGIE_LOVER,\n  ULTIMATE_CHEESE_LOVER,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of veggy pizzas */\nconst Veggies = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Veggies</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBox\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBox\n          pizzaType={VEGGIE_LOVER}\n          priceType={COMBO}\n          imageSrc={VeggieLoversPizzaImg}\n        />\n        <PizzaBox\n          pizzaType={ULTIMATE_CHEESE_LOVER}\n          priceType={COMBO}\n          imageSrc={UltimateCheeseLoverPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Veggies;\n","import React from 'react';\nimport PizzaBox from '../../../containers/PizzaBox/PizzaBox';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport HawaiianChickenPizzaImg from '../../../assets/images/pizza_Hawaiian_Chicken.png';\nimport ChickenBaconParmesanImg from '../../../assets/images/pizza_Chicken_Bacon_Parmesan.png';\nimport BBQChickenPizzaImg from '../../../assets/images/pizza_Backyard_BBQ_Chicken.png';\nimport BuffaloChickenPizzaImg from '../../../assets/images/pizza_Buffalo_Chicken.png';\nimport {\n  REGULAR,\n  COMBO,\n  HAWAIIAN_CHICKEN,\n  CHICKEN_BACON_PARMESAN,\n  BBQ_CHICKEN,\n  BUFFALO_CHICKEN,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of chicken pizza */\nconst Chicken = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Chicken</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBox\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBox\n          pizzaType={HAWAIIAN_CHICKEN}\n          priceType={COMBO}\n          imageSrc={HawaiianChickenPizzaImg}\n        />\n        <PizzaBox\n          pizzaType={CHICKEN_BACON_PARMESAN}\n          priceType={COMBO}\n          imageSrc={ChickenBaconParmesanImg}\n        />\n        <PizzaBox\n          pizzaType={BBQ_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BBQChickenPizzaImg}\n        />\n        <PizzaBox\n          pizzaType={BUFFALO_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BuffaloChickenPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chicken;\n","import React, { Component } from 'react';\nimport Cheese from '../../assets/images/cheese_mozz_ML.png';\nimport './PizzaPreview.scss';\nimport { crustMetadataMapping } from '../../metadata/crustMetadata';\nimport { meatImageMapping } from '../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../metadata/veggiesMetadata';\nimport { crustFlavorImageMapping } from '../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image with all selected toppings and crust options */\nclass PizzaPreview extends Component {\n  render() {\n    return (\n      <div\n        className={this.props.small ? 'pizza-preview--small' : 'pizza-preview'}\n      >\n        <img\n          className='pizza-preview__property'\n          src={crustMetadataMapping[this.props.pizza[CRUST]].preview}\n          alt={this.props.pizza[CRUST]}\n        />\n        {this.props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR ? (\n          <img\n            className='pizza-preview__property'\n            src={\n              crustFlavorImageMapping[this.props.pizza[CRUST_FLAVOR]][\n                this.props.pizza[CRUST]\n              ].preview\n            }\n            alt={this.props.pizza[CRUST_FLAVOR]}\n          />\n        ) : null}\n        <img className='pizza-preview__property' src={Cheese} alt='Cheese' />\n        {this.props.pizza[MEATS] &&\n          Object.entries(this.props.pizza[MEATS]).map(\n            ([meat, selectedMeatProps]) => {\n              let src = null;\n              if (selectedMeatProps.amount === EXTRA_TOPPING) {\n                src = meatImageMapping[meat].previewExtra;\n              } else {\n                src = meatImageMapping[meat].preview;\n              }\n\n              let imgClassNames = ['pizza-preview__property'];\n              if (selectedMeatProps.portion === LEFT_HALF) {\n                imgClassNames.push('pizza-preview__property--left');\n              } else if (selectedMeatProps.portion === RIGHT_HALF) {\n                imgClassNames.push('pizza-preview__property--right');\n              }\n              return (\n                <img\n                  key={meat}\n                  className={imgClassNames.join(' ')}\n                  src={src}\n                  alt={meat}\n                />\n              );\n            }\n          )}\n        {this.props.pizza[VEGGIES] &&\n          Object.entries(this.props.pizza[VEGGIES]).map(\n            ([veggy, selectedVeggyProps]) => {\n              let src = null;\n              if (selectedVeggyProps.amount === EXTRA_TOPPING) {\n                src = veggiesImageMapping[veggy].previewExtra;\n              } else {\n                src = veggiesImageMapping[veggy].preview;\n              }\n\n              let imgClassNames = ['pizza-preview__property'];\n              if (selectedVeggyProps.portion === LEFT_HALF) {\n                imgClassNames.push('preview__property--left');\n              } else if (selectedVeggyProps.portion === RIGHT_HALF) {\n                imgClassNames.push('pizza-preview__property--right');\n              }\n              return (\n                <img\n                  key={veggy}\n                  className={imgClassNames.join(' ')}\n                  src={src}\n                  alt={veggy}\n                />\n              );\n            }\n          )}\n      </div>\n    );\n  }\n}\n\nPizzaPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  small: PropTypes.bool,\n};\n\nexport default PizzaPreview;\n","import React, { Component } from 'react';\nimport './PizzaBuilderPreview.scss';\nimport PizzaPreview from '../../PizzaPreview/PizzaPreview';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image section of the pizza builder */\nclass PizzaBuilderPreview extends Component {\n  shouldComponentUpdate(prevProps) {\n    if (this.props.pizza !== prevProps.pizza) {\n      return true;\n    }\n    return false;\n  }\n  render() {\n    return (\n      <div className='pizza-builder-preview'>\n        <h4 className='builder-section__title'>Preview</h4>\n        <div className='pizza-builder-preview__preview'>\n          <PizzaPreview pizza={this.props.pizza} />\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaBuilderPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default PizzaBuilderPreview;\n","import React from 'react';\nimport './PizzaDescription.scss';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport {\n  SIZE,\n  CRUST,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  COMBO_NAME,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CHEESE } from '../../metadata/cheeseMetadata';\nimport { NO_SAUCE } from '../../metadata/sauceMetadata';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Description of pizza, including size, toppings and other descriptives */\nconst PizzaDescription = (props) => {\n  let sauce = props.pizza[SAUCE_AMOUNT] + ' ' + props.pizza[SAUCE];\n  if (props.pizza[SAUCE_AMOUNT] === NO_SAUCE) {\n    sauce = 'No';\n  }\n\n  let cheeseAmount = props.pizza[CHEESE_AMOUNT];\n  if (props.pizza[CHEESE_AMOUNT] === NO_CHEESE) {\n    cheeseAmount = 'No';\n  }\n\n  let crustFlavor = null;\n  if (props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR) {\n    crustFlavor = <span>, {props.pizza[CRUST_FLAVOR]} Crust Flavor</span>;\n  }\n\n  const getToppingDescriptions = (toppings) => {\n    let toppingDescriptions = [];\n    Object.entries(toppings).forEach(([topping, toppingProps]) => {\n      let toppingDescription = '';\n      if (toppingProps.portion === LEFT_HALF) {\n        toppingDescription += 'Left Half ';\n      } else if (toppingProps.portion === RIGHT_HALF) {\n        toppingDescription += 'Right Half ';\n      }\n\n      if (toppingProps.amount === EXTRA_TOPPING) {\n        toppingDescription += 'Extra ';\n      }\n      toppingDescriptions.push(toppingDescription + topping);\n    });\n\n    return toppingDescriptions;\n  };\n\n  let meats = props.pizza[MEATS] || {};\n  let veggies = props.pizza[VEGGIES] || {};\n\n  let toppings = [\n    ...getToppingDescriptions(meats),\n    ...getToppingDescriptions(veggies),\n  ];\n\n  if (toppings.length === 0) {\n    toppings = null;\n  } else {\n    toppings = (\n      <div className='description__toppings'>\n        <h3>Toppings: </h3>\n        <span>{toppings.join(', ')}</span>\n      </div>\n    );\n  }\n\n  const singlePrice = calculatePrice(props.pizza);\n  let overallPrice = (singlePrice * props.quantity).toFixed(2);\n  let quantity = null;\n  let pizzaText = 'Pizza';\n\n  if (props.cart) {\n    overallPrice = (\n      <h2 className='description__price--cart'>${overallPrice}</h2>\n    );\n  } else if (props.order) {\n    overallPrice = (\n      <h2 className='description__price--order'>${overallPrice}</h2>\n    );\n    quantity = props.quantity + ' ';\n    if (props.quantity > 1) {\n      pizzaText = 'Pizzas';\n    }\n  } else {\n    overallPrice = <h2 className='description__price'>${overallPrice}</h2>;\n  }\n\n  return (\n    <div className='description'>\n      <div className='description__title'>\n        <div className='description__pizza'>\n          <h2 className='description__pizza-title'>\n            {quantity} {props.pizza[SIZE]} {props.pizza[CRUST]}{' '}\n            {props.pizza[COMBO_NAME]} {pizzaText}\n          </h2>\n        </div>\n        {overallPrice}\n      </div>\n      <div className='description__details'>\n        <span>{sauce} Sauce, </span>\n        <span>{cheeseAmount} Cheese</span>\n        {crustFlavor}\n        {toppings}\n      </div>\n    </div>\n  );\n};\n\nPizzaDescription.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n  cart: PropTypes.bool,\n  order: PropTypes.bool,\n};\n\nexport default PizzaDescription;\n","import React, { Component } from 'react';\nimport Dropdown from '../../UI/Dropdown/Dropdown';\nimport Button, { primary } from '../../UI/Button/Button';\nimport PizzaDescription from '../../PizzaDescription/PizzaDescription';\nimport './PizzaDetails.scss';\nimport { calculatePrice } from '../../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shows pizza description, as well as options to change quantity and add/save to cart */\nclass PizzaDetails extends Component {\n  state = {\n    quantity: this.props.quantity,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.pizza !== nextProps.pizza ||\n      this.state.quantity !== nextState.quantity\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChangeQuantity = (event) => {\n    this.setState({ quantity: event.target.value });\n  };\n\n  render() {\n    const price = calculatePrice(this.props.pizza, true);\n\n    let save = null;\n    if (this.props.itemId) {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.saveToCart(this.state.quantity)}\n        >\n          Save Changes\n        </Button>\n      );\n    } else {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.addToCart(this.state.quantity)}\n        >\n          Add to Cart\n        </Button>\n      );\n    }\n\n    return (\n      <div className='pizza-details'>\n        <h3 className='builder-title'>My Pizza</h3>\n        <div className='pizza-details__details'>\n          <div className='pizza-details__description'>\n            <PizzaDescription\n              quantity={this.state.quantity}\n              pizza={this.props.pizza}\n            />\n          </div>\n          <div className='pizza-details__options'>\n            <h2 className='pizza-details__price'>\n              ${(price * this.state.quantity).toFixed(2)}\n            </h2>\n            <div className='pizza-details__quantity'>\n              <Dropdown\n                className='item__size'\n                options={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n                value={this.state.quantity}\n                onChange={this.handleChangeQuantity}\n              />\n            </div>\n            <div className='pizza-details__save'>{save}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaDetails.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n\nexport default PizzaDetails;\n","import React, { useEffect } from 'react';\nimport './PizzaBuilderProgress.scss';\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS,\n} from '../../../containers/PizzaBuilder/PizzaBuilder';\nimport PropTypes from 'prop-types';\n\n/* Shows progress of steps in the pizza builder */\nconst PizzaBuilderProgress = (props) => {\n  useEffect(() => {}, [props.stage]);\n  return (\n    <div className='progress'>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === TOPPINGS\n            ? 'progress__button progress__button--toppings progress__button--selected'\n            : 'progress__button progress__button--toppings'\n        }\n        value={TOPPINGS}\n      >\n        Toppings\n      </button>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === CHEESE_SAUCE\n            ? 'progress__button progress__button--cheese-sauce progress__button--selected'\n            : 'progress__button progress__button--cheese-sauce'\n        }\n        value={CHEESE_SAUCE}\n      >\n        Cheese &amp; Sauce\n      </button>\n      <button\n        onClick={props.onClick}\n        className='progress__button progress__button--size-crust'\n        value={SIZE_CRUST}\n      >\n        Size &amp; Crust\n      </button>\n    </div>\n  );\n};\n\nPizzaBuilderProgress.propTypes = {\n  stage: PropTypes.oneOf(['SIZE_CRUST', 'CHEESE_SAUCE', 'TOPPINGS']).isRequired,\n};\n\nexport default PizzaBuilderProgress;\n","import React from 'react';\nimport './Backdrop.scss';\nimport PropTypes from 'prop-types';\n\n/* Greyed out backdrop on top of provided children */\nconst Backdrop = (props) => {\n  return props.show ? <div className='backdrop'>{props.children}</div> : null;\n};\n\nBackdrop.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport './Modal.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport { useEffect } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport PropTypes from 'prop-types';\n\n/* Standard modal across entire app */\nconst Modal = (props) => {\n  useEffect(() => {\n    if (props.show) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  });\n\n  let modalClassNames = ['modal'];\n  if (props.error) {\n    modalClassNames.push('modal--error');\n  }\n  if (!props.show) {\n    modalClassNames.push('modal--closed');\n  }\n  return (\n    <Backdrop show={props.show} clicked={props.modalClosed}>\n      <div className={modalClassNames.join(' ')}>\n        <MdClose className='modal__close' onClick={props.modalClosed} />\n        <div className='modal__children'>{props.children}</div>\n      </div>\n    </Backdrop>\n  );\n};\n\nModal.propTypes = {\n  show: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  error: PropTypes.bool,\n};\n\nexport default Modal;\n","import React from 'react';\nimport './ImageOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as images in the pizza builder */\nconst ImageOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {Object.keys(props.imageMapping).map((option) => {\n        const selected = props.itemSelected === option;\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className='option'\n            data-value={option}\n          >\n            {selected ? <FaCheckCircle className='option__checkmark' /> : null}\n            <img\n              className='option__img'\n              src={props.imageMapping[option].icon}\n              alt={option}\n            />\n            <div\n              className={\n                selected\n                  ? 'option__name option__name--selected'\n                  : 'option__name'\n              }\n            >\n              {option} {additionalDisplay}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nImageOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ImageOptions;\n","import React from 'react';\nimport './ButtonOptions.scss';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as buttons in the pizza builder */\nconst ButtonOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {props.selectionOptions.map((option) => {\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className={\n              props.itemSelected === option\n                ? 'button-option button-option--selected'\n                : 'button-option'\n            }\n            data-value={option}\n          >\n            {option} {additionalDisplay}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nButtonOptions.propTypes = {\n  selectionOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ButtonOptions;\n","import React, { Component } from 'react';\nimport {\n  crustTypes,\n  crustMetadataMapping,\n} from '../../../../metadata/crustMetadata';\nimport {\n  crust_flavors,\n  crustFlavorImageMapping,\n} from '../../../../metadata/crustFlavorMetadata';\nimport { sizes } from '../../../../metadata/sizeMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SIZE,\n  CRUST,\n  CRUST_FLAVOR,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with size/crust options */\nclass SizeCrustBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Size</h4>\n          <ButtonOptions\n            selectionOptions={sizes}\n            itemSelected={this.props.pizza[SIZE]}\n            onClick={(e) => this.props.onClick(e, SIZE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust</h4>\n          <ImageOptions\n            selectionMetadata={crustMetadataMapping}\n            selectionOptions={crustTypes}\n            itemSelected={this.props.pizza[CRUST]}\n            imageMapping={crustMetadataMapping}\n            onClick={(e) => this.props.onClick(e, CRUST)}\n          />\n        </div>\n\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust Flavor</h4>\n          <ImageOptions\n            selectionOptions={crust_flavors}\n            itemSelected={this.props.pizza[CRUST_FLAVOR]}\n            imageMapping={crustFlavorImageMapping}\n            onClick={(e) => this.props.onClick(e, CRUST_FLAVOR)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSizeCrustBuilder.proptTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default SizeCrustBuilder;\n","import React, { Component } from 'react';\nimport {\n  cheeseAmounts,\n  cheeseAmountMetadataMapping,\n} from '../../../../metadata/cheeseMetadata';\nimport {\n  sauceImageMapping,\n  sauceAmounts,\n  sauceAmountMetadataMapping,\n} from '../../../../metadata/sauceMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with cheese/sauce options */\nclass CheeseSauceBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Sauce</h2>\n          <ImageOptions\n            itemSelected={this.props.pizza[SAUCE]}\n            imageMapping={sauceImageMapping}\n            onClick={(e) => this.props.onClick(e, SAUCE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Sauce</h2>\n          <ButtonOptions\n            selectionMetadata={sauceAmountMetadataMapping}\n            selectionOptions={sauceAmounts}\n            itemSelected={this.props.pizza[SAUCE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, SAUCE_AMOUNT)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Cheese</h2>\n          <ButtonOptions\n            selectionMetadata={cheeseAmountMetadataMapping}\n            selectionOptions={cheeseAmounts}\n            itemSelected={this.props.pizza[CHEESE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, CHEESE_AMOUNT)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCheeseSauceBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default CheeseSauceBuilder;\n","import React from 'react';\nimport './ToppingOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport {\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Interactable topping options */\n\nconst ToppingOptions = (props) => {\n  const onClick = (event) => {\n    event.stopPropagation();\n    props.onClick(event);\n  };\n\n  const onClickAmount = (event) => {\n    event.stopPropagation();\n    props.onClickAmount(event);\n  };\n\n  const onClickPortion = (event) => {\n    event.stopPropagation();\n    props.onClickPortion(event);\n  };\n\n  return (\n    <div className='builder-list'>\n      {Object.keys(props.imageMapping).map((topping) => {\n        const selected = Object.keys(props.itemsSelected).includes(topping);\n        let checkMark = null;\n        let toppingOptionClasses = ['topping-option'];\n        let amountOptions = null;\n        let portionOptions = null;\n        let selection = props.itemsSelected[topping];\n        toppingOptionClasses.push('topping-option--selected');\n        amountOptions = (\n          <div className='topping-option__amount'>\n            <div\n              className={\n                selection && selection.amount === EXTRA_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={EXTRA_TOPPING}\n              onClick={onClickAmount}\n            >\n              Extra\n            </div>\n            <div\n              className={\n                selection && selection.amount === REGULAR_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={REGULAR_TOPPING}\n              onClick={onClickAmount}\n            >\n              Regular\n            </div>\n            <div\n              className={\n                !selection\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-value={topping}\n              onClick={onClick}\n            >\n              None\n            </div>\n          </div>\n        );\n        if (selected) {\n          checkMark = <FaCheckCircle className='topping-option__checkmark' />;\n\n          let wholeSelection = selection.portion === WHOLE;\n          let leftSelection = selection.portion === LEFT_HALF;\n          let rightSelection = selection.portion === RIGHT_HALF;\n          portionOptions = (\n            <div className='topping-option__portion'>\n              <div\n                className={\n                  wholeSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={WHOLE}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    wholeSelection\n                      ? 'portion-option__whole portion-option__whole--selected'\n                      : 'portion-option__whole'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  leftSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={LEFT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    leftSelection\n                      ? 'portion-option__left portion-option__left--selected'\n                      : 'portion-option__left'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  rightSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={RIGHT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    rightSelection\n                      ? 'portion-option__right portion-option__right--selected'\n                      : 'portion-option__right'\n                  }\n                ></div>\n              </div>\n            </div>\n          );\n        }\n\n        return (\n          <div\n            key={topping}\n            onClick={props.onClick}\n            className={toppingOptionClasses.join(' ')}\n            data-value={topping}\n          >\n            <div\n              className='topping-option__img-selection'\n              data-value={topping}\n              onClick={onClick}\n            >\n              {checkMark}\n              <img\n                className='topping-option__img'\n                src={props.imageMapping[topping].icon}\n                alt={topping}\n              />\n            </div>\n            <div className='topping-option__details'>\n              <span className='topping-option__name'>{topping}</span>\n              <div\n                className='topping-option__amount-portion'\n                onClick={(e) => e.stopPropagation()}\n              >\n                {amountOptions}\n                {portionOptions}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToppingOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string,\n};\n\nexport default ToppingOptions;\n","import React, { Component } from 'react';\nimport './OptionsButton.scss';\nimport Button, { tertiary } from '../Button/Button';\nimport PropTypes from 'prop-types';\n\n/* Standard single component with one or more button options */\nclass OptionsButton extends Component {\n  state = {};\n\n  handleButtonClick = (option) => {\n    option.onClick();\n  };\n\n  render() {\n    return (\n      <div className='optionsButton'>\n        {this.props.options.map((option) => {\n          let button = null;\n          if (this.props.selectedOption === option.optionName) {\n            button = (\n              <Button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                type={tertiary}\n              >\n                {option.displayName}\n              </Button>\n            );\n          } else {\n            button = (\n              <button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                className='optionsButton__option'\n              >\n                {option.displayName}\n              </button>\n            );\n          }\n          return button;\n        })}\n      </div>\n    );\n  }\n}\n\nOptionsButton.propTypes = {\n  options: PropTypes.array.isRequired,\n};\n\nexport default OptionsButton;\n","import React, { Component } from 'react';\nimport './ToppingsBuilder.scss';\nimport ToppingOptions from '../../BuilderOptions/ToppingOptions/ToppingOptions';\nimport { meatImageMapping } from '../../../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../../../metadata/veggiesMetadata';\nimport { MEATS, VEGGIES } from '../../../../metadata/pizzaProperties';\nimport OptionsButton from '../../../UI/OptionsButton/OptionsButton';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with topping options */\nclass ToppingsBuilder extends Component {\n  state = {\n    stage: this.props.toppingType || MEATS,\n  };\n\n  handleClickVeggies = () => {\n    this.setState({ stage: VEGGIES });\n  };\n\n  handleClickMeats = () => {\n    this.setState({ stage: MEATS });\n  };\n\n  render() {\n    let toppingsBuilder = null;\n    if (this.state.stage === MEATS) {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, MEATS)}\n            onClickAmount={(e) => this.props.onClickAmount(e, MEATS)}\n            onClickPortion={(e) => this.props.onClickPortion(e, MEATS)}\n            imageMapping={meatImageMapping}\n            itemsSelected={this.props.pizza[MEATS] || {}} //Need to add empty object because firebase doesn't store empty objects\n          />\n        </React.Fragment>\n      );\n    } else {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, VEGGIES)}\n            onClickAmount={(e) => this.props.onClickAmount(e, VEGGIES)}\n            onClickPortion={(e) => this.props.onClickPortion(e, VEGGIES)}\n            imageMapping={veggiesImageMapping}\n            itemsSelected={this.props.pizza[VEGGIES] || {}} //Need to add empty object because firebase doesn't store empty objects\n          />\n        </React.Fragment>\n      );\n    }\n\n    const options = [\n      {\n        optionName: MEATS,\n        displayName: 'Meats',\n        onClick: this.handleClickMeats,\n      },\n      {\n        optionName: VEGGIES,\n        displayName: 'Veggies',\n        onClick: this.handleClickVeggies,\n      },\n    ];\n    return (\n      <div className='builder'>\n        <div className='builder__topping-type'>\n          <OptionsButton selectedOption={this.state.stage} options={options} />\n        </div>\n        <div className='builder__topping'></div>\n        {toppingsBuilder}\n      </div>\n    );\n  }\n}\n\nToppingsBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default ToppingsBuilder;\n","import React, { Component } from 'react';\nimport './PizzaBuilder.scss';\nimport { connect } from 'react-redux';\nimport PizzaBuilderPreview from '../../components/PizzaBuilder/PizzaBuilderPreview/PizzaBuilderPreview';\nimport { addToCart, saveToCart } from '../../store/cart/cartActions';\nimport PizzaDetails from '../../components/PizzaBuilder/PizzaDetails/PizzaDetails';\nimport PizzaBuilderProgress from '../../components/PizzaBuilder/PizzaBuilderProgress/PizzaBuilderProgress';\nimport Modal from '../../components/UI/Modal/Modal';\nimport SizeCrustBuilder from '../../components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder';\nimport CheeseSauceBuilder from '../../components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder';\nimport ToppingsBuilder from '../../components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder';\nimport {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n} from '../../store/pizzaBuilder/pizzaBuilderActions';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport PropTypes from 'prop-types';\n\n/* Stages that are possible for pizza builder.\n   Set in state. */\nexport const SIZE_CRUST = 'SIZE_CRUST';\nexport const CHEESE_SAUCE = 'CHEESE_SAUCE';\nexport const TOPPINGS = 'TOPPINGS';\n\n/* Main container for entire pizza builder */\nclass PizzaBuilder extends Component {\n  state = {\n    stage: SIZE_CRUST,\n  };\n\n  /* Set current stage of pizza builder based on \n    PizzaBuilderProgres component */\n  handleClickStage = (event) => {\n    this.setState({ stage: event.target.value });\n  };\n\n  /* Set current stage of pizza builder based on\n     Back/Next buttons */\n  handleClickAction = (stage) => {\n    this.setState({ stage: stage });\n  };\n\n  /* Reset to first stage and close pizza builder */\n  handleCloseBuilder = () => {\n    this.setState({ stage: SIZE_CRUST });\n    this.props.closePizzaBuilder();\n  };\n\n  /* Set provided value on given property on current pizza */\n  handleClickProperty = (event, property) => {\n    this.props.setProperty(property, event.currentTarget.dataset.value);\n  };\n\n  /* Toggle given topping on current pizza */\n  handleClickTopping = (event, property) => {\n    this.props.toggleTopping(property, event.currentTarget.dataset.value);\n  };\n\n  handleClickAmount = (event, property) => {\n    this.props.setToppingAmount(\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  handleClickPortion = (event, property) => {\n    this.props.setToppingPortion(\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  /* Add current pizza to cart and close pizza builder */\n  handleAddToCart = (quantity) => {\n    this.props.addToCart(this.props.pizza, quantity);\n    this.handleCloseBuilder();\n  };\n\n  /* Save current pizza to cart and close pizza builder */\n  handleSaveToCart = (quantity) => {\n    this.props.saveToCart(this.props.pizza, quantity, this.props.itemId);\n    this.handleCloseBuilder();\n  };\n\n  render() {\n    let builder = null;\n    let back = null;\n    let next = null;\n\n    /* helper function that returns button that moves\n       pizza builder to specified stage */\n    const getActionButton = (stage, buttonName) => {\n      return (\n        <div className='builder-action__step'>\n          <Button type={primary} onClick={() => this.handleClickAction(stage)}>\n            {buttonName}\n          </Button>\n        </div>\n      );\n    };\n\n    /* set SizeCrustBuilder for SIZE_CRUST stage\n       and appopriate next button */\n    if (this.state.stage === SIZE_CRUST) {\n      builder = (\n        <SizeCrustBuilder\n          pizza={this.props.pizza}\n          onClick={this.handleClickProperty}\n        />\n      );\n      next = getActionButton(CHEESE_SAUCE, 'Next');\n    } else if (this.state.stage === CHEESE_SAUCE) {\n      /* set CheeseSauceBuilder for CHEESE_SAUCE stage\n       and appropriate back/next buttons */\n      builder = (\n        <CheeseSauceBuilder\n          pizza={this.props.pizza}\n          onClick={this.handleClickProperty}\n        />\n      );\n      back = getActionButton(SIZE_CRUST, 'Back');\n      next = getActionButton(TOPPINGS, 'Next');\n    } else if (this.state.stage === TOPPINGS) {\n      /* set ToppingsBuilder for TOPPINGS stage\n       and appropriate back button */\n      builder = (\n        <ToppingsBuilder\n          pizza={this.props.pizza}\n          onClick={this.handleClickTopping}\n          onClickAmount={this.handleClickAmount}\n          onClickPortion={this.handleClickPortion}\n        />\n      );\n      back = getActionButton(CHEESE_SAUCE, 'Back');\n    }\n\n    let totalBuilder = null;\n    if (this.props.showPizzaBuilder) {\n      totalBuilder = (\n        <div className='totalBuilder'>\n          <div className='totalBuilder__mypizza'>\n            <div className='totalBuilder__details'>\n              <PizzaDetails\n                addToCart={this.handleAddToCart}\n                saveToCart={this.handleSaveToCart}\n                pizza={this.props.pizza}\n                quantity={this.props.quantity}\n                itemId={this.props.itemId}\n              />\n            </div>\n            <div className='totalBuilder__preview'>\n              <PizzaBuilderPreview pizza={this.props.pizza} />\n            </div>\n          </div>\n          <div className='totalBuilder__builder'>\n            <h3 className='builder-title'>Pizza Builder</h3>\n            <div className='builder-progress'>\n              <PizzaBuilderProgress\n                stage={this.state.stage}\n                onClick={this.handleClickStage}\n              />\n            </div>\n            {builder}\n            <div className='builder-action'>\n              {back}\n              {next}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Modal\n        show={this.props.showPizzaBuilder}\n        modalClosed={this.handleCloseBuilder}\n      >\n        {totalBuilder}\n      </Modal>\n    );\n  }\n}\n\nPizzaBuilder.propTypes = {\n  itemId: PropTypes.string,\n  pizza: PropTypes.object,\n  quantity: PropTypes.number,\n  showPizzaBuilder: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  itemId: state.pizzaBuilder.itemId,\n  pizza: state.pizzaBuilder.pizza,\n  quantity: state.pizzaBuilder.quantity,\n  showPizzaBuilder: state.pizzaBuilder.showPizzaBuilder,\n});\n\nexport default connect(mapStateToProps, {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n  addToCart,\n  saveToCart,\n})(PizzaBuilder);\n","import React from 'react';\nimport './CartItem.scss';\nimport PizzaDescription from '../../components/PizzaDescription/PizzaDescription';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport PizzaPreview from '../../components/PizzaPreview/PizzaPreview';\nimport { connect } from 'react-redux';\nimport { SyncLoader } from 'react-spinners';\nimport { isEqual } from 'lodash';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Single cart item with pizza description, price, quantity and edit/remove options */\nconst CartItem = (props) => {\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  let remove = null;\n  if (!props.checkout) {\n    remove = (\n      <span className='link' onClick={props.removeItem}>\n        Remove\n      </span>\n    );\n  }\n\n  let overallPrice = (calculatePrice(props.pizza) * props.quantity).toFixed(2);\n\n  let cartItem = null;\n  if (props.loading && isEqual(props.itemBeingChanged, props.pizza)) {\n    cartItem = (\n      <div className='item__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else {\n    cartItem = (\n      <div className='item'>\n        <div className='item__pizza u-margin-right'>\n          <div className='item__preview'>\n            <PizzaPreview small pizza={props.pizza} />\n          </div>\n          <div className='item__description'>\n            <PizzaDescription\n              editItem={props.editItem}\n              cart\n              pizza={props.pizza}\n              quantity={props.quantity}\n            />\n          </div>\n        </div>\n        <div className='item__details'>\n          <div className='item__price'>${overallPrice}</div>\n          <div className='item__quantity'>\n            <Dropdown\n              onChange={props.changeItemQuantity}\n              options={quantityOptions}\n              value={props.quantity}\n            />\n          </div>\n          <div className='item__actions'>\n            <span className='item__edit link' onClick={props.editItem}>\n              Edit\n            </span>\n            {remove}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return cartItem;\n};\n\nCartItem.propTypes = {\n  itemBeingChanged: PropTypes.object,\n  loading: PropTypes.bool,\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  checkout: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.cart.loadingCartItem,\n  itemBeingChanged: state.cart.itemBeingChanged,\n});\n\nexport default connect(mapStateToProps, null)(CartItem);\n","import React from 'react';\nimport CartItem from '../../containers/CartItem/CartItem';\nimport PropTypes from 'prop-types';\n\n/* All cart items to display in cart and order summary pages */\nconst CartItems = (props) => {\n  return Object.keys(props.items).map((itemId) => {\n    const item = props.items[itemId];\n    return (\n      <CartItem\n        key={itemId}\n        pizza={item.pizza}\n        quantity={item.quantity}\n        changeItemQuantity={(e) => props.handleChangeItemQuantity(e, itemId)}\n        removeItem={() => props.handleRemoveItem(itemId, item.pizza)}\n        editItem={() => props.handleEditItem(item.pizza, item.quantity, itemId)}\n        checkout={props.checkout}\n      />\n    );\n  });\n};\n\nCartItems.propTypes = {\n  items: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default CartItems;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../../store/pizzaBuilder/pizzaBuilderActions';\nimport { changeItemQuantity, removeItem } from '../../store/cart/cartActions';\nimport CartItems from '../../components/CartItems/CartItems';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { Link } from 'react-router-dom';\nimport {\n  handleEditItem,\n  handleChangeItemQuantity,\n  handleRemoveItem,\n} from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport { calculateSubTotal } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shopping cart with all added cart items */\nconst Cart = (props) => {\n  const subTotal = calculateSubTotal(props.items);\n\n  let cart = null;\n  if (props.loading) {\n    cart = (\n      <div className='item-list__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else if (Object.keys(props.items).length > 0) {\n    cart = (\n      <React.Fragment>\n        <CartItems\n          handleEditItem={(pizza, quantity, itemId) =>\n            handleEditItem(props, pizza, quantity, itemId)\n          }\n          handleRemoveItem={(itemId, pizza) =>\n            handleRemoveItem(props, itemId, pizza)\n          }\n          handleChangeItemQuantity={(event, itemId) =>\n            handleChangeItemQuantity(props, itemId, event.target.value)\n          }\n          items={props.items}\n        />\n        <div className='item-list__bottom'>\n          <div className='totals'>\n            <div className='totals__line-items'>\n              <div className='totals__line-item'>\n                <h3>Subtotal:</h3> <h3>${subTotal}</h3>\n              </div>\n            </div>\n\n            <Link\n              to={{\n                pathname: props.isAuthenticated\n                  ? '/checkout/order-type'\n                  : '/signin',\n                fromCheckout: true,\n              }}\n            >\n              <Button type={primary}>Checkout</Button>\n            </Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    cart = (\n      <div className='item-list__empty'>\n        <h2>Your cart is empty!</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <h1 className='item-list__title'>Shopping Cart</h1>\n        {cart}\n      </div>\n    </div>\n  );\n};\n\nCart.propTypes = {\n  items: PropTypes.object.isRequired,\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  cartId: state.cart.cartId,\n  loading: state.cart.loadingCart,\n  error: state.cart.errorCart,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, {\n  initializePizzaBuilder,\n  changeItemQuantity,\n  removeItem,\n})(Cart);\n","import * as actionTypes from './checkoutActionTypes';\nimport axiosFirebase from '../../shared/axiosFirebase';\nimport axiosGeolocation from 'axios';\nimport * as actionDisplays from '../ui/actionDisplays';\nimport { setErroredAction } from '../ui/uiActions';\n\n/* To set loading in UI when starting to submit order */\nexport const submitOrderStart = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_START,\n  };\n};\n\n/* Submit an order for a user */\nexport const submitOrder = (total, items, idToken, userId) => {\n  return (dispatch, getState) => {\n    dispatch(submitOrderStart());\n    let order = {\n      userId: userId,\n      items: items,\n      date: new Date(),\n      total: total,\n    };\n\n    const deliveryAddress = getState().checkout.deliveryAddress;\n    if (deliveryAddress) {\n      order = { ...order, deliveryAddress: deliveryAddress };\n    }\n    axiosFirebase\n      .post('/orders.json?auth=' + idToken, order)\n      .then((res) => {\n        dispatch({\n          type: actionTypes.SUBMIT_ORDER_SUCCESS,\n          orderId: res.data.name,\n          order: order,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionDisplays.SUBMIT_ORDER));\n        dispatch(submitOrderFailed());\n      });\n  };\n};\n\n/* Stop loading in UI when submitting order failed */\nexport const submitOrderFailed = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_FAILED,\n  };\n};\n\n/* Reset all address validation properties */\nexport const validateAddressReset = () => {\n  return {\n    type: actionTypes.VALIDATE_ADDRESS_RESET,\n  };\n};\n\n/* Call smarty streets geolocation api to validate delivery address */\n\nexport const validateAddress = (addressForm) => {\n  return (dispatch) => {\n    let params = {\n      key: process.env.REACT_APP_SMARTY_STREETS_KEY,\n      street: addressForm.street.value,\n      secondary: addressForm.unit.value,\n      city: addressForm.city.value,\n      state: addressForm.state.value,\n      zipcode: addressForm.zipcode.value,\n      candidates: 10,\n    };\n\n    dispatch({\n      type: actionTypes.VALIDATE_ADDRESS_START,\n    });\n\n    axiosGeolocation\n      .get(process.env.REACT_APP_SMARTY_STREETS_BASE_URL, {\n        params: params,\n      })\n      .then((res) => {\n        if (res.data.length > 0) {\n          const matchCode = res.data[0].analysis.dpv_match_code;\n          if (matchCode === 'Y') {\n            dispatch({\n              type: actionTypes.VALIDATE_ADDRESS_SUCCESS,\n              deliveryAddress: {\n                street: addressForm.street.value,\n                secondary: addressForm.unit.value,\n                city: addressForm.city.value,\n                state: addressForm.state.value,\n                zipcode: addressForm.zipcode.value,\n              },\n            });\n          } else if (matchCode === 'N') {\n            dispatch({\n              type: actionTypes.VALIDATE_ADDRESS_FAILED,\n              error: 'The address you entered is invalid',\n            });\n          } else if (matchCode === 'S' || matchCode === 'D') {\n            dispatch({\n              type: actionTypes.VALIDATE_ADDRESS_FAILED,\n              error: 'Missing or incorrect secondary address (apt/unit)',\n            });\n          }\n        } else {\n          dispatch({\n            type: actionTypes.VALIDATE_ADDRESS_FAILED,\n            error: 'The address you entered is invalid',\n          });\n        }\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionDisplays.VALIDATE_ADDRESS));\n        dispatch({\n          type: actionTypes.VALIDATE_ADDRESS_FAILED,\n        });\n      });\n  };\n};\n\n/* To set loading in UI when getting orders */\nconst getOrdersStart = () => {\n  return {\n    type: actionTypes.GET_ORDERS_START,\n  };\n};\n\n/* To finish loading in UI after getting orders failed */\nconst getOrdersFailed = () => {\n  return {\n    type: actionTypes.GET_ORDERS_FAILED,\n  };\n};\n\n/* Get all past orders for a particular user */\nexport const getOrders = (idToken, userId) => {\n  return (dispatch) => {\n    dispatch(getOrdersStart());\n    axiosFirebase\n      .get(\n        '/orders.json?auth=' +\n          idToken +\n          '&orderBy=\"userId\"&equalTo=\"' +\n          userId +\n          '\"'\n      )\n      .then((res) => {\n        const orders = res.data;\n        dispatch({\n          type: actionTypes.GET_ORDERS_SUCCESS,\n          orders: orders,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionDisplays.GET_ORDERS));\n        dispatch(getOrdersFailed());\n      });\n  };\n};\n","import * as actionTypes from './authActionTypes';\nimport {\n  clearCart,\n  getCart,\n  getCartFromLocalStorage,\n} from '../cart/cartActions';\nimport { getOrders } from '../checkout/checkoutActions';\nimport axios from 'axios';\nimport { secureStorage } from '../../shared/secureStorage';\nimport { setErroredAction } from '../ui/uiActions';\nimport * as actionDisplays from '../ui/actionDisplays';\n\n/* To show loading in UI when authentication action has started */\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\n/* Successfully authenticated user and received token/userid */\nexport const authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: idToken,\n    userId: userId,\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signInFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_IN_FAILED,\n    error: error,\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signUpFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_UP_FAILED,\n    error: error,\n  };\n};\n\n/* Clear user data and cart on sign out */\nexport const signOut = () => {\n  return (dispatch) => {\n    secureStorage.removeItem('idToken');\n    secureStorage.removeItem('expirationTime');\n    secureStorage.removeItem('userId');\n    dispatch(clearCart());\n    dispatch({\n      type: actionTypes.AUTH_SIGNOUT,\n    });\n  };\n};\n\n/* Sign out user when expiration time has been reached */\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(signOut());\n    }, expirationTime * 1000);\n  };\n};\n\n/* Sign in user with email/password.\n   Also get user's cart and orders onced successfully signed in */\nexport const signIn = (email, password) => {\n  return async (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true,\n    };\n    await axios\n      .post(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' +\n          process.env.REACT_APP_FIREBASE_API_KEY,\n        authData\n      )\n      .then((res) => {\n        secureStorage.setItem('idToken', res.data.idToken);\n\n        secureStorage.setItem(\n          'expirationTime',\n          new Date(new Date().getTime() + res.data.expiresIn * 1000)\n        );\n        secureStorage.setItem('userId', res.data.localId);\n\n        dispatch(authSuccess(res.data.idToken, res.data.localId));\n        dispatch(checkAuthTimeout(res.data.expiresIn));\n        dispatch(getCart(res.data.idToken, res.data.localId));\n        dispatch(getOrders(res.data.idToken, res.data.localId));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionDisplays.SIGN_IN));\n        dispatch(signInFailed(err.response.data.error));\n      });\n  };\n};\n\n/* Sign up user with email/password */\nexport const signUp = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true,\n    };\n    axios\n      .post(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' +\n          process.env.REACT_APP_FIREBASE_API_KEY,\n        authData\n      )\n      .then((res) => {\n        dispatch(authSuccess(res.data.idToken, res.data.localId));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionDisplays.SIGN_UP));\n        dispatch(signUpFailed(err.response.data.error));\n      });\n  };\n};\n\n/* Initialize application upon app load */\nexport const initApp = () => {\n  return (dispatch) => {\n    const emptyCart = { items: {}, quantity: 0 };\n    let localCart = null;\n    try {\n      localCart = secureStorage.getItem('cart');\n    } catch (error) {\n      secureStorage.setItem('cart', emptyCart);\n    }\n\n    if (!localCart) {\n      secureStorage.setItem('cart', emptyCart);\n    }\n\n    const idToken = secureStorage.getItem('idToken');\n    let timeToExpire = 0;\n    //if user's session still alive, get user's cart and orders\n    if (idToken) {\n      const expirationTime = secureStorage.getItem('expirationTime');\n      timeToExpire = new Date(expirationTime).getTime() - new Date().getTime();\n      if (timeToExpire > 0) {\n        const userId = secureStorage.getItem('userId');\n        dispatch(authSuccess(idToken, userId));\n        dispatch(checkAuthTimeout(timeToExpire / 1000));\n        dispatch(getCart(idToken, userId));\n        dispatch(getOrders(idToken, userId));\n      }\n    }\n    //if user's session expired, get local storage cart\n    else if (!idToken || timeToExpire <= 0) {\n      dispatch(getCartFromLocalStorage());\n    }\n  };\n};\n","import React from 'react';\nimport './Input.scss';\nimport Dropdown from '../Dropdown/Dropdown';\nimport PropTypes from 'prop-types';\n\n/* Standard input element to be included in forms */\nconst Input = (props) => {\n  let inputElement = null;\n  const inputClasses = ['input__element'];\n  let validationError = null;\n  if (\n    props.invalid &&\n    props.shouldValidate &&\n    props.touched &&\n    props.formSubmitted\n  ) {\n    inputClasses.push('input__invalid');\n    validationError = (\n      <p className='input__error-message'>{props.errorMessage}</p>\n    );\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <Dropdown\n          size={props.elementConfig.size}\n          options={props.elementConfig.options}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n  }\n  return (\n    <div className='input'>\n      <label>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  invalid: PropTypes.bool.isRequired,\n  shouldValidate: PropTypes.object.isRequired,\n  touched: PropTypes.bool,\n  formSubmitted: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  elementConfig: PropTypes.object.isRequired,\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  elementType: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","/* Form validation helper functions */\n\nconst formatPhoneNumber = (digits) => {\n  var cleaned = ('' + digits).replace(/\\D/g, '');\n  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    return '(' + match[1] + ') ' + match[2] + '-' + match[3];\n  }\n  return digits;\n};\n\nexport const handleInputChange = (form, event, inputId) => {\n  const updatedForm = {\n    ...form,\n  };\n\n  const updatedFormElement = {\n    ...updatedForm[inputId],\n  };\n\n  if (updatedFormElement.elementType === 'phonenumber') {\n    updatedFormElement.value = formatPhoneNumber(event.target.value);\n  } else {\n    updatedFormElement.value = event.target.value;\n  }\n  updatedFormElement.valid = checkValidity(\n    updatedFormElement.value,\n    updatedFormElement.validation\n  );\n  updatedFormElement.touched = true;\n  updatedForm[inputId] = updatedFormElement;\n\n  let formIsValid = true;\n  for (let inputId in updatedForm) {\n    formIsValid = updatedForm[inputId].valid && formIsValid;\n  }\n  return { form: updatedForm, formIsValid: formIsValid };\n};\n\nconst checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isPhoneNumber) {\n    const pattern = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","import React, { Component } from 'react';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { handleInputChange } from '../../shared/formValidation.js';\nimport PropTypes from 'prop-types';\n\n/* Standard form component across entire app */\nclass Form extends Component {\n  handleInputChange = (event, inputId) => {\n    const updatedFormData = handleInputChange(this.props.form, event, inputId);\n    this.props.updateForm({\n      form: updatedFormData.form,\n      formIsValid: updatedFormData.formIsValid,\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.props.form) {\n      formElementsArray.push({\n        id: key,\n        config: this.props.form[key],\n      });\n    }\n\n    let form = null;\n    form = (\n      <React.Fragment>\n        {formElementsArray.map((formElement) => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              shouldValidate={formElement.config.validation}\n              invalid={!formElement.config.valid}\n              touched={formElement.config.touched}\n              formSubmitted={this.props.formSubmitted}\n              errorMessage={formElement.config.errorMessage}\n              onChange={(e) => this.handleInputChange(e, formElement.id)}\n            />\n          );\n        })}\n        <div className='form-component__submit'>\n          <Button\n            type={primary}\n            disabled={this.props.formSubmitted && !this.props.formIsValid}\n          >\n            Submit\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n\n    return (\n      <form className='form-component__form' onSubmit={this.props.onSubmit}>\n        {form}\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  form: PropTypes.object.isRequired,\n  formSubmitted: PropTypes.bool.isRequired,\n  formIsValid: PropTypes.bool.isRequired,\n};\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './SignIn.scss';\nimport Button, { secondary } from '../../../components/UI/Button/Button';\nimport { signIn } from '../../../store/auth/authActions';\nimport { connect } from 'react-redux';\nimport { SyncLoader } from 'react-spinners';\nimport { lookupErrorCode } from '../../../shared/util';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../../containers/Form/Form';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Sign in form */\nclass SignIn extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signIn(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  render() {\n    let form = (\n      <Form\n        {...this.state}\n        onSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n    if (this.props.loading) {\n      form = (\n        <div className='spinner'>\n          <SyncLoader />\n        </div>\n      );\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <div className='form-component__error'>\n          <p>{lookupErrorCode(this.props.error.message)}</p>\n        </div>\n      );\n    }\n\n    let redirect = null;\n    if (this.props.isAuthenticated) {\n      if (this.props.location.fromCheckout) {\n        redirect = <Redirect to='/checkout/order-type' />;\n      } else {\n        redirect = <Redirect to='/' />;\n      }\n    }\n\n    return (\n      <div className='form-container'>\n        <div className='form-component'>\n          <h3 className='form-component__title'>\n            Please sign in to your account\n          </h3>\n          {redirect}\n          {errorMessage}\n          {form}\n          <div className='signup'>\n            <Link\n              to={{\n                pathname: '/signup',\n                fromCheckout: this.props.location.fromCheckout,\n              }}\n            >\n              <Button type={secondary}>Sign Up</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.auth.loading,\n  error: state.auth.signInError,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { signIn })(SignIn);\n","import React, { Component } from 'react';\nimport { signOut } from '../../../store/auth/authActions';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n/* Signs current user out */\nclass SignOut extends Component {\n  componentDidMount() {\n    this.props.signOut();\n  }\n\n  render() {\n    return (\n      <Redirect\n        to={{\n          pathname: '/',\n          fromSignOut: true,\n        }}\n      />\n    );\n  }\n}\n\nexport default connect(null, { signOut })(SignOut);\n","import React, { Component } from 'react';\nimport { signUp } from '../../../store/auth/authActions';\nimport { connect } from 'react-redux';\nimport { SyncLoader } from 'react-spinners';\nimport { lookupErrorCode } from '../../../shared/util';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../../containers/Form/Form';\nimport PropTypes from 'prop-types';\n\n/* User sign up form */\nclass SignUp extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signUp(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  render() {\n    let form = (\n      <Form\n        {...this.state}\n        onSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n    if (this.props.loading) {\n      form = (\n        <div className='spinner'>\n          <SyncLoader />\n        </div>\n      );\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <div className='form-component__error'>\n          <p>{lookupErrorCode(this.props.error.message)}</p>\n        </div>\n      );\n    }\n\n    let redirect = null;\n    if (this.props.isAuthenticated) {\n      if (this.props.location.fromCheckout) {\n        redirect = (\n          <Redirect\n            to={{ pathname: '/checkout/order-type', fromSignUp: 'true' }}\n          />\n        );\n      } else {\n        redirect = <Redirect to={{ pathname: '/', fromSignUp: 'true' }} />;\n      }\n    }\n\n    return (\n      <div className='form-container'>\n        <div className='form-component'>\n          <h3 className='form-component__title'>Sign up for an account</h3>\n          {redirect}\n          {errorMessage}\n          {form}\n        </div>\n      </div>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.auth.loading,\n  error: state.auth.signUpError,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { signUp })(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  validateAddress,\n  validateAddressReset,\n} from '../../store/checkout/checkoutActions';\nimport { SyncLoader } from 'react-spinners';\nimport { withRouter } from 'react-router-dom';\nimport Form from '../Form/Form';\nimport PropTypes from 'prop-types';\n\n/* Delivery address form */\nclass AddressForm extends Component {\n  state = {\n    form: {\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Street Address',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      unit: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Apt/Unit #',\n        },\n        validation: {\n          isNumeric: true,\n        },\n        errorMessage: 'Please enter only the Apt/Unit number',\n        value: '',\n        valid: true,\n      },\n      city: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'City',\n        },\n        value: '',\n        validation: {\n          hasLength: 2,\n          required: true,\n        },\n        valid: false,\n      },\n      state: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'State',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      zipcode: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'ZIP Code',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n  constructor(props) {\n    super(props);\n    this.props.validateAddressReset();\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.validateAddress(this.state.form);\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  componentDidUpdate() {\n    if (this.props.addressValid) {\n      this.props.history.push('/checkout');\n    }\n  }\n\n  render() {\n    let errorMessage = null;\n    let form = null;\n    if (this.props.loading) {\n      form = (\n        <div className='spinner'>\n          <SyncLoader />\n        </div>\n      );\n    } else {\n      form = (\n        <Form\n          {...this.state}\n          onSubmit={this.handleSubmit}\n          updateForm={this.updateForm}\n        />\n      );\n    }\n\n    if (this.props.error) {\n      errorMessage = (\n        <div className='form-component__error'>\n          <p>{this.props.error}</p>\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <h4 className='form-component__title'>\n          Please enter your delivery address\n        </h4>\n        {errorMessage}\n        {form}\n      </React.Fragment>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.object,\n  addressValid: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  addressValid: state.checkout.addressValid,\n  error: state.checkout.addressValidationError,\n  loading: state.checkout.validatingAddress,\n});\n\nexport default connect(mapStateToProps, {\n  validateAddress,\n  validateAddressReset,\n})(withRouter(AddressForm));\n","import React, { Component } from 'react';\nimport './OrderType.scss';\nimport { MdDirectionsCar, MdStore } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport AddressForm from '../AddressForm/AddressForm';\nimport Message from '../../components/UI/Message/Message';\nimport SignedUpMessage from '../../components/Messages/SignedUpMessage/SignedUpMessage';\nimport PropTypes from 'prop-types';\n\n/* Options for choosing either carryout or delivery order */\nclass OrderType extends Component {\n  state = {\n    isDelivery: false,\n  };\n\n  handleClick = (event) => {\n    if (event.currentTarget.dataset.type === 'Delivery') {\n      this.setState({ isDelivery: true });\n    } else {\n      this.props.history.push('/checkout');\n    }\n  };\n\n  render() {\n    let message = null;\n    if (this.props.location.fromSignUp) {\n      message = (\n        <Message>\n          <SignedUpMessage />\n        </Message>\n      );\n    }\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/signin',\n            fromCheckout: true,\n          }}\n        />\n      );\n    }\n\n    let form = null;\n\n    if (this.state.isDelivery) {\n      form = <AddressForm />;\n    }\n\n    let orderTypeClassNames = ['order-type'];\n    let deliveryClassNames = ['order-type__type'];\n    let iconClassNames = ['order-type__icon'];\n    if (this.state.isDelivery) {\n      orderTypeClassNames.push('order-type--extended');\n      deliveryClassNames.push('order-type__type--selected');\n      iconClassNames.push('order-type__icon--selected');\n    }\n\n    return (\n      <React.Fragment>\n        {message}\n        <div className='form-container'>\n          <div className='form-component'>\n            <h4 className='form-component__title'>\n              Please choose an order method\n            </h4>\n            <div className={orderTypeClassNames.join(' ')}>\n              <div\n                onClick={this.handleClick}\n                data-type='Delivery'\n                className={deliveryClassNames.join(' ')}\n              >\n                <div className={iconClassNames.join(' ')}>\n                  <MdDirectionsCar />\n                </div>\n                <span className='order-type__description'>Delivery</span>\n              </div>\n              <div\n                onClick={this.handleClick}\n                data-type='Carryout'\n                className='order-type__type'\n              >\n                <div className='order-type__icon'>\n                  <MdStore />\n                </div>\n                <span className='order-type__description'>Carryout</span>\n              </div>\n            </div>\n            {form}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nOrderType.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, null)(OrderType);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Displays delivery address in the correct format */\nconst DeliveryAddress = (props) => {\n  return (\n    <span className='address-container'>\n      <h2>Delivery Address:&nbsp;</h2>\n      <span className='address'>\n        <h3>\n          {props.deliveryAddress.street}, Apt/Unit #\n          {props.deliveryAddress.secondary}\n        </h3>\n        <h3>\n          {props.deliveryAddress.city}, {props.deliveryAddress.state}{' '}\n          {props.deliveryAddress.zipcode}\n        </h3>\n      </span>\n    </span>\n  );\n};\n\nDeliveryAddress.propTypes = {\n  deliveryAddress: PropTypes.objectOf(PropTypes.string),\n};\n\nexport default DeliveryAddress;\n","import React, { Component } from 'react';\nimport CartItems from '../../components/CartItems/CartItems';\nimport {\n  handleEditItem,\n  handleChangeItemQuantity,\n  handleRemoveItem,\n} from '../../shared/util';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { connect } from 'react-redux';\nimport { submitOrder } from '../../store/checkout/checkoutActions';\nimport { emptyCart } from '../../store/cart/cartActions';\nimport { changeItemQuantity, removeItem } from '../../store/cart/cartActions';\nimport { initializePizzaBuilder } from '../../store/pizzaBuilder/pizzaBuilderActions';\nimport { calculateSubTotal, calculateTax } from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport DeliveryAddress from '../../components/DeliveryAddress/DeliveryAddress';\nimport PropTypes from 'prop-types';\n\n/* Order summary and ability to submit an order */\nclass Checkout extends Component {\n  handleSubmitOrder = (total) => {\n    if (this.props.idToken) {\n      this.props.submitOrder(\n        total,\n        this.props.items,\n        this.props.idToken,\n        this.props.userId\n      );\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.submittingOrder &&\n      !this.props.submittingOrder &&\n      !this.props.submitOrderError\n    ) {\n      this.props.history.push({ pathname: '/', fromCheckout: true });\n      this.props.emptyCart(this.props.userId);\n    }\n  }\n\n  render() {\n    const subTotal = calculateSubTotal(this.props.items);\n    const tax = calculateTax(subTotal);\n    const total = (+subTotal + +tax).toFixed(2);\n    let deliveryAddress = null;\n    if (this.props.deliveryAddress) {\n      deliveryAddress = (\n        <DeliveryAddress deliveryAddress={this.props.deliveryAddress} />\n      );\n    }\n\n    let submitOrder = null;\n    if (this.props.submittingOrder) {\n      submitOrder = (\n        <Button type={primary}>\n          <SyncLoader color='white' />\n        </Button>\n      );\n    } else {\n      submitOrder = (\n        <Button onClick={() => this.handleSubmitOrder(total)} type={primary}>\n          Place Order\n        </Button>\n      );\n    }\n\n    let cart = null;\n    if (this.props.loading) {\n      cart = (\n        <div className='item-list__empty'>\n          <SyncLoader />\n        </div>\n      );\n    } else if (Object.keys(this.props.items).length > 0) {\n      cart = (\n        <React.Fragment>\n          <CartItems\n            handleEditItem={(pizza, quantity, itemId) =>\n              handleEditItem(this.props, pizza, quantity, itemId)\n            }\n            handleRemoveItem={(itemId, pizza) =>\n              handleRemoveItem(this.props, itemId, pizza)\n            }\n            handleChangeItemQuantity={(event, itemId) =>\n              handleChangeItemQuantity(this.props, itemId, event.target.value)\n            }\n            checkout\n            items={this.props.items}\n          />\n          <div className='item-list__bottom'>\n            {deliveryAddress}\n            <div className='totals'>\n              <div className='totals__line-items'>\n                <div className='totals__line-item'>\n                  <h3>Subtotal:</h3> <h3>${subTotal}</h3>\n                </div>\n                <div className='totals__line-item'>\n                  <h3>Tax:</h3> <h3>${tax}</h3>\n                </div>\n                <div className='totals__line-item'>\n                  <h3>Total:</h3> <h3>${total}</h3>\n                </div>\n              </div>\n\n              {submitOrder}\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      cart = (\n        <div className='item-list__empty'>\n          <h2>Your cart is empty!</h2>\n        </div>\n      );\n    }\n\n    return (\n      <div className='item-list-container'>\n        <div className='item-list'>\n          <h1 className='item-list__title'>Order Summary</h1>\n          {cart}\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  items: PropTypes.object.isRequired,\n  idToken: PropTypes.string,\n  userId: PropTypes.string,\n  loadingCart: PropTypes.bool,\n  submitOrderError: PropTypes.bool,\n  submittingOrder: PropTypes.bool,\n  deliveryAddress: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  idToken: state.auth.idToken,\n  userId: state.auth.userId,\n  loadingCart: state.cart.loadingCart,\n  submittingOrder: state.checkout.submittingOrder,\n  deliveryAddress: state.checkout.deliveryAddress,\n  submitOrderError: state.checkout.submitOrderError,\n});\n\nexport default connect(mapStateToProps, {\n  submitOrder,\n  emptyCart,\n  removeItem,\n  initializePizzaBuilder,\n  changeItemQuantity,\n})(Checkout);\n","import React, { Component } from 'react';\nimport './Sidebar.scss';\nimport { connect } from 'react-redux';\nimport PizzaMenuItems from '../../components/MenuItems/PizzaMenuItems/PizzaMenuItems';\nimport AccountMenuItems from '../../components/MenuItems/AccountMenuItems/AccountMenuItems';\nimport { closeSidebar } from '../../store/ui/uiActions';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport PropTypes from 'prop-types';\n\n/* Sidebar menu with pizza menu items and account menu items */\nclass Sidebar extends Component {\n  handleClickMenuItem = () => {\n    this.props.closeSidebar();\n  };\n\n  render() {\n    let sidebarContainerClassNames = ['sidebar-container'];\n    let sidebarClassNames = ['sidebar'];\n    if (!this.props.sidebarOpen) {\n      sidebarClassNames.push('sidebar--closed');\n      sidebarContainerClassNames.push('sidebar-container--closed');\n    }\n\n    return (\n      <div\n        onClick={this.handleClickMenuItem}\n        className={sidebarContainerClassNames.join(' ')}\n      >\n        <div className={sidebarClassNames.join(' ')}>\n          <div className='sidebar__menu-items'>\n            <PizzaMenuItems vertical />\n          </div>\n          <div className='sidebar__account'>\n            <NavigationItem vertical to='/cart'>\n              Cart\n            </NavigationItem>\n            <AccountMenuItems vertical />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  sidebarOpen: state.ui.sidebarOpen,\n  isAuthenticated: state.auth.idToken,\n});\n\nexport default connect(mapStateToProps, { closeSidebar })(Sidebar);\n","import React from 'react';\nimport PizzaPreview from '../../components/PizzaPreview/PizzaPreview';\nimport PizzaDescription from '../../components/PizzaDescription/PizzaDescription';\nimport PropTypes from 'prop-types';\n\n/* Represents a single submitted order */\nconst Order = (props) => {\n  return (\n    <div className='item item--order'>\n      <div className='item__pizza'>\n        <div className='item__preview'>\n          <PizzaPreview small pizza={props.pizza} />\n        </div>\n        <div className='item__description'>\n          <PizzaDescription\n            order\n            quantity={props.quantity}\n            pizza={props.pizza}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOrder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n};\n\nexport default Order;\n","import React, { Component } from 'react';\nimport './Orders.scss';\nimport { getOrders } from '../../store/checkout/checkoutActions';\nimport { connect } from 'react-redux';\nimport Order from '../Order/Order';\nimport { getReadableDate } from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport DeliveryAddress from '../../components/DeliveryAddress/DeliveryAddress';\nimport PropTypes from 'prop-types';\n\n/* Contains a list of all submitted orders */\nclass Orders extends Component {\n  render() {\n    let orders = null;\n    if (\n      !this.props.idToken ||\n      this.props.gettingOrders ||\n      this.props.getOrdersError ||\n      Object.entries(this.props.orders).length === 0\n    ) {\n      let ordersContent = null;\n      if (!this.props.idToken) {\n        ordersContent = <h2>Sign in to see your orders!</h2>;\n      } else if (this.props.gettingOrders) {\n        ordersContent = <SyncLoader />;\n      } else if (this.props.getOrdersError) {\n        ordersContent = <h2>Unable to retrieve your orders!</h2>;\n      } else {\n        ordersContent = <h2>You have no orders yet!</h2>;\n      }\n\n      orders = (\n        <div className='item-list-container'>\n          <div className='item-list'>\n            <div className='item-list__title'>\n              <h1>Orders</h1>\n            </div>\n            <div className='item-list__empty'>{ordersContent}</div>\n          </div>\n        </div>\n      );\n    } else {\n      orders = (\n        <React.Fragment>\n          {Object.entries(this.props.orders)\n            .sort(([itemId1, item1], [itemId2, item2]) => {\n              const item1Time = new Date(item1.date).getTime();\n              const item2Time = new Date(item2.date).getTime();\n              return -(item1Time - item2Time);\n            })\n            .map(([orderId, order]) => {\n              let orderType = null;\n\n              if (order.deliveryAddress) {\n                orderType = (\n                  <DeliveryAddress deliveryAddress={order.deliveryAddress} />\n                );\n              } else {\n                orderType = <h2>Carryout Order</h2>;\n              }\n              return (\n                <div key={orderId} className='item-list-container'>\n                  <div className='item-list item-list--order'>\n                    <div className='item-list__title'>\n                      <span className='order__date-address'>\n                        <span className='order__date'>\n                          <h2>Order placed on:&nbsp;</h2>\n                          <h3> {getReadableDate(order.date)}</h3>\n                        </span>\n                        {orderType}\n                      </span>\n\n                      <span className='order__total'>\n                        <h2>Total:&nbsp;</h2>\n                        <h3>${order.total}</h3>\n                      </span>\n                    </div>\n\n                    {Object.entries(order.items).map(([itemId, item]) => {\n                      return (\n                        <Order\n                          key={itemId}\n                          quantity={item.quantity}\n                          pizza={item.pizza}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n        </React.Fragment>\n      );\n    }\n\n    return orders;\n  }\n}\n\nOrders.propTypes = {\n  idToken: PropTypes.string,\n  userId: PropTypes.string,\n  orders: PropTypes.object.isRequired,\n  gettingOrders: PropTypes.bool,\n  getOrdersError: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  idToken: state.auth.idToken,\n  userId: state.auth.userId,\n  orders: state.checkout.orders,\n  gettingOrders: state.checkout.gettingOrders,\n  getOrdersError: state.checkout.getOrdersError,\n});\n\nexport default connect(mapStateToProps, { getOrders })(Orders);\n","import React, { Component } from 'react';\nimport Modal from '../components/UI/Modal/Modal';\nimport { connect } from 'react-redux';\nimport { SIGN_IN, SIGN_UP } from '../store/ui/actionDisplays';\n\n/* Axios error handler HOC */\nconst withErrorHandler = (WrappedComponent, axios) => {\n  class HOComponent extends Component {\n    state = {\n      error: null,\n    };\n\n    componentDidMount() {\n      axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n\n      axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n          return Promise.reject(error);\n        }\n      );\n    }\n\n    handleModalClosed = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      if (\n        this.props.erroredAction === SIGN_IN ||\n        this.props.erroredAction === SIGN_UP\n      ) {\n        return <WrappedComponent {...this.props} />;\n      }\n      let erroredAction = 'perform action';\n      erroredAction = this.props.erroredAction || erroredAction;\n\n      return (\n        <React.Fragment>\n          <Modal\n            error\n            show={this.state.error}\n            modalClosed={this.handleModalClosed}\n          >\n            {this.state.error\n              ? 'Unable to ' + erroredAction + ': ' + this.state.error.message\n              : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    erroredAction: state.ui.erroredAction,\n  });\n\n  return connect(mapStateToProps, null)(HOComponent);\n};\n\nexport default withErrorHandler;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Layout from './components/Layout/Layout/Layout';\nimport Home from './components/PizzaCategories/Home/Home';\nimport Meats from './components/PizzaCategories/Meats/Meats';\nimport Veggies from './components/PizzaCategories/Veggies/Veggies';\nimport Chicken from './components/PizzaCategories/Chicken/Chicken';\nimport PizzaBuilder from './containers/PizzaBuilder/PizzaBuilder';\nimport { Route, Switch } from 'react-router-dom';\nimport Cart from './containers/Cart/Cart';\nimport SignIn from './containers/Auth/SignIn/SignIn';\nimport SignOut from './containers/Auth/SignOut/SignOut';\nimport SignUp from './containers/Auth/SignUp/SignUp';\nimport { initApp } from './store/auth/authActions';\nimport { connect } from 'react-redux';\nimport OrderType from './containers/OrderType/OrderType';\nimport Checkout from './containers/Checkout/Checkout';\nimport Sidebar from './containers/Sidebar/Sidebar';\nimport Orders from './containers/Orders/Orders';\nimport axiosFirebase from './shared/axiosFirebase';\nimport axios from 'axios';\nimport withErrorHandler from './hoc/withErrorHandler';\n\nexport class App extends Component {\n  componentDidMount() {\n    this.props.initApp();\n  }\n\n  render() {\n    return (\n      <Layout data-test='layout'>\n        <PizzaBuilder data-test='pizzaBuilder' />\n        <Sidebar data-test='sidebar' />\n        <Switch>\n          <Route exact path='/checkout' component={Checkout} />\n          <Route path='/checkout/order-type' component={OrderType} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/my-orders' component={Orders} />\n          <Route path='/signout' component={SignOut} />\n          <Route path='/cart' component={Cart} />\n          <Route path='/' exact component={Home} />\n          <Route path='/meats' exact component={Meats} />\n          <Route path='/veggies' exact component={Veggies} />\n          <Route path='/chicken' exact component={Chicken} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null, { initApp })(\n  withErrorHandler(withErrorHandler(App, axiosFirebase), axios)\n);\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/* Scroll to top of page when it is loaded */\nconst ScrollToTop = ({ history, children }) => {\n  useEffect(() => {\n    history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n  }, [history]);\n  return children;\n};\n\nexport default withRouter(ScrollToTop);\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './hoc/ScrollToTop';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_BASE_URL}>\n    <Provider store={store}>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}