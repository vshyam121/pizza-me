{"version":3,"sources":["assets/images/pizza_supreme.png","components/PizzaPreview/PizzaPreview.js","components/PizzaDescription/PizzaDescription.js","assets/images/topping_GreenBellPepper_ML_reg.png","store/store.js","assets/images/pizza_meat_lovers.png","store/pizzaBuilder/pizzaBuilderReducer/pizzaBuilderReducer.js","store/cart/cartReducer/cartReducer.js","store/checkout/checkoutReducer/checkoutReducer.js","store/auth/authReducer/authReducer.js","store/ui/uiReducer/uiReducer.js","store/rootReducer.js","metadata/pizzaProperties.js","metadata/priceMappings.js","shared/util.js","metadata/crustMetadata.js","metadata/meatMetadata.js","metadata/veggiesMetadata.js","store/cart/cartActionTypes.js","store/checkout/checkoutActionTypes.js","metadata/sauceMetadata.js","metadata/crustFlavorMetadata.js","store/auth/authActionTypes.js","metadata/sizeMetadata.js","components/DeliveryAddress/DeliveryAddress.js","assets/images/topping_Pepperoni_ML_reg.png","assets/images/topping_Pepperoni_ML_extra.png","assets/images/icon_topping_Pepperoni.png","assets/images/topping_ItalianSausage_ML_reg.png","assets/images/topping_ItalianSausage_ML_extra.png","assets/images/icon_topping_ItalianSausage.png","assets/images/topping_Ham_ML_reg.png","assets/images/topping_Ham_ML_extra.png","assets/images/icon_topping_Ham.png","assets/images/topping_Bacon_ML_reg.png","assets/images/topping_Bacon_ML_extra.png","assets/images/icon_topping_Bacon.png","assets/images/topping_Chicken_ML_reg.png","assets/images/topping_Chicken_ML_extra.png","assets/images/icon_topping_Chicken.png","assets/images/topping_Beef_ML_reg.png","assets/images/topping_Beef_ML_extra.png","assets/images/icon_topping_Beef.png","assets/images/topping_Pork_ML_reg.png","assets/images/topping_Pork_ML_extra.png","assets/images/icon_topping_Pork.png","assets/images/topping_Mushroom_ML_reg.png","assets/images/topping_Mushroom_ML_extra.png","assets/images/icon_topping_Mushroom.png","assets/images/topping_Spinach_Fresh_ML_reg.png","assets/images/topping_Spinach_Fresh_ML_extra.png","assets/images/icon_topping_Spinach_fresh.png","assets/images/topping_Onion_red_ML_reg.png","assets/images/topping_Onion_red_ML_extra.png","assets/images/icon_topping_Onion_Red.png","assets/images/topping_Olives_black_ML_reg.png","assets/images/topping_Olives_black_ML_extra.png","assets/images/icon_topping_Olive_black.png","assets/images/icon_topping_GreenBellPepper.png","assets/images/topping_BananaPepper_ML_reg.png","assets/images/topping_BananaPepper_ML_extra.png","metadata/cheeseMetadata.js","assets/images/icon_topping_BananaPepper.png","assets/images/topping_Pineapple_ML_reg.png","assets/images/topping_Pineapple_ML_extra.png","assets/images/icon_topping_Pineapple.png","assets/images/topping_Jalepeno_ML_reg.png","assets/images/topping_Jalepeno_ML_extra.png","assets/images/icon_topping_Jalapeno.png","assets/images/topping_Tomato_ML_reg.png","assets/images/topping_Tomato_ML_extra.png","assets/images/icon_topping_Tomato.png","assets/images/icon_sauce_Marinara.png","assets/images/icon_sauce_CreamyGarlicParm.png","assets/images/icon_sauce_BBQ.png","assets/images/icon_sauce_Buffalo.png","assets/images/crust_ht_GarlicButteryBlend.png","assets/images/crust_thin_GarlicButteryBlend.png","assets/images/crust_pan_GarlicButteryBlend.png","assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png","assets/images/crust_ht_ToastedParmesan.png","assets/images/crust_thin_ToastedParmesan.png","assets/images/crust_pan_ToastedParmesan.png","assets/images/icon_finisher_ToastedParm_whole_2017.png","assets/images/icon_finisher_none_whole_2017.png","assets/images/crust_ht_NoFinish.png","assets/images/icon_crust_ht.png","assets/images/crust_thin_NoFinish.png","assets/images/icon_crust_thin.png","assets/images/crust_pan_NoFinish.png","assets/images/icon_crust_pan.png","assets/images/alarm-clock.png","assets/images/pizza_pepperoni.jpg","assets/images/pizza_Pepperoni_Lovers.png","assets/images/pizza_Veggie_Lovers.png","assets/images/pizza_Ultimate_Cheese_Lovers.png","assets/images/pizza_Hawaiian_Chicken.png","assets/images/pizza_Chicken_Bacon_Parmesan.png","assets/images/pizza_Backyard_BBQ_Chicken.png","assets/images/pizza_Buffalo_Chicken.png","assets/images/cheese_mozz_ML.png","shared/secureStorage.js","metadata/comboMetadata.js","store/pizzaBuilder/pizzaBuilderActionTypes.js","assets/images/pizza_cheese.jpg","store/ui/uiActions/uiActions.js","shared/axiosAPI.js","store/cart/cartActions/cartActions.js","shared/actionErrors.js","store/checkout/checkoutActions/checkoutActions.js","store/auth/authActions/authActions.js","components/UI/NavigationItem/NavigationItem.js","components/PizzaMenuItems/PizzaMenuItems.js","components/AccountMenuItems/AccountMenuItems.js","components/UI/Button/Button.js","components/UI/DropdownAlert/DropdownAlert.js","components/CartIcon/CartIcon.js","components/Header/Header.js","containers/HeaderContainer.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler.js","components/Layout/Layout/Layout.js","store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions.js","components/UI/Dropdown/Dropdown.js","components/PizzaBox/PizzaBox.js","containers/PizzaBoxContainer.js","components/UI/Message/Message.js","components/PizzaCategories/Home/Home.js","components/PizzaCategories/Meats/Meats.js","components/PizzaCategories/Veggies/Veggies.js","components/PizzaCategories/Chicken/Chicken.js","components/PizzaBuilder/PizzaBuilderPreview/PizzaBuilderPreview.js","components/PizzaBuilder/PizzaDetails/PizzaDetails.js","components/PizzaBuilder/PizzaBuilderProgress/PizzaBuilderProgress.js","components/PizzaBuilder/BuilderOptions/ImageOptions/ImageOptions.js","components/PizzaBuilder/BuilderOptions/ButtonOptions/ButtonOptions.js","components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder.js","components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder.js","components/PizzaBuilder/BuilderOptions/ToppingOptions/ToppingOptions.js","components/UI/OptionsButton/OptionsButton.js","components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder.js","components/PizzaBuilder/PizzaBuilder.js","containers/PizzaBuilderContainer.js","components/CartItem/CartItem.js","components/CartItems/CartItems.js","components/Cart/Cart.js","containers/CartContainer.js","components/UI/Input/Input.js","shared/formValidation.js","components/UI/Form/Form.js","components/SignIn/SignIn.js","containers/Auth/SignInContainer.js","components/SignUp/SignUp.js","containers/Auth/SignUpContainer.js","components/AddressForm/AddressForm.js","containers/AddressFormContainer.js","components/OrderType/OrderType.js","components/Checkout/Checkout.js","containers/CheckoutContainer.js","components/Sidebar/Sidebar.js","containers/SidebarContainer.js","App.js","hoc/ScrollToTop.js","index.js","store/ui/uiActionTypes.js"],"names":["module","exports","PizzaPreview","className","this","props","small","src","crustMetadataMapping","pizza","CRUST","preview","alt","CRUST_FLAVOR","NO_CRUST_FLAVOR","crustFlavorImageMapping","Cheese","MEATS","map","meat","amount","EXTRA_TOPPING","meatImageMapping","toppingName","previewExtra","imgClassNames","portion","LEFT_HALF","push","RIGHT_HALF","key","join","VEGGIES","veggy","veggiesImageMapping","Component","PizzaDescription","sauce","SAUCE_AMOUNT","SAUCE","NO_SAUCE","cheeseAmount","CHEESE_AMOUNT","NO_CHEESE","crustFlavor","getToppingDescriptions","toppings","toppingDescriptions","forEach","topping","toppingDescription","meats","veggies","length","overallPrice","calculatePrice","quantity","toFixed","pizzaText","cart","order","SIZE","COMBO_NAME","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","initialState","showPizzaBuilder","itemId","REGULAR_CHEESE","HAND_TOSSED","CLASSIC_MARINARA","REGULAR_SAUCE","LARGE","REGULAR","pizzaBuilderReducer","state","action","type","actionTypes","priceType","property","value","cartId","items","numItemsAdded","loadingCartItem","loadingCart","itemIdBeingChanged","cartReducer","orders","validatingAddress","addressValid","addressValidationError","deliveryAddress","loadingOrders","submittingOrder","submitOrderError","getOrdersError","checkoutReducer","error","userId","signInError","signUpError","loadingUser","authReducer","sidebarOpen","erroredAction","uiReducer","combineReducers","pizzaBuilder","checkout","auth","ui","REGULAR_TOPPING","WHOLE","crustPriceMapping","THIN_N_CRISPY","ORIGINAL_PAN","MEDIUM","PERSONAL","sizePriceMapping","COMBO","propertyPriceMapping","EXTRA_SAUCE","EXTRA_CHEESE","basePrice","propertyPrices","meatsPrice","veggiesPrice","getToppingsPrice","toppingType","combo","toppingsPrice","comboIncludesTopping","toppingMapping","find","comboTopping","extraToppingPrice","calculateSubTotal","subTotal","item","price","calculateTax","getCrust","crustDisplayValue","match","exec","getReadableDate","givenDate","date","Date","month","getMonth","day","getDate","year","getFullYear","normalizePizza","getOrCreateLocalCart","emptyCart","pizzaHashMap","localCart","secureStorage","getItem","setItem","crustTypes","HandTossedPreview","icon","HandTossedIcon","ThinNCrispyPreview","ThinNCrispyIcon","OriginalPanPreview","OriginalPanIcon","additionalDisplay","PEPPERONI","ITALIAN_SAUSAGE","HAM","BACON","GRILLED_CHICKEN","BEEF","PORK","PepperoniPreview","ExtraPepperoniPreview","PepperoniIcon","ItalianSausagePreview","ExtraItalianSausagePreview","ItalianSausageIcon","HamPreview","ExtraHamPreview","HamIcon","BaconPreview","ExtraBaconPreview","BaconIcon","GrilledChickenPreview","ExtraGrilledChickenPreview","GrilledChickenIcon","BeefPreview","ExtraBeefPreview","BeefIcon","PorkPreview","ExtraPorkPreview","PorkIcon","MUSHROOMS","RED_ONIONS","OLIVES","BELL_PEPPERS","BANANA_PEPPERS","PINEAPPLE","ROMA_TOMATOES","MushroomsPreview","ExtraMushroomsPreview","MushroomsIcon","RoastedSpinachPreview","ExtraRoastedSpinachPreview","RoastedSpinachIcon","RedOnionsPreview","ExtraRedOnionsPreview","RedOnionsIcon","OlivesPreview","ExtraOlivesPreview","OlivesIcon","BellPeppersPreview","ExtraBellPeppersPreview","BellPeppersIcon","BananaPeppersPreview","ExtraBananaPeppersPreview","BananaPeppersIcon","PineapplePreview","ExtraPineapplePreview","PineappleIcon","JalapenoPeppersPreview","ExtraJalapenoPeppersPreview","JalapenoPeppersIcon","RomaTomatoesPreview","ExtraRomaTomatoesPreview","RomaTomatoesIcon","GET_CART_DONE","SIGN_OUT_CART","ADD_TO_CART","COMBINE_CARTS","SET_CART","CHANGE_CART_ITEM_START","CHANGE_CART_ITEM_FAILED","CHANGE_CART_ITEM_SUCCESS","EMPTY_CART","SUBMIT_ORDER_START","SUBMIT_ORDER_SUCCESS","SUBMIT_ORDER_FAILED","GET_ORDERS_SUCCESS","GET_ORDERS_FAILED","CLEAR_DELIVERY_ADDRESS","VALIDATE_DELIVERY_ADDRESS_START","VALIDATE_DELIVERY_ADDRESS_SUCCESS","VALIDATE_DELIVERY_ADDRESS_FAILED","VALIDATE_DELIVERY_ADDRESS_RESET","BARBECUE","BUFFALO","sauceImageMapping","ClassicMarinaraIcon","CreamyGarlicParmesanIcon","BarbequeIcon","BuffaloIcon","sauceAmounts","sauceAmountMetadataMapping","TOASTED_PARMESAN","crust_flavors","NoCrustFlavorIcon","HTGarlicButteryBlendPreview","ThinGarlicButteryBlendPreview","PanGarlicButteryBlendPreview","GarlicButteryBlendIcon","HTToastedParmesanPreview","ThinToastedParmesanPreview","PanToastedParmesanPreview","ToastedParmesanIcon","AUTH_START","AUTH_SUCCESS","AUTH_TOKEN_FAILED","SIGN_IN_FAILED","SIGN_UP_FAILED","AUTH_SIGNOUT","AUTH_RESET","sizes","DeliveryAddress","secondaryAddress","streetAddress","city","zipcode","cheeseAmounts","cheeseAmountMetadataMapping","CryptoJS","require","SECRET_KEY","process","SecureStorage","localStorage","hash","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","CHEESE","PEPPERONI_PIZZA","MEAT_LOVER","SUPREME","PEPPERONI_LOVER","SUPER_SUPREME","VEGGIE_LOVER","ULTIMATE_CHEESE_LOVER","BUFFALO_CHICKEN","BBQ_CHICKEN","HAWAIIAN_CHICKEN","CHICKEN_BACON_PARMESAN","INIT_PIZZA_BUILDER","CLOSE_PIZZA_BUILDER","SET_PROPERTY","setErroredAction","instance","axios","create","baseURL","withCredentials","interceptors","response","use","Promise","reject","getCart","dispatch","get","then","res","getCombinedCart","post","getCartDone","combineCarts","setCart","getState","_id","Object","values","addToCart","addToLocalCart","pizzaHash","uuidv4","itemsArr","setCartFromLocalCart","changeCartItemStart","changeCartItemSuccess","changeCartItemFailed","changeItemQuantity","quantityPatch","patch","changeItemQuantityInLocalCart","keys","removeItem","removeItemFromLocalCart","saveToLocalCart","currentItem","submitOrderFailed","validateDeliveryAddressFailed","getOrders","authStart","authReset","authSuccess","authData","user","checkAuthTimeout","expires","signInFailed","signUpFailed","signOut","history","pathname","fromSignOut","expirationTime","timeToExpire","getTime","setTimeout","NavigationItem","classNames","vertical","navigationItemContent","children","to","onClick","PizzaMenuItems","AccountMenuItems","accountMenuItems","data-test","isAuthenticated","Button","disabled","React","memo","alertKey","CartIcon","handleClickItemAddedAlert","handleClickCheckout","event","stopPropagation","nextProps","numItemsInCart","itemAdded","location","numItems","fromCheckout","style","height","withRouter","Header","handleClickMenuIcon","toggleSidebar","PizzaTimeLogo","position","connect","Backdrop","show","Modal","useEffect","document","body","overflow","modalClassNames","clicked","modalClosed","withErrorHandler","WrappedComponent","HOComponent","handleModalClosed","setState","requestInterceptor","responseInterceptor","nextState","request","req","eject","excludeActions","message","status","includes","Fragment","axiosAPI","initializePizzaBuilder","Dropdown","onChange","aria-label","label","options","option","PizzaBox","crustOptions","entries","crust","crustMetadata","sizeOptions","pizzaAdd","pizzaName","customize","customizeSecondary","buildPizza","handleClickBuild","handleChangeQuantity","resetState","pizzaType","handleChangeCrust","handleChangeSize","size","imageSrc","PizzaBoxContainer","getInitialState","persist","parseInt","target","Message","display","Home","fromSignUp","CheesePizzaImg","PepperoniPizzaImg","MeatLoversPizzaImg","SupremePizzaImg","Meats","PepperoniLoversPizzaImg","Veggies","VeggieLoversPizzaImg","UltimateCheeseLoverPizzaImg","Chicken","HawaiianChickenPizzaImg","ChickenBaconParmesanImg","BBQChickenPizzaImg","BuffaloChickenPizzaImg","PizzaBuilderPreview","prevProps","PizzaDetails","save","saveToCart","PizzaBuilderProgress","stage","TOPPINGS","CHEESE_SAUCE","SIZE_CRUST","ImageOptions","imageMapping","selected","itemSelected","selectionMetadata","data-value","ButtonOptions","selectionOptions","SizeCrustBuilder","e","proptTypes","PropTypes","object","isRequired","CheeseSauceBuilder","ToppingOptions","onClickAmount","onClickPortion","amountOptions","selection","itemsSelected","checkMark","toppingOptionClasses","portionOptions","data-topping","wholeSelection","leftSelection","rightSelection","OptionsButton","handleButtonClick","selectedOption","optionName","displayName","ToppingsBuilder","handleClickVeggies","handleClickMeats","toppingsBuilder","PizzaBuilder","handleClickProperty","setProperty","currentTarget","dataset","builder","back","next","getActionButton","buttonName","handleClickAction","toggleTopping","setToppingAmount","setToppingPortion","totalBuilder","handleCloseBuilder","cartQuantity","handleClickStage","PizzaBuilderContainer","closePizzaBuilder","toppingIndex","findIndex","splice","selectedTopping","put","CartItem","remove","isEqual","CartItems","Cart","emptyCartMessage","errorMessage","CartContainer","Input","inputElement","inputClasses","validationError","invalid","shouldValidate","touched","formSubmitted","elementType","elementConfig","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","isPhoneNumber","Form","handleChange","inputId","updatedFormData","form","updatedForm","updatedFormElement","trimmedValue","digits","replace","formatPhoneNumber","valid","validation","formIsValid","handleInputChange","updateForm","formElementsArray","id","config","formElement","onSubmit","SignIn","handleSubmit","redirect","SignInContainer","email","placeholder","password","preventDefault","signIn","stateUpdate","err","SignUp","SignUpContainer","signUp","AddressForm","validateDeliveryAddressReset","loading","AddressFormContainer","street","unit","hasLength","validateDeliveryAddress","addressForm","params","secondary","candidates","axiosGeolocation","matchCode","analysis","dpv_match_code","OrderType","isDelivery","handleClick","clearDeliveryAddress","orderTypeClassNames","deliveryClassNames","iconClassNames","data-type","Checkout","handleSubmitOrder","total","submitOrder","tax","color","orderDate","Sidebar","sidebarContainerClassNames","sidebarClassNames","closeSidebar","OrdersContainer","lazy","App","authenticateToken","exact","path","component","CheckoutContainer","listen","scrollTo","createBrowserHistory","basename","ReactDOM","render","getElementById","TOGGLE_SIDEBAR","CLOSE_SIDEBAR","SET_ERRORED_ACTION"],"mappings":"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","file":"static/js/main.ee2065d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza_supreme.d32db457.png\";","import React, { Component } from 'react';\nimport Cheese from '../../assets/images/cheese_mozz_ML.png';\nimport './PizzaPreview.scss';\nimport { crustMetadataMapping } from '../../metadata/crustMetadata';\nimport { meatImageMapping } from '../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../metadata/veggiesMetadata';\nimport { crustFlavorImageMapping } from '../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image with all selected toppings and crust options */\nclass PizzaPreview extends Component {\n  render() {\n    return (\n      <div\n        className={this.props.small ? 'pizza-preview--small' : 'pizza-preview'}\n      >\n        <img\n          className='pizza-preview__property'\n          src={crustMetadataMapping[this.props.pizza[CRUST]].preview}\n          alt={this.props.pizza[CRUST]}\n        />\n        {this.props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR ? (\n          <img\n            className='pizza-preview__property'\n            src={\n              crustFlavorImageMapping[this.props.pizza[CRUST_FLAVOR]][\n                this.props.pizza[CRUST]\n              ].preview\n            }\n            alt={this.props.pizza[CRUST_FLAVOR]}\n          />\n        ) : null}\n        <img className='pizza-preview__property' src={Cheese} alt='Cheese' />\n        {this.props.pizza[MEATS] &&\n          this.props.pizza[MEATS].map((meat) => {\n            let src = null;\n            if (meat.amount === EXTRA_TOPPING) {\n              src = meatImageMapping[meat.toppingName].previewExtra;\n            } else {\n              src = meatImageMapping[meat.toppingName].preview;\n            }\n\n            let imgClassNames = ['pizza-preview__property'];\n            if (meat.portion === LEFT_HALF) {\n              imgClassNames.push('pizza-preview__property--left');\n            } else if (meat.portion === RIGHT_HALF) {\n              imgClassNames.push('pizza-preview__property--right');\n            }\n            return (\n              <img\n                key={meat.toppingName}\n                className={imgClassNames.join(' ')}\n                src={src}\n                alt={meat.toppingName}\n              />\n            );\n          })}\n        {this.props.pizza[VEGGIES] &&\n          this.props.pizza[VEGGIES].map((veggy) => {\n            let src = null;\n            if (veggy.amount === EXTRA_TOPPING) {\n              src = veggiesImageMapping[veggy.toppingName].previewExtra;\n            } else {\n              src = veggiesImageMapping[veggy.toppingName].preview;\n            }\n\n            let imgClassNames = ['pizza-preview__property'];\n            if (veggy.portion === LEFT_HALF) {\n              imgClassNames.push('pizza-preview__property--left');\n            } else if (veggy.portion === RIGHT_HALF) {\n              imgClassNames.push('pizza-preview__property--right');\n            }\n            return (\n              <img\n                key={veggy.toppingName}\n                className={imgClassNames.join(' ')}\n                src={src}\n                alt={veggy.toppingName}\n              />\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nPizzaPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  small: PropTypes.bool,\n};\n\nexport default PizzaPreview;\n","import React from 'react';\nimport './PizzaDescription.scss';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport {\n  SIZE,\n  CRUST,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  COMBO_NAME,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CHEESE } from '../../metadata/cheeseMetadata';\nimport { NO_SAUCE } from '../../metadata/sauceMetadata';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Description of pizza, including size, toppings and other descriptives */\nconst PizzaDescription = (props) => {\n  let sauce = `${props.pizza[SAUCE_AMOUNT]} ${props.pizza[SAUCE]}`;\n  if (props.pizza[SAUCE_AMOUNT] === NO_SAUCE) {\n    sauce = 'No';\n  }\n\n  let cheeseAmount = props.pizza[CHEESE_AMOUNT];\n  if (props.pizza[CHEESE_AMOUNT] === NO_CHEESE) {\n    cheeseAmount = 'No';\n  }\n\n  let crustFlavor = null;\n  if (props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR) {\n    crustFlavor = <span>, {props.pizza[CRUST_FLAVOR]} Crust Flavor</span>;\n  }\n\n  const getToppingDescriptions = (toppings) => {\n    let toppingDescriptions = [];\n    toppings.forEach((topping) => {\n      let toppingDescription = '';\n      if (topping.portion === LEFT_HALF) {\n        toppingDescription += 'Left Half ';\n      } else if (topping.portion === RIGHT_HALF) {\n        toppingDescription += 'Right Half ';\n      }\n\n      if (topping.amount === EXTRA_TOPPING) {\n        toppingDescription += 'Extra ';\n      }\n      toppingDescriptions.push(toppingDescription + topping.toppingName);\n    });\n\n    return toppingDescriptions;\n  };\n\n  let meats = props.pizza[MEATS];\n  let veggies = props.pizza[VEGGIES];\n\n  let toppings = [\n    ...getToppingDescriptions(meats),\n    ...getToppingDescriptions(veggies),\n  ];\n\n  if (toppings.length === 0) {\n    toppings = null;\n  } else {\n    toppings = (\n      <div className='description__toppings'>\n        <h3>Toppings: </h3>\n        <span>{toppings.join(', ')}</span>\n      </div>\n    );\n  }\n\n  const singlePrice = calculatePrice(props.pizza);\n  let overallPrice = (singlePrice * props.quantity).toFixed(2);\n  let quantity = null;\n  let pizzaText = 'Pizza';\n\n  if (props.cart) {\n    overallPrice = (\n      <h2 className='description__price--cart'>${overallPrice}</h2>\n    );\n  } else if (props.order) {\n    overallPrice = (\n      <h3 className='description__price--order'>${overallPrice}</h3>\n    );\n    quantity = `${props.quantity} `;\n    if (props.quantity > 1) {\n      pizzaText = 'Pizzas';\n    }\n  } else {\n    overallPrice = <h2 className='description__price'>${overallPrice}</h2>;\n  }\n\n  return (\n    <div className='description'>\n      <div className='description__title'>\n        <div className='description__pizza'>\n          <h2 className='description__pizza-title'>\n            {quantity} {props.pizza[SIZE]} {props.pizza[CRUST]}{' '}\n            {props.pizza[COMBO_NAME]} {pizzaText}\n          </h2>\n        </div>\n        {overallPrice}\n      </div>\n      <div className='description__details'>\n        <span>{sauce} Sauce, </span>\n        <span>{cheeseAmount} Cheese</span>\n        {crustFlavor}\n        {toppings}\n      </div>\n    </div>\n  );\n};\n\nPizzaDescription.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n  cart: PropTypes.bool,\n  order: PropTypes.bool,\n};\n\nexport default PizzaDescription;\n","module.exports = __webpack_public_path__ + \"static/media/topping_GreenBellPepper_ML_reg.0e00f485.png\";","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nexport const middleware = [thunk];\n\nconst initialState = {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","module.exports = __webpack_public_path__ + \"static/media/pizza_meat_lovers.6888d88d.png\";","import * as actionTypes from '../pizzaBuilderActionTypes';\nimport {\n  CLASSIC_MARINARA,\n  REGULAR_SAUCE,\n} from '../../../metadata/sauceMetadata';\nimport { HAND_TOSSED } from '../../../metadata/crustMetadata';\nimport { LARGE } from '../../../metadata/sizeMetadata';\nimport { REGULAR_CHEESE } from '../../../metadata/cheeseMetadata';\nimport { NO_CRUST_FLAVOR } from '../../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  SIZE,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n} from '../../../metadata/pizzaProperties';\nimport { REGULAR } from '../../../metadata/comboMetadata';\n\nexport const initialState = {\n  showPizzaBuilder: false,\n  itemId: null,\n  pizza: {\n    [CHEESE_AMOUNT]: REGULAR_CHEESE,\n    [COMBO_NAME]: null,\n    [CRUST]: HAND_TOSSED,\n    [CRUST_FLAVOR]: NO_CRUST_FLAVOR,\n    [MEATS]: [],\n    [VEGGIES]: [],\n    [SAUCE]: CLASSIC_MARINARA,\n    [SAUCE_AMOUNT]: REGULAR_SAUCE,\n    [SIZE]: LARGE,\n    priceType: REGULAR,\n  },\n};\n\nconst pizzaBuilderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //initialize and display pizza builder with given pizza and quantity\n    case actionTypes.INIT_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: true,\n        itemId: action.itemId,\n        pizza: {\n          [CHEESE_AMOUNT]: action.pizza[CHEESE_AMOUNT]\n            ? action.pizza[CHEESE_AMOUNT]\n            : REGULAR_CHEESE,\n          [COMBO_NAME]: action.pizza[COMBO_NAME]\n            ? action.pizza[COMBO_NAME]\n            : null,\n          [CRUST]: action.pizza[CRUST],\n          [CRUST_FLAVOR]: action.pizza[CRUST_FLAVOR]\n            ? action.pizza[CRUST_FLAVOR]\n            : NO_CRUST_FLAVOR,\n          [MEATS]: action.pizza[MEATS],\n          [VEGGIES]: action.pizza[VEGGIES],\n          [SAUCE]: action.pizza[SAUCE] ? action.pizza[SAUCE] : CLASSIC_MARINARA,\n          [SAUCE_AMOUNT]: action.pizza[SAUCE_AMOUNT]\n            ? action.pizza[SAUCE_AMOUNT]\n            : REGULAR_SAUCE,\n          [SIZE]: action.pizza[SIZE],\n          priceType: action.pizza.priceType,\n        },\n        quantity: action.quantity,\n      };\n    //close the pizza builder\n    case actionTypes.CLOSE_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: false,\n      };\n    //dynamically set a pizza property\n    case actionTypes.SET_PROPERTY:\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: action.value,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pizzaBuilderReducer;\n","import * as actionTypes from '../cartActionTypes';\n\nexport const initialState = {\n  cartId: null,\n\n  //Array of cart items\n  //Each item contains a pizza object and item quantity\n  items: [],\n\n  //Cart quantity\n  quantity: 0,\n\n  //Number of items just added. For item add notification.\n  numItemsAdded: 0,\n\n  //Loading true when changing a cart item. i.e. update or remove\n  loadingCartItem: false,\n\n  //Loading when getting the cart\n  loadingCart: true,\n\n  //Item id of item being changed to know which item to show loading sign\n  itemIdBeingChanged: null,\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Add item to cart, update pizza to item id hashmap and quantity\n    case actionTypes.ADD_TO_CART:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        numItemsAdded: action.numItemsAdded,\n      };\n    //Combine local storage cart with backend cart\n    case actionTypes.COMBINE_CARTS:\n      return {\n        ...state,\n        cartId: action.cartId,\n        items: action.items,\n        quantity: action.quantity,\n        numItemsAdded: action.numItemsAdded,\n      };\n    //Done loading cart\n    case actionTypes.GET_CART_DONE:\n      return {\n        ...state,\n        loadingCart: false,\n      };\n    //Set cart items\n    case actionTypes.SET_CART:\n      return {\n        ...state,\n        cartId: action.cartId,\n        items: action.items,\n        quantity: action.quantity,\n      };\n    //Change item quantity\n    case actionTypes.CHANGE_CART_ITEM_SUCCESS:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        loadingCartItem: false,\n      };\n    //Set loading before changing cart item\n    case actionTypes.CHANGE_CART_ITEM_START:\n      return {\n        ...state,\n        loadingCartItem: true,\n        itemIdBeingChanged: action.itemIdBeingChanged,\n      };\n    //Failed to change cart item, done loading\n    case actionTypes.CHANGE_CART_ITEM_FAILED:\n      return {\n        ...state,\n        loadingCartItem: false,\n        itemIdBeingChanged: null,\n      };\n    //Empty cart and all metadata\n    case actionTypes.EMPTY_CART:\n      return {\n        ...state,\n        items: [],\n        quantity: 0,\n        numItemsAdded: 0,\n      };\n    //Clear cart after signing out\n    case actionTypes.SIGN_OUT_CART:\n      return {\n        ...state,\n        cartId: null,\n        items: [],\n        quantity: 0,\n        numItemsAdded: 0,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import * as actionTypes from '../checkoutActionTypes';\n\nexport const initialState = {\n  orders: [],\n  validatingAddress: false,\n  addressValid: false,\n  addressValidationError: null,\n  deliveryAddress: null,\n  loadingOrders: true,\n  submittingOrder: false,\n  submitOrderError: false,\n  getOrdersError: false,\n};\n\nconst checkoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Set loading for submit order\n    case actionTypes.SUBMIT_ORDER_START:\n      return {\n        ...state,\n        submittingOrder: true,\n        submitOrderError: false,\n      };\n    //Add submitted order to list of orders\n    case actionTypes.SUBMIT_ORDER_SUCCESS:\n      const orders = [...state.orders, action.order];\n      return {\n        ...state,\n        orders: orders,\n        submittingOrder: false,\n      };\n    //Finish loading when submit order failed\n    case actionTypes.SUBMIT_ORDER_FAILED:\n      return {\n        ...state,\n        submittingOrder: false,\n        submitOrderError: true,\n      };\n    //Successfully got orders, set orders\n    case actionTypes.GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        loadingOrders: false,\n        orders: action.orders,\n      };\n    //Finish loading when getting orders failed\n    case actionTypes.GET_ORDERS_FAILED:\n      return {\n        ...state,\n        loadingOrders: false,\n        getOrdersError: true,\n      };\n    //Successfully validated address, stop loading and set address\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        addressValid: true,\n        addressValidationError: null,\n        validatingAddress: false,\n        deliveryAddress: action.deliveryAddress,\n      };\n    //Finish loading when validating adddress failed\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_FAILED:\n      return {\n        ...state,\n        addressValid: false,\n        addressValidationError: action.error,\n        validatingAddress: false,\n      };\n    //Set loading\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_START:\n      return {\n        ...state,\n        validatingAddress: true,\n        addressValidationError: null,\n      };\n    //Reset all address validation properties\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_RESET:\n      return {\n        ...state,\n        validatingAddress: false,\n        addressValid: false,\n        addressValidationError: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default checkoutReducer;\n","import * as actionTypes from '../authActionTypes';\n\nexport const initialState = {\n  userId: null,\n  signInError: null,\n  signUpError: null,\n  loadingUser: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Set loading to true and reset error\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        signInError: null,\n        signUpError: null,\n        loadingUser: true,\n      };\n    case actionTypes.AUTH_TOKEN_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n      };\n    //Reset auth errors\n    case actionTypes.AUTH_RESET:\n      return {\n        ...state,\n        signInError: null,\n        signUpError: null,\n      };\n    //Successfully authenticated\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        loadingUser: false,\n        userId: action.userId,\n        signInError: null,\n      };\n    //Set error and reset loading when sign in failed\n    case actionTypes.SIGN_IN_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n        signInError: action.error,\n      };\n    //Set error and reset loading when sign up failed\n    case actionTypes.SIGN_UP_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n        signUpError: action.error,\n      };\n    //Reset user data on signout\n    case actionTypes.AUTH_SIGNOUT:\n      return {\n        ...state,\n        userId: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from '../uiActionTypes';\n\nexport const initialState = {\n  sidebarOpen: false,\n  erroredAction: null,\n};\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // open/close sidebar\n    case actionTypes.TOGGLE_SIDEBAR:\n      let sidebarOpen = state.sidebarOpen;\n      return {\n        ...state,\n        sidebarOpen: !sidebarOpen,\n      };\n    //close sidebar\n    case actionTypes.CLOSE_SIDEBAR:\n      return {\n        ...state,\n        sidebarOpen: false,\n      };\n    //set action that produced the error\n    case actionTypes.SET_ERRORED_ACTION:\n      return {\n        ...state,\n        erroredAction: action.erroredAction,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default uiReducer;\n","import { combineReducers } from 'redux';\nimport pizzaBuilderReducer from './pizzaBuilder/pizzaBuilderReducer/pizzaBuilderReducer';\nimport cartReducer from './cart/cartReducer/cartReducer';\nimport checkoutReducer from './checkout/checkoutReducer/checkoutReducer';\nimport authReducer from './auth/authReducer/authReducer';\nimport uiReducer from './ui/uiReducer/uiReducer';\n\nexport default combineReducers({\n  pizzaBuilder: pizzaBuilderReducer,\n  cart: cartReducer,\n  checkout: checkoutReducer,\n  auth: authReducer,\n  ui: uiReducer,\n});\n","/* Standard key names used to store data in app */\nexport const CRUST = 'crust';\nexport const SIZE = 'size';\nexport const SAUCE = 'sauce';\nexport const SAUCE_AMOUNT = 'sauceAmount';\nexport const CHEESE_AMOUNT = 'cheeseAmount';\nexport const CRUST_FLAVOR = 'crustFlavor';\nexport const MEATS = 'meats';\nexport const VEGGIES = 'veggies';\nexport const COMBO_NAME = 'comboName';\n\n/* Standard value names used for topping related data */\nexport const EXTRA_TOPPING = 'Extra Topping';\nexport const REGULAR_TOPPING = 'Regular Topping';\nexport const WHOLE = 'Whole';\nexport const LEFT_HALF = 'Left Half';\nexport const RIGHT_HALF = 'Right Half';\n","import { LARGE, MEDIUM, PERSONAL } from './sizeMetadata';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\nimport { REGULAR, COMBO } from './comboMetadata';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { EXTRA_SAUCE } from './sauceMetadata';\n\n/* Holds price mappings for various pizza properties */\nexport const crustPriceMapping = {\n  [LARGE]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [MEDIUM]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [PERSONAL]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n};\n\nexport const sizePriceMapping = {\n  [LARGE]: {\n    [REGULAR]: 13.99,\n    [COMBO]: 18.99,\n  },\n  [MEDIUM]: {\n    [REGULAR]: 11.99,\n    [COMBO]: 15.99,\n  },\n  [PERSONAL]: {\n    [REGULAR]: 9.99,\n    [COMBO]: 11.99,\n  },\n};\n\nexport const propertyPriceMapping = {\n  [EXTRA_SAUCE]: 1.0,\n  [EXTRA_CHEESE]: 1.0,\n};\n\nexport const toppingPrice = 1.5;\nexport const extraToppingPrice = 2.5;\n","import {\n  SIZE,\n  CRUST,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n  CHEESE_AMOUNT,\n  SAUCE_AMOUNT,\n  EXTRA_TOPPING,\n  CRUST_FLAVOR,\n  SAUCE,\n} from '../metadata/pizzaProperties';\nimport { COMBO, toppingMapping } from '../metadata/comboMetadata';\nimport {\n  sizePriceMapping,\n  crustPriceMapping,\n  toppingPrice,\n  extraToppingPrice,\n  propertyPriceMapping,\n} from '../metadata/priceMappings';\nimport checkPropTypes from 'check-prop-types';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from '../store/rootReducer';\nimport { middleware } from '../store/store';\nimport { CLASSIC_MARINARA, REGULAR_SAUCE } from '../metadata/sauceMetadata';\nimport { REGULAR_CHEESE } from '../metadata/cheeseMetadata';\nimport { NO_CRUST_FLAVOR } from '../metadata/crustFlavorMetadata';\nimport { secureStorage } from '../shared/secureStorage';\n\n/* Utility functions used across multiple components/containers */\n\n/* calculate price of a pizza, given its size, crust, toppings and various other properties */\nexport const calculatePrice = (pizza) => {\n  const basePrice =\n    sizePriceMapping[pizza[SIZE]][pizza.priceType] +\n    crustPriceMapping[pizza[SIZE]][pizza[CRUST]];\n\n  let propertyPrices = propertyPriceMapping[pizza[SAUCE_AMOUNT]] || 0;\n  propertyPrices += propertyPriceMapping[pizza[CHEESE_AMOUNT]] || 0;\n\n  let meatsPrice = 0;\n  let veggiesPrice = 0;\n\n  if (pizza.priceType !== COMBO) {\n    meatsPrice += getToppingsPrice(pizza, MEATS, false);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, false);\n  } else {\n    meatsPrice += getToppingsPrice(pizza, MEATS, true);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, true);\n  }\n\n  return (basePrice + meatsPrice + veggiesPrice + propertyPrices).toFixed(2);\n};\n\n/* Get price of only the toppings */\nconst getToppingsPrice = (pizza, toppingType, combo) => {\n  let toppings = pizza[toppingType];\n  let toppingsPrice = 0;\n  toppings &&\n    toppings.forEach((topping) => {\n      const comboIncludesTopping =\n        combo &&\n        toppingMapping[pizza[COMBO_NAME]][toppingType].find(\n          (comboTopping) => comboTopping === topping.topping\n        );\n\n      if (!comboIncludesTopping || !combo) {\n        if (topping.amount === EXTRA_TOPPING) {\n          toppingsPrice += extraToppingPrice;\n        } else {\n          toppingsPrice += toppingPrice;\n        }\n      } else if (comboIncludesTopping && topping.amount === EXTRA_TOPPING) {\n        toppingsPrice += extraToppingPrice - toppingPrice;\n      }\n    });\n\n  return toppingsPrice;\n};\n\n/* Calculate the sum of the price of all pizzas in cart before tax */\nexport const calculateSubTotal = (items) => {\n  let subTotal = 0;\n  items.forEach((item) => {\n    const price = calculatePrice(item.pizza);\n    subTotal += price * item.quantity;\n  });\n  return subTotal.toFixed(2);\n};\n\n/* Calculate the tax */\nexport const calculateTax = (subTotal) => {\n  return (subTotal * 0.1).toFixed(2);\n};\n\n/* Get only crust value from crust display value which includes price */\nexport const getCrust = (crustDisplayValue) => {\n  const regexp = /(.*) (\\+\\$.*)/g;\n  const match = regexp.exec(crustDisplayValue);\n  return match ? match[1] : crustDisplayValue;\n};\n\n/* Get display date */\nexport const getReadableDate = (givenDate) => {\n  const monthArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const date = new Date(givenDate);\n  const month = monthArray[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return `${month} ${day}, ${year}`;\n};\n\n/* Find an element by data-test attribute for unit tests */\nexport const findByTestAttr = (component, attr) => {\n  const wrapper = component.find(`[data-test=\"${attr}\"]`);\n  return wrapper;\n};\n\n/* Find an element by element type for unit tests */\nexport const findByElementType = (component, elementType) => {\n  const wrapper = component.find(`${elementType}`);\n  return wrapper;\n};\n\n/* Validate prop types for a component */\nexport const checkProps = (component, expectedProps) => {\n  const propsErr = checkPropTypes(\n    component.propTypes,\n    expectedProps,\n    'props',\n    component.name\n  );\n  return propsErr;\n};\n\n/* Create a test store for unit tests */\nexport const testStore = (initialState) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n  );\n  return store;\n};\n\n/* Normalize the pizza object before adding to cart.\n   Important for making sure hashes of two different \n   pizzas with the same attributes are equal */\nexport const normalizePizza = (pizza) => {\n  //If coming from pizza box, some attributes won't be set\n  if (!pizza[SAUCE]) {\n    pizza[SAUCE] = CLASSIC_MARINARA;\n  }\n  if (!pizza[SAUCE_AMOUNT]) {\n    pizza[SAUCE_AMOUNT] = REGULAR_SAUCE;\n  }\n  if (!pizza[CHEESE_AMOUNT]) {\n    pizza[CHEESE_AMOUNT] = REGULAR_CHEESE;\n  }\n  if (!pizza[CRUST_FLAVOR]) {\n    pizza[CRUST_FLAVOR] = NO_CRUST_FLAVOR;\n  }\n\n  return {\n    [CHEESE_AMOUNT]: pizza[CHEESE_AMOUNT],\n    [COMBO_NAME]: pizza[COMBO_NAME],\n    [CRUST]: pizza[CRUST],\n    [CRUST_FLAVOR]: pizza[CRUST_FLAVOR],\n    priceType: pizza.priceType,\n    [MEATS]: pizza[MEATS],\n    [SAUCE]: pizza[SAUCE],\n    [SAUCE_AMOUNT]: pizza[SAUCE_AMOUNT],\n    [SIZE]: pizza[SIZE],\n    [VEGGIES]: pizza[VEGGIES],\n  };\n};\n\nexport const getOrCreateLocalCart = () => {\n  const emptyCart = { items: {}, pizzaHashMap: {}, quantity: 0 };\n  let localCart = null;\n  try {\n    localCart = secureStorage.getItem('cart');\n  } catch (error) {\n    secureStorage.setItem('cart', emptyCart);\n    localCart = emptyCart;\n  }\n\n  if (!localCart) {\n    secureStorage.setItem('cart', emptyCart);\n    localCart = emptyCart;\n  }\n  return localCart;\n};\n","import HandTossedPreview from '../assets/images/crust_ht_NoFinish.png';\nimport HandTossedIcon from '../assets/images/icon_crust_ht.png';\nimport ThinNCrispyPreview from '../assets/images/crust_thin_NoFinish.png';\nimport ThinNCrispyIcon from '../assets/images/icon_crust_thin.png';\nimport OriginalPanPreview from '../assets/images/crust_pan_NoFinish.png';\nimport OriginalPanIcon from '../assets/images/icon_crust_pan.png';\n\n/* All metadata related to the display of crust options */\n\nexport const HAND_TOSSED = 'Hand Tossed';\nexport const THIN_N_CRISPY = \"Thin 'N Crispy\";\nexport const ORIGINAL_PAN = 'Original Pan';\n\nexport const crustTypes = [HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN];\n\nexport const crustMetadataMapping = {\n  [HAND_TOSSED]: {\n    preview: HandTossedPreview,\n    icon: HandTossedIcon,\n  },\n  [THIN_N_CRISPY]: {\n    preview: ThinNCrispyPreview,\n    icon: ThinNCrispyIcon,\n  },\n  [ORIGINAL_PAN]: {\n    preview: OriginalPanPreview,\n    icon: OriginalPanIcon,\n    additionalDisplay: '+$2.00',\n  },\n};\n","import PepperoniPreview from '../assets/images/topping_Pepperoni_ML_reg.png';\nimport ExtraPepperoniPreview from '../assets/images/topping_Pepperoni_ML_extra.png';\nimport PepperoniIcon from '../assets/images/icon_topping_Pepperoni.png';\nimport ItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_reg.png';\nimport ExtraItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_extra.png';\nimport ItalianSausageIcon from '../assets/images/icon_topping_ItalianSausage.png';\nimport HamPreview from '../assets/images/topping_Ham_ML_reg.png';\nimport ExtraHamPreview from '../assets/images/topping_Ham_ML_extra.png';\nimport HamIcon from '../assets/images/icon_topping_Ham.png';\nimport BaconPreview from '../assets/images/topping_Bacon_ML_reg.png';\nimport ExtraBaconPreview from '../assets/images/topping_Bacon_ML_extra.png';\nimport BaconIcon from '../assets/images/icon_topping_Bacon.png';\nimport GrilledChickenPreview from '../assets/images/topping_Chicken_ML_reg.png';\nimport ExtraGrilledChickenPreview from '../assets/images/topping_Chicken_ML_extra.png';\nimport GrilledChickenIcon from '../assets/images/icon_topping_Chicken.png';\nimport BeefPreview from '../assets/images/topping_Beef_ML_reg.png';\nimport ExtraBeefPreview from '../assets/images/topping_Beef_ML_extra.png';\nimport BeefIcon from '../assets/images/icon_topping_Beef.png';\nimport PorkPreview from '../assets/images/topping_Pork_ML_reg.png';\nimport ExtraPorkPreview from '../assets/images/topping_Pork_ML_extra.png';\nimport PorkIcon from '../assets/images/icon_topping_Pork.png';\n\n/* All metadata related to the display of meat options */\n\nexport const PEPPERONI = 'Pepperoni';\nexport const ITALIAN_SAUSAGE = 'Italian Sausage';\nexport const HAM = 'Ham';\nexport const BACON = 'Bacon';\nexport const GRILLED_CHICKEN = 'Grilled Chicken';\nexport const BEEF = 'Beef';\nexport const PORK = 'Pork';\n\nexport const meatImageMapping = {\n  [PEPPERONI]: {\n    preview: PepperoniPreview,\n    previewExtra: ExtraPepperoniPreview,\n    icon: PepperoniIcon,\n  },\n  [ITALIAN_SAUSAGE]: {\n    preview: ItalianSausagePreview,\n    previewExtra: ExtraItalianSausagePreview,\n    icon: ItalianSausageIcon,\n  },\n  [HAM]: {\n    preview: HamPreview,\n    previewExtra: ExtraHamPreview,\n    icon: HamIcon,\n  },\n  [BACON]: {\n    preview: BaconPreview,\n    previewExtra: ExtraBaconPreview,\n    icon: BaconIcon,\n  },\n  [GRILLED_CHICKEN]: {\n    preview: GrilledChickenPreview,\n    previewExtra: ExtraGrilledChickenPreview,\n    icon: GrilledChickenIcon,\n  },\n  [BEEF]: {\n    preview: BeefPreview,\n    previewExtra: ExtraBeefPreview,\n    icon: BeefIcon,\n  },\n  [PORK]: {\n    preview: PorkPreview,\n    previewExtra: ExtraPorkPreview,\n    icon: PorkIcon,\n  },\n};\n","import MushroomsPreview from '../assets/images/topping_Mushroom_ML_reg.png';\nimport ExtraMushroomsPreview from '../assets/images/topping_Mushroom_ML_extra.png';\nimport MushroomsIcon from '../assets/images/icon_topping_Mushroom.png';\nimport RoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_reg.png';\nimport ExtraRoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_extra.png';\nimport RoastedSpinachIcon from '../assets/images/icon_topping_Spinach_fresh.png';\nimport RedOnionsPreview from '../assets/images/topping_Onion_red_ML_reg.png';\nimport ExtraRedOnionsPreview from '../assets/images/topping_Onion_red_ML_extra.png';\nimport RedOnionsIcon from '../assets/images/icon_topping_Onion_Red.png';\nimport OlivesPreview from '../assets/images/topping_Olives_black_ML_reg.png';\nimport ExtraOlivesPreview from '../assets/images/topping_Olives_black_ML_extra.png';\nimport OlivesIcon from '../assets/images/icon_topping_Olive_black.png';\nimport BellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport ExtraBellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport BellPeppersIcon from '../assets/images/icon_topping_GreenBellPepper.png';\nimport BananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_reg.png';\nimport ExtraBananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_extra.png';\nimport BananaPeppersIcon from '../assets/images/icon_topping_BananaPepper.png';\nimport PineapplePreview from '../assets/images/topping_Pineapple_ML_reg.png';\nimport ExtraPineapplePreview from '../assets/images/topping_Pineapple_ML_extra.png';\nimport PineappleIcon from '../assets/images/icon_topping_Pineapple.png';\nimport JalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_reg.png';\nimport ExtraJalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_extra.png';\nimport JalapenoPeppersIcon from '../assets/images/icon_topping_Jalapeno.png';\nimport RomaTomatoesPreview from '../assets/images/topping_Tomato_ML_reg.png';\nimport ExtraRomaTomatoesPreview from '../assets/images/topping_Tomato_ML_extra.png';\nimport RomaTomatoesIcon from '../assets/images/icon_topping_Tomato.png';\n\n/* All metadata related to the display of veggy options */\n\nexport const MUSHROOMS = 'Mushrooms';\nexport const ROASTED_SPINACH = 'Roasted Spinach';\nexport const RED_ONIONS = 'Red Onions';\nexport const OLIVES = 'Mediterranean Black Olives';\nexport const BELL_PEPPERS = 'Green Bell Peppers';\nexport const BANANA_PEPPERS = 'Banana Peppers';\nexport const PINEAPPLE = 'Pineapple';\nexport const JALAPENO_PEPPERS = 'Jalapeno Peppers';\nexport const ROMA_TOMATOES = 'Roma Tomatoes';\n\nexport const veggiesImageMapping = {\n  [MUSHROOMS]: {\n    preview: MushroomsPreview,\n    previewExtra: ExtraMushroomsPreview,\n    icon: MushroomsIcon,\n  },\n  [ROASTED_SPINACH]: {\n    preview: RoastedSpinachPreview,\n    previewExtra: ExtraRoastedSpinachPreview,\n    icon: RoastedSpinachIcon,\n  },\n  [RED_ONIONS]: {\n    preview: RedOnionsPreview,\n    previewExtra: ExtraRedOnionsPreview,\n    icon: RedOnionsIcon,\n  },\n  [OLIVES]: {\n    preview: OlivesPreview,\n    previewExtra: ExtraOlivesPreview,\n    icon: OlivesIcon,\n  },\n  [BELL_PEPPERS]: {\n    preview: BellPeppersPreview,\n    previewExtra: ExtraBellPeppersPreview,\n    icon: BellPeppersIcon,\n  },\n  [BANANA_PEPPERS]: {\n    preview: BananaPeppersPreview,\n    previewExtra: ExtraBananaPeppersPreview,\n    icon: BananaPeppersIcon,\n  },\n  [PINEAPPLE]: {\n    preview: PineapplePreview,\n    previewExtra: ExtraPineapplePreview,\n    icon: PineappleIcon,\n  },\n  [JALAPENO_PEPPERS]: {\n    preview: JalapenoPeppersPreview,\n    previewExtra: ExtraJalapenoPeppersPreview,\n    icon: JalapenoPeppersIcon,\n  },\n  [ROMA_TOMATOES]: {\n    preview: RomaTomatoesPreview,\n    previewExtra: ExtraRomaTomatoesPreview,\n    icon: RomaTomatoesIcon,\n  },\n};\n","export const CREATE_CART = 'CREATE_CART';\nexport const GET_CART_START = 'GET_CART_START';\nexport const GET_CART_DONE = 'GET_CART_DONE';\nexport const SIGN_OUT_CART = 'SIGNOUT_CART';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const COMBINE_CARTS = 'COMBINE_CARTS';\nexport const SET_CART = 'SET_CART';\nexport const CHANGE_ITEM_QUANTITY = 'CHANGE_ITEM_QUANTITY';\nexport const INCREASE_ITEM_QUANTITY = 'INCREASE_ITEM_QUANTITY';\nexport const CHANGE_CART_ITEM_START = 'CHANGE_CART_ITEM_START';\nexport const REMOVE_ITEM_SUCCESS = 'REMOVE_ITEM_SUCCESS';\nexport const CHANGE_CART_ITEM_FAILED = 'CHANGE_CART_ITEM_FAILED';\nexport const CHANGE_CART_ITEM_SUCCESS = 'CHANGE_CART_ITEM_SUCCESS';\nexport const SAVE_TO_CART = 'SAVE_TO_CART';\nexport const EMPTY_CART = 'EMPTY_CART';\nexport const SET_ERRORED_ACTION = 'ERRORED_ACTION';\n","export const SUBMIT_ORDER_START = 'SUBMIT_ORDER_START';\nexport const SUBMIT_ORDER_SUCCESS = 'SUBMIT_ORDER_SUCCESS';\nexport const SUBMIT_ORDER_FAILED = 'SUBMIT_ORDER_FAILED';\nexport const GET_ORDERS = 'GET_ORDERS';\nexport const GET_ORDERS_START = 'GET_ORDERS_START';\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS';\nexport const GET_ORDERS_FAILED = 'GET_ORDERS_FAILED';\nexport const CLEAR_DELIVERY_ADDRESS = 'CLEAR_DELIVERY_ADDRESS';\nexport const VALIDATE_DELIVERY_ADDRESS_START =\n  'VALIDATE_DELIVERY_ADDRESS_START';\nexport const VALIDATE_DELIVERY_ADDRESS_SUCCESS =\n  'VALIDATE_DELIVERY_ADDRESS_SUCCESS';\nexport const VALIDATE_DELIVERY_ADDRESS_FAILED =\n  'VALIDATE_DELIVERY_ADDRESS_FAILED';\nexport const VALIDATE_DELIVERY_ADDRESS_RESET =\n  'VALIDATE_DELIVERY_ADDRESS_RESET';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n","import ClassicMarinaraIcon from '../assets/images/icon_sauce_Marinara.png';\nimport CreamyGarlicParmesanIcon from '../assets/images/icon_sauce_CreamyGarlicParm.png';\nimport BarbequeIcon from '../assets/images/icon_sauce_BBQ.png';\nimport BuffaloIcon from '../assets/images/icon_sauce_Buffalo.png';\n\n/* All metadata related to the display of sauce options */\n\nexport const CLASSIC_MARINARA = 'Classic Marinara';\nexport const CREAMY_GARLIC_PARMESAN = 'Creamy Garlic Parmesan';\nexport const BARBECUE = 'Barbeque';\nexport const BUFFALO = 'Buffalo';\n\nexport const sauceImageMapping = {\n  [CLASSIC_MARINARA]: {\n    icon: ClassicMarinaraIcon,\n  },\n  [CREAMY_GARLIC_PARMESAN]: {\n    icon: CreamyGarlicParmesanIcon,\n  },\n  [BARBECUE]: {\n    icon: BarbequeIcon,\n  },\n  [BUFFALO]: {\n    icon: BuffaloIcon,\n  },\n};\n\nexport const REGULAR_SAUCE = 'Regular';\nexport const EXTRA_SAUCE = 'Extra';\nexport const LIGHT_SAUCE = 'Light';\nexport const NO_SAUCE = 'None';\n\nexport const sauceAmounts = [EXTRA_SAUCE, REGULAR_SAUCE, LIGHT_SAUCE, NO_SAUCE];\n\nexport const sauceAmountMetadataMapping = {\n  [EXTRA_SAUCE]: {\n    additionalDisplay: '+$1.00',\n  },\n};\n","import HTGarlicButteryBlendPreview from '../assets/images/crust_ht_GarlicButteryBlend.png';\nimport ThinGarlicButteryBlendPreview from '../assets/images/crust_thin_GarlicButteryBlend.png';\nimport PanGarlicButteryBlendPreview from '../assets/images/crust_pan_GarlicButteryBlend.png';\nimport GarlicButteryBlendIcon from '../assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png';\nimport HTToastedParmesanPreview from '../assets/images/crust_ht_ToastedParmesan.png';\nimport ThinToastedParmesanPreview from '../assets/images/crust_thin_ToastedParmesan.png';\nimport PanToastedParmesanPreview from '../assets/images/crust_pan_ToastedParmesan.png';\nimport ToastedParmesanIcon from '../assets/images/icon_finisher_ToastedParm_whole_2017.png';\nimport NoCrustFlavorIcon from '../assets/images/icon_finisher_none_whole_2017.png';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\n\n/* All metadata related to the display of crust flavor options */\n\nexport const NO_CRUST_FLAVOR = 'No Crust Flavor';\nexport const GARLIC_BUTTERY_BLEND = 'Garlic Buttery Blend';\nexport const TOASTED_PARMESAN = 'Toasted Parmesan';\n\nexport const crust_flavors = [\n  NO_CRUST_FLAVOR,\n  GARLIC_BUTTERY_BLEND,\n  TOASTED_PARMESAN,\n];\n\nexport const crustFlavorImageMapping = {\n  [NO_CRUST_FLAVOR]: {\n    icon: NoCrustFlavorIcon,\n  },\n  [GARLIC_BUTTERY_BLEND]: {\n    [HAND_TOSSED]: {\n      preview: HTGarlicButteryBlendPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinGarlicButteryBlendPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanGarlicButteryBlendPreview,\n    },\n    icon: GarlicButteryBlendIcon,\n  },\n  [TOASTED_PARMESAN]: {\n    [HAND_TOSSED]: {\n      preview: HTToastedParmesanPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinToastedParmesanPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanToastedParmesanPreview,\n    },\n    icon: ToastedParmesanIcon,\n  },\n};\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_TOKEN_FAILED = 'AUTH_TOKEN_FAILED';\nexport const SIGN_IN_FAILED = 'SIGN_IN_FAILED';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const AUTH_SIGNOUT = 'AUTH_SIGNOUT';\nexport const AUTH_RESET = 'AUTH_RESET';\n","/* All metadata related to the display of size options */\n\nexport const LARGE = 'Large';\nexport const MEDIUM = 'Medium';\nexport const PERSONAL = 'Personal';\n\nexport const sizes = [LARGE, MEDIUM, PERSONAL];\n","import React from 'react';\nimport './DeliveryAddress.scss';\nimport PropTypes from 'prop-types';\n\n/* Displays delivery address in the correct format */\nconst DeliveryAddress = (props) => {\n  let secondaryAddress = null;\n  if (props.deliveryAddress.secondaryAddress) {\n    secondaryAddress = (\n      <h4> Apt/Unit #{props.deliveryAddress.secondaryAddress}</h4>\n    );\n  }\n  return (\n    <div className='address-container'>\n      <h2>Delivery Address:</h2>\n      <div className='address'>\n        <h4>{props.deliveryAddress.streetAddress}</h4>\n        {secondaryAddress}\n        <h4>\n          {props.deliveryAddress.city}, {props.deliveryAddress.state}{' '}\n          {props.deliveryAddress.zipcode}\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nDeliveryAddress.propTypes = {\n  deliveryAddress: PropTypes.objectOf(PropTypes.string),\n};\n\nexport default DeliveryAddress;\n","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_reg.bd65daa5.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_extra.1a5dda64.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pepperoni.c8384ebc.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_reg.67e2467d.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_extra.c854f9c4.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_ItalianSausage.30f1abc9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_reg.de53578e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_extra.5a14d4e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Ham.f9a4b089.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_reg.9ad0ed0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_extra.09ab3e70.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Bacon.01d8344a.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_reg.9f9c0251.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_extra.b8e5a0bf.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Chicken.5ad44911.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_reg.2aa6b6df.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_extra.ed2a2c61.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Beef.3b7c67c7.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_reg.6342108f.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_extra.029c5390.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pork.f6ce9e4e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_reg.ac08da62.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_extra.4d46fc4f.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Mushroom.13419b0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_reg.a1aa56b9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_extra.70bff6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Spinach_fresh.0f9a3e93.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_reg.56b4f355.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_extra.a0e7bd25.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Onion_Red.fc649c44.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_reg.2c37ed8c.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_extra.37addb7c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Olive_black.f36bd555.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_GreenBellPepper.52813aeb.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_reg.f86003d4.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_extra.f22472f1.png\";","/* All metadata related to the displaying of cheese options */\n\nexport const REGULAR_CHEESE = 'Regular';\nexport const EXTRA_CHEESE = 'Extra';\nexport const LIGHT_CHEESE = 'Light';\nexport const NO_CHEESE = 'None';\n\nexport const cheeseAmounts = [\n  EXTRA_CHEESE,\n  REGULAR_CHEESE,\n  LIGHT_CHEESE,\n  NO_CHEESE,\n];\n\nexport const cheeseAmountMetadataMapping = {\n  [EXTRA_CHEESE]: {\n    additionalDisplay: '+$1.00',\n  },\n};\n","module.exports = __webpack_public_path__ + \"static/media/icon_topping_BananaPepper.f3bcdf43.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_reg.84001df3.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_extra.97e5f278.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pineapple.25272d60.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_reg.351d9ecd.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_extra.d8ec6a52.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Jalapeno.010847af.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_reg.6d5ebb38.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_extra.8efd4042.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Tomato.45793eeb.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Marinara.85fd0f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_CreamyGarlicParm.c6e0d76c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_BBQ.552f71e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Buffalo.75e74963.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_GarlicButteryBlend.3519578d.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_GarlicButteryBlend.cbd8d06b.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_GarlicButteryBlend.eed3a573.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_GarlicButteryBlend_whole_2017.cb6aaecb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_ToastedParmesan.2d159915.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_ToastedParmesan.936d9f40.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_ToastedParmesan.78b23d6e.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_ToastedParm_whole_2017.222e5fd7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_none_whole_2017.b6008bb6.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_NoFinish.3abbb296.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_ht.ef946a28.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_NoFinish.3d23efc8.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_thin.6c415f1e.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_NoFinish.857451fd.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_pan.a639fd58.png\";","module.exports = __webpack_public_path__ + \"static/media/alarm-clock.e343a2cb.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_pepperoni.50a5d0e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Pepperoni_Lovers.436141dc.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Veggie_Lovers.eb41eca4.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Ultimate_Cheese_Lovers.cf9afb2c.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Hawaiian_Chicken.8799700a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Chicken_Bacon_Parmesan.44137224.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Backyard_BBQ_Chicken.cdffd12a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Buffalo_Chicken.332af0a5.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese_mozz_ML.10abdd1f.png\";","import SecureStorage from 'secure-web-storage';\nconst CryptoJS = require('crypto-js');\n\nconst SECRET_KEY = process.env.REACT_APP_SECURE_WEB_STORAGE_SECRET_KEY;\n\n/* decrypt and encrypt data to/from local storage using the provided secret key */\nexport const secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n\n    data = data.toString();\n\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n\n    data = data.toString(CryptoJS.enc.Utf8);\n\n    return data;\n  },\n});\n","import {\n  HAM,\n  PORK,\n  BEEF,\n  ITALIAN_SAUSAGE,\n  BACON,\n  PEPPERONI,\n  GRILLED_CHICKEN,\n} from './meatMetadata';\nimport {\n  MUSHROOMS,\n  BELL_PEPPERS,\n  RED_ONIONS,\n  OLIVES,\n  ROMA_TOMATOES,\n  BANANA_PEPPERS,\n  PINEAPPLE,\n} from './veggiesMetadata';\nimport {\n  MEATS,\n  VEGGIES,\n  CHEESE_AMOUNT,\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  SAUCE,\n  CRUST_FLAVOR,\n} from './pizzaProperties';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { BUFFALO, BARBECUE } from './sauceMetadata';\nimport { TOASTED_PARMESAN } from './crustFlavorMetadata';\n\n/* Holds various combo related display metadata used in multiple components */\n\nexport const CHEESE = 'Cheese';\nexport const PEPPERONI_PIZZA = 'Pepperoni';\nexport const MEAT_LOVER = \"Meat Lover's\";\nexport const SUPREME = 'Supreme';\nexport const PEPPERONI_LOVER = \"Pepperoni Lover's\";\nexport const SUPER_SUPREME = 'Super Supreme';\nexport const VEGGIE_LOVER = \"Veggie Lover's\";\nexport const ULTIMATE_CHEESE_LOVER = \"Ultimate Cheese Lover's\";\nexport const BUFFALO_CHICKEN = 'Buffalo Chicken';\nexport const BBQ_CHICKEN = 'BBQ Chicken';\nexport const HAWAIIAN_CHICKEN = 'Hawaiian Chicken';\nexport const CHICKEN_BACON_PARMESAN = 'Chicken Bacon Parmesan';\n\nexport const REGULAR = 'Regular';\nexport const COMBO = 'Combo';\n\nexport const toppingMapping = {\n  [CHEESE]: {\n    [MEATS]: [],\n    [VEGGIES]: [],\n  },\n  [PEPPERONI_PIZZA]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [MEAT_LOVER]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ITALIAN_SAUSAGE, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [PEPPERONI_LOVER]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: EXTRA_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [SUPREME]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [SUPER_SUPREME]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ITALIAN_SAUSAGE, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: OLIVES, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [VEGGIE_LOVER]: {\n    [MEATS]: [],\n    [VEGGIES]: [\n      { toppingName: OLIVES, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ROMA_TOMATOES, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [ULTIMATE_CHEESE_LOVER]: {\n    [CHEESE_AMOUNT]: EXTRA_CHEESE,\n    [MEATS]: [],\n    [VEGGIES]: [],\n  },\n  [BUFFALO_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: BANANA_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [SAUCE]: BUFFALO,\n  },\n  [BBQ_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [SAUCE]: BARBECUE,\n  },\n  [HAWAIIAN_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PINEAPPLE, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [CHICKEN_BACON_PARMESAN]: {\n    [MEATS]: [\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: ROMA_TOMATOES, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [CRUST_FLAVOR]: TOASTED_PARMESAN,\n  },\n};\n","export const INIT_PIZZA_BUILDER = 'INIT_PIZZA_BUILDER';\nexport const CLOSE_PIZZA_BUILDER = 'CLOSE_PIZZA_BUILDER';\nexport const SET_PROPERTY = 'SET_PROPERTY';\n","module.exports = __webpack_public_path__ + \"static/media/pizza_cheese.f7ed334d.jpg\";","import * as actionTypes from '../uiActionTypes';\n\n/* open/close the sidebar menu */\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR,\n  };\n};\n\n/* close the sidebar menu */\nexport const closeSidebar = () => {\n  return {\n    type: actionTypes.CLOSE_SIDEBAR,\n  };\n};\n\n/* set error for withErrorHandler HOC to pickup */\nexport const setErroredAction = (erroredAction) => {\n  return {\n    type: actionTypes.SET_ERRORED_ACTION,\n    erroredAction: erroredAction,\n  };\n};\n","import axios from 'axios';\n\n//axios.defaults.withCredentials = true;\n\n/* Axios instance used to call firebase api */\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  withCredentials: true,\n});\n\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","import * as actionTypes from '../cartActionTypes';\nimport axios from '../../../shared/axiosAPI';\nimport { v4 as uuidv4 } from 'uuid';\nimport hash from 'object-hash';\nimport { secureStorage } from '../../../shared/secureStorage';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\nimport { getOrCreateLocalCart } from '../../../shared/util';\n\n/* Create cart for user */\nexport const createCart = () => {\n  return (dispatch) => {\n    return axios\n      .post('/carts')\n      .then((res) => {\n        //Get final cart, combined with local cart if local items exist\n        dispatch(getCombinedCart(res.data.cart));\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.CREATE_CART));\n      });\n  };\n};\n\nexport const getCart = () => {\n  return (dispatch) => {\n    return axios\n      .get('/carts')\n      .then((res) => {\n        //If we get back cart in response\n        if (res.data.cart) {\n          //Get final cart, combined with local cart if local items exist\n          dispatch(getCombinedCart(res.data.cart));\n          //If cart doesn't exist, create one\n        } else {\n          dispatch(createCart());\n        }\n        dispatch(getCartDone());\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.GET_CART));\n        dispatch(getCartDone());\n      });\n  };\n};\n\n/* Get final cart, combined with local cart if local items exist */\nexport const getCombinedCart = (cart) => {\n  return (dispatch) => {\n    //Get cart from secure local storage\n    let localCart = getOrCreateLocalCart();\n\n    //If items in local cart, combine local cart with backend cart\n    if (localCart && localCart.quantity > 0) {\n      dispatch(combineCarts(cart));\n    }\n    //Otherwise, just set from backend cart\n    else {\n      dispatch(setCart(cart));\n    }\n  };\n};\n\n/* Set cart in redux store from cart in local storage */\nexport const getCartFromLocalStorage = () => {\n  return (dispatch) => {\n    let localCart = secureStorage.getItem('cart');\n    if (localCart.quantity > 0) {\n      dispatch(setCartFromLocalCart(localCart));\n    }\n    dispatch(getCartDone());\n  };\n};\n\n/* Finish loading cart */\nexport const getCartDone = () => {\n  return {\n    type: actionTypes.GET_CART_DONE,\n  };\n};\n\n/* Combine local cart with backend cart */\nexport const combineCarts = (cart) => {\n  return (dispatch, getState) => {\n    const localCart = getOrCreateLocalCart();\n\n    const cartId = cart._id;\n    return axios\n      .post(`/carts/${cartId}/items`, Object.values(localCart.items))\n      .then((res) => {\n        //Dispatch to update state with combined cart\n        dispatch({\n          type: actionTypes.COMBINE_CARTS,\n          cartId: cartId,\n          items: res.data.cart.items,\n          quantity: res.data.cart.quantity,\n          numItemsAdded: res.data.cart.quantity - localCart.quantity,\n        });\n\n        //Empty the local cart\n        const emptyCart = { items: {}, quantity: 0, pizzaHashMap: {} };\n        secureStorage.setItem('cart', emptyCart);\n      });\n  };\n};\n\n/* Just clear cart items from redux store only. \n   Different from empty cart which empties cart in backend as well */\nexport const signOutCart = () => {\n  return {\n    type: actionTypes.SIGN_OUT_CART,\n  };\n};\n\n/* Add to cart, either new item or increase quantity for already existing item */\nexport const addToCart = (cartId, pizza, quantity) => {\n  return (dispatch) => {\n    const item = { pizza, quantity };\n    if (cartId) {\n      return axios\n        .post(`/carts/${cartId}/items`, [item])\n        .then((res) => {\n          dispatch({\n            type: actionTypes.ADD_TO_CART,\n            items: res.data.cart.items,\n            quantity: res.data.cart.quantity,\n            numItemsAdded: quantity,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.ADD_ITEM_TO_CART));\n        });\n    } else {\n      dispatch(addToLocalCart(item));\n    }\n  };\n};\n\n/* If user not signed in, add to local storage cart */\nconst addToLocalCart = (item) => {\n  return (dispatch) => {\n    //Get local cart\n    let localCart = getOrCreateLocalCart();\n\n    //Hash of pizza to be added\n    let pizzaHash = hash(item.pizza);\n\n    //Local pizza hash map\n    let pizzaHashMap = localCart.pizzaHashMap;\n\n    //This is an object, not an array. Easier to manipulate object\n    //when DB is not involved.\n    let items = localCart.items;\n\n    //If pizza to be added has hash in hash map\n    if (pizzaHash in pizzaHashMap) {\n      //Update quantity of that item\n      items[pizzaHashMap[pizzaHash]].quantity += item.quantity;\n    }\n    //Otherwise, add new item to local cart\n    else {\n      const itemId = uuidv4();\n      pizzaHashMap[pizzaHash] = itemId;\n      item = { _id: itemId, ...item };\n      items[itemId] = item;\n    }\n\n    //Convert objects to array to match items array in DB\n    let itemsArr = Object.values(items);\n    localCart.quantity += item.quantity;\n\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to update state\n    dispatch({\n      type: actionTypes.ADD_TO_CART,\n      items: itemsArr,\n      quantity: localCart.quantity,\n      numItemsAdded: item.quantity,\n    });\n  };\n};\n\n/* Set cart items and metadata in redux store */\nexport const setCart = (cart) => {\n  return {\n    type: actionTypes.SET_CART,\n    cartId: cart._id,\n    items: cart.items,\n    quantity: cart.quantity,\n  };\n};\n\n/* Set cart items and metadata in redux store */\nexport const setCartFromLocalCart = (localCart) => {\n  return {\n    type: actionTypes.SET_CART,\n    items: Object.values(localCart.items),\n    quantity: localCart.quantity,\n  };\n};\n\n/* To set loading in UI when making change to a cart item */\nconst changeCartItemStart = (itemId) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_START,\n    itemIdBeingChanged: itemId,\n  };\n};\n\n/* Successfully changed a cart item. Finish loading that item */\nexport const changeCartItemSuccess = (items, quantity) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_SUCCESS,\n    items: items,\n    quantity: quantity,\n  };\n};\n\n/* To stop loading cart item in UI if changing cart item failed */\nconst changeCartItemFailed = () => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_FAILED,\n  };\n};\n\n/* Set new item quantity and update total quantity */\nexport const changeItemQuantity = (cartId, itemId, pizza, quantity) => {\n  return (dispatch) => {\n    const quantityPatch = { quantity: quantity };\n\n    dispatch(changeCartItemStart(itemId));\n\n    //if user signed in, PUT call to change item quantity in backend cart\n    if (cartId) {\n      axios\n        .patch(`/carts/${cartId}/items/${itemId}`, quantityPatch)\n        .then((res) => {\n          const cart = res.data.cart;\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.CHANGE_ITEM_QUANTITY));\n          dispatch(changeCartItemFailed());\n        });\n    }\n    //if user not signed in, change item quantity in local storage cart\n    else {\n      dispatch(changeItemQuantityInLocalCart(itemId, quantity));\n    }\n  };\n};\n\n/* If user not signed in, change item quantity in local storage cart */\nconst changeItemQuantityInLocalCart = (itemId, quantity) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      dispatch(\n        changeCartItemSuccess(\n          Object.values(localCart.items),\n          localCart.quantity\n        )\n      );\n      return;\n    }\n\n    let items = localCart.items;\n\n    //Update total cart quantity\n    localCart.quantity -= items[itemId].quantity;\n    localCart.quantity += quantity;\n\n    //Update item quantity\n    items[itemId].quantity = quantity;\n\n    //Set back in local storage\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to update cart state\n    dispatch(changeCartItemSuccess(Object.values(items), localCart.quantity));\n  };\n};\n\n/* Remove item from cart in backend if user signed in or from cart in local storage if not */\nexport const removeItem = (cartId, itemId, pizza) => {\n  return (dispatch) => {\n    dispatch(changeCartItemStart(itemId));\n\n    //If user signed in, DELETE call to remove item from backend cart\n    if (cartId) {\n      axios\n        .delete(`/carts/${cartId}/items/${itemId}`)\n        .then((res) => {\n          const cart = res.data.cart;\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionErrors.REMOVE_ITEM));\n        });\n    } else {\n      dispatch(removeItemFromLocalCart(itemId, pizza));\n    }\n  };\n};\n\n/* If user not signed in, remove item from local storage cart */\nconst removeItemFromLocalCart = (itemId, pizza) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      dispatch(setCartFromLocalCart(localCart));\n      return;\n    }\n\n    //Get new cart quantity\n    localCart.quantity -= localCart.items[itemId].quantity;\n\n    //Remove from items\n    delete localCart.items[itemId];\n    delete localCart.pizzaHashMap[hash(pizza)];\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to set cart state\n    dispatch(\n      changeCartItemSuccess(Object.values(localCart.items), localCart.quantity)\n    );\n  };\n};\n\nexport const emptyCart = (cartId) => {\n  return (dispatch) => {\n    //If user signed in, PUT call to empty backend cart\n    if (cartId) {\n      let emptyCart = {\n        items: [],\n      };\n      axios\n        .put(`/carts/${cartId}`, emptyCart)\n        .then(() => {\n          dispatch({\n            type: actionTypes.EMPTY_CART,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.EMPTY_CART));\n        });\n    }\n    //If user not signed in, empty local storage cart\n    else {\n      let emptyCart = { items: {}, pizzaHashMap: {}, quantity: 0 };\n      secureStorage.setItem('cart', emptyCart);\n      dispatch({\n        type: actionTypes.EMPTY_CART,\n      });\n    }\n  };\n};\n\n/* Save item to cart in backend if user signed in or in local storage if not */\nexport const saveToCart = (cartId, pizza, quantity, cartQuantity, itemId) => {\n  return (dispatch) => {\n    const item = { pizza: pizza, quantity: quantity };\n    dispatch(changeCartItemStart(itemId));\n\n    //If user signed in, PUT call to make change to backend cart\n    if (cartId) {\n      axios\n        .put(`/carts/${cartId}/items/${itemId}`, item)\n        .then((res) => {\n          const cart = res.data.cart;\n          //Dispatch to set cart state\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionErrors.SAVE_TO_CART));\n        });\n    }\n    //if user not signed in, make change to local storage cart\n    else {\n      dispatch(saveToLocalCart(itemId, item));\n    }\n  };\n};\n\n/* If user not signed in, make change to local storage cart */\nconst saveToLocalCart = (itemId, item) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      localCart.items = { [itemId]: { _id: itemId, ...item } };\n      localCart.pizzaHashMap[hash(item.pizza)] = itemId;\n      localCart.quantity = item.quantity;\n      secureStorage.setItem('cart', localCart);\n      dispatch(\n        changeCartItemSuccess(\n          Object.values(localCart.items),\n          localCart.quantity\n        )\n      );\n      return;\n    }\n\n    //Local cart items\n    let items = localCart.items;\n\n    //Local pizza hash map\n    let pizzaHashMap = localCart.pizzaHashMap;\n\n    //Hash of pizza to be saved\n    let pizzaHash = hash(item.pizza);\n\n    //Item that needs to be updated\n    let currentItem = items[itemId];\n\n    localCart.quantity += item.quantity - items[itemId].quantity;\n\n    //If hash of pizza to be saved is in hash map\n    if (pizzaHash in pizzaHashMap) {\n      //If matching hash item's id doesn't match\n      if (pizzaHashMap[pizzaHash] !== itemId) {\n        //Then update matching hash item's quantity\n        items[pizzaHashMap[pizzaHash]].quantity += item.quantity;\n\n        delete pizzaHashMap[items[itemId].pizza];\n\n        //And delete the old item\n        delete items[itemId];\n      } else {\n        currentItem.quantity = item.quantity;\n      }\n    } else {\n      delete pizzaHashMap[hash(currentItem.pizza)];\n      items[itemId] = { _id: itemId, ...item };\n      pizzaHashMap[pizzaHash] = itemId;\n    }\n\n    //Save back to local storage\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to set cart state\n    dispatch(changeCartItemSuccess(Object.values(items), localCart.quantity));\n  };\n};\n","export const SUBMIT_ORDER = 'submit your order';\nexport const GET_ORDERS = 'retrieve your orders';\nexport const ADD_ITEM_TO_CART = 'add item(s) to cart';\nexport const CREATE_CART = 'create cart';\nexport const GET_CART = 'retrieve cart';\nexport const EMPTY_CART = 'empty cart';\nexport const CHANGE_ITEM_QUANTITY = 'change item quantity';\nexport const REMOVE_ITEM = 'remove item';\nexport const SAVE_TO_CART = 'save item to cart';\nexport const SIGN_IN = 'sign in';\nexport const SIGN_UP = 'sign up';\nexport const AUTH_TOKEN = 'authenticate token';\nexport const VALIDATE_DELIVERY_ADDRESS = 'validate delivery address';\n","import * as actionTypes from '../checkoutActionTypes';\nimport axios from '../../../shared/axiosAPI';\nimport axiosGeolocation from 'axios';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\n\n/* To set loading in UI when starting to submit order */\nexport const submitOrderStart = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_START,\n  };\n};\n\n/* Submit an order for a user */\nexport const submitOrder = (total, items, deliveryAddress, cartId) => {\n  return (dispatch) => {\n    dispatch(submitOrderStart());\n    let order = {\n      orderDate: new Date(),\n      total: total,\n    };\n\n    if (deliveryAddress) {\n      order = { ...order, deliveryAddress: deliveryAddress };\n    }\n    axios\n      .post('/orders', order)\n      .then((res) => {\n        dispatch({\n          type: actionTypes.SUBMIT_ORDER_SUCCESS,\n          order: res.data.order,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.SUBMIT_ORDER));\n        dispatch(submitOrderFailed());\n      });\n  };\n};\n\n/* Stop loading in UI when submitting order failed */\nexport const submitOrderFailed = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_FAILED,\n  };\n};\n\nexport const clearDeliveryAddress = () => {\n  return {\n    type: actionTypes.CLEAR_DELIVERY_ADDRESS,\n  };\n};\n/* Reset all address validation properties */\nexport const validateDeliveryAddressReset = () => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_RESET,\n  };\n};\n\nexport const validateDeliveryAddressStart = () => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_START,\n  };\n};\n\n/* Call smarty streets geolocation api to validate delivery address */\nexport const validateDeliveryAddress = (addressForm) => {\n  return (dispatch) => {\n    let params = {\n      key: process.env.REACT_APP_SMARTY_STREETS_KEY,\n      street: addressForm.street.value,\n      secondary: addressForm.unit.value,\n      city: addressForm.city.value,\n      state: addressForm.state.value,\n      zipcode: addressForm.zipcode.value,\n      candidates: 1,\n    };\n\n    axiosGeolocation\n      .get(process.env.REACT_APP_SMARTY_STREETS_BASE_URL, {\n        params: params,\n      })\n      .then((res) => {\n        const matchCode = res.data[0].analysis.dpv_match_code;\n        if (matchCode === 'Y') {\n          dispatch({\n            type: actionTypes.VALIDATE_DELIVERY_ADDRESS_SUCCESS,\n            deliveryAddress: {\n              streetAddress: addressForm.street.value,\n              secondaryAddress: addressForm.unit.value,\n              city: addressForm.city.value,\n              state: addressForm.state.value,\n              zipcode: addressForm.zipcode.value,\n            },\n          });\n        } else if (matchCode === 'S' || matchCode === 'D') {\n          dispatch(\n            validateDeliveryAddressFailed(\n              'Missing or incorrect secondary address (apt/unit)'\n            )\n          );\n        } else {\n          dispatch(\n            validateDeliveryAddressFailed('The address you entered is invalid')\n          );\n        }\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.VALIDATE_DELIVERY_ADDRESS));\n        dispatch(validateDeliveryAddressFailed());\n      });\n  };\n};\n\nexport const validateDeliveryAddressFailed = (error) => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_FAILED,\n    error: error,\n  };\n};\n\n/* To finish loading in UI after getting orders failed */\nconst getOrdersFailed = () => {\n  return {\n    type: actionTypes.GET_ORDERS_FAILED,\n  };\n};\n\n/* Get all past orders for a particular user */\nexport const getOrders = () => {\n  return (dispatch) => {\n    return axios\n      .get('/orders')\n      .then((res) => {\n        dispatch({\n          type: actionTypes.GET_ORDERS_SUCCESS,\n          orders: res.data.orders,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.GET_ORDERS));\n        dispatch(getOrdersFailed());\n      });\n  };\n};\n","import * as actionTypes from '../authActionTypes';\nimport {\n  signOutCart,\n  getCartFromLocalStorage,\n  getCart,\n} from '../../cart/cartActions/cartActions';\nimport { getOrders } from '../../checkout/checkoutActions/checkoutActions';\nimport axios from '../../../shared/axiosAPI';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { getOrCreateLocalCart } from '../../../shared/util';\nimport { history } from '../../../index';\n\n/* To show loading in UI when authentication action has started */\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\n/* Reset auth error after unmounting an auth component */\nexport const authReset = () => {\n  return {\n    type: actionTypes.AUTH_RESET,\n  };\n};\n\n/* Failed to initialize app */\nexport const authTokenFailed = () => {\n  return {\n    type: actionTypes.AUTH_TOKEN_FAILED,\n  };\n};\n\n/* Successfully authenticated user and received token/userid */\nexport const authSuccess = (authData) => {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.AUTH_SUCCESS, userId: authData.user._id });\n\n    //Get cart for this user\n    dispatch(getCart());\n\n    //Set automatic sign out\n    dispatch(checkAuthTimeout(authData.expires));\n\n    //Get orders for this user\n    dispatch(getOrders());\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signInFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_IN_FAILED,\n    error: error,\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signUpFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_UP_FAILED,\n    error: error,\n  };\n};\n\n/* Clear user data and cart on sign out */\nexport const signOut = () => {\n  return (dispatch) => {\n    return axios.post('/auth/signout', {}).then(() => {\n      dispatch(signOutCart());\n\n      dispatch({\n        type: actionTypes.AUTH_SIGNOUT,\n      });\n\n      history.push({ pathname: '/', fromSignOut: true });\n    });\n  };\n};\n\n/* Sign out user when expiration time has been reached */\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    //Calculate time to expire based on exact time of expiration\n    let timeToExpire = expirationTime - new Date().getTime();\n\n    //Dispatch sign out action in time to expire\n    setTimeout(() => {\n      dispatch(signOut());\n    }, timeToExpire);\n  };\n};\n\n/* Sign in user with email/password.\n   Also get user's cart and orders once successfully signed in */\nexport const signIn = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n    };\n    return axios\n      .post('/auth/signin', authData)\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionErrors.SIGN_IN));\n        if (err.response) {\n          dispatch(signInFailed(err.response));\n        } else {\n          dispatch(signInFailed(null));\n        }\n      });\n  };\n};\n\n/* Sign up user with email/password */\nexport const signUp = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n    };\n    return axios\n      .post('/auth/signup', authData)\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionErrors.SIGN_UP));\n        if (err.response) {\n          dispatch(signUpFailed(err.response));\n        } else {\n          dispatch(signUpFailed(null));\n        }\n      });\n  };\n};\n\n/* Initialize application upon app load */\nexport const authenticateToken = () => {\n  return (dispatch) => {\n    getOrCreateLocalCart();\n\n    dispatch(authStart());\n\n    return axios\n      .get('/auth/me')\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch(() => {\n        //If an error with api, then get cart from secure local storage\n        dispatch(getCartFromLocalStorage());\n        dispatch(authTokenFailed());\n        dispatch(setErroredAction(actionErrors.AUTH_TOKEN));\n      });\n  };\n};\n","import React from 'react';\nimport './NavigationItem.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Standard navigation item that is part of either the header or sidebar menus */\nconst NavigationItem = (props) => {\n  let classNames = ['navigation-item__text'];\n  if (props.vertical) {\n    classNames.push('navigation-item__text--vertical');\n  }\n  let navigationItemContent = null;\n\n  navigationItemContent = (\n    <span className={classNames.join(' ')}>\n      <h3>{props.children}</h3>\n    </span>\n  );\n\n  let navigationItem = null;\n  if (props.to) {\n    navigationItem = (\n      <Link onClick={props.onClick} to={props.to} className='navigation-item'>\n        {navigationItemContent}\n      </Link>\n    );\n  } else {\n    navigationItem = (\n      <span onClick={props.onClick} className='navigation-item'>\n        {navigationItemContent}\n      </span>\n    );\n  }\n\n  return navigationItem;\n};\n\nNavigationItem.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  vertical: PropTypes.bool,\n};\n\nexport default NavigationItem;\n","import React from 'react';\nimport './PizzaMenuItems.scss';\nimport NavigationItem from '../UI/NavigationItem/NavigationItem';\n\n/* Menu items that display links to different categories of pizza */\n\nconst PizzaMenuItems = (props) => {\n  return (\n    <div className='pizza-menu-items'>\n      <NavigationItem {...props} onClick={props.onClick} to='/'>\n        Popular\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/meats'>\n        Meats\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/chicken'>\n        Chicken\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/veggies'>\n        Veggies\n      </NavigationItem>\n    </div>\n  );\n};\n\nexport default PizzaMenuItems;\n","import React, { Fragment } from 'react';\nimport NavigationItem from '../UI/NavigationItem/NavigationItem';\nimport PropTypes from 'prop-types';\n\n/* Menu items that deal with account information, namely authentication and orders */\nconst AccountMenuItems = (props) => {\n  const handleSignOut = () => {\n    props.signOut();\n  };\n\n  let accountMenuItems = (\n    <NavigationItem {...props} to='/signin' data-test='signin'>\n      Sign In\n    </NavigationItem>\n  );\n  if (props.isAuthenticated) {\n    accountMenuItems = (\n      <Fragment>\n        <NavigationItem {...props} to='/my-orders' data-test='my-orders'>\n          My Orders\n        </NavigationItem>\n        <NavigationItem {...props} onClick={handleSignOut} data-test='signout'>\n          Sign Out\n        </NavigationItem>\n      </Fragment>\n    );\n  }\n  return accountMenuItems;\n};\n\nAccountMenuItems.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nexport default AccountMenuItems;\n","import React from 'react';\nimport './Button.scss';\nimport PropTypes from 'prop-types';\n\nexport const primary = 'button';\nexport const secondary = 'button button--secondary';\nexport const tertiary = 'button button--tertiary';\n\n/* Standard button across entire app */\nconst Button = (props) => {\n  return (\n    <button\n      data-test='button'\n      onClick={props.onClick}\n      disabled={props.disabled}\n      className={props.type}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  type: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n    .isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport './DropdownAlert.scss';\nimport PropTypes from 'prop-types';\n\n/* Dropdown alert disappears automatically in a few seconds */\nconst DropdownAlert = (props) => {\n  return (\n    <div\n      key={props.alertKey}\n      onClick={props.onClick}\n      className='dropdown-menu-alert'\n    >\n      <div className='dropdown-menu-alert__container'>{props.children}</div>\n    </div>\n  );\n};\n\nDropdownAlert.propTypes = {\n  alertKey: PropTypes.string.isRequired,\n  children: PropTypes.array,\n};\n\nexport default React.memo(DropdownAlert);\n","import React, { Component } from 'react';\nimport { MdShoppingCart } from 'react-icons/md';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport DropdownAlert from '../../components/UI/DropdownAlert/DropdownAlert';\nimport PropTypes from 'prop-types';\n\nclass CartIcon extends Component {\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.quantity !== nextProps.quantity) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    let numItemsInCart = null;\n    if (this.props.quantity > 0) {\n      numItemsInCart = (\n        <div\n          data-test='numItems'\n          key={`${this.props.quantity}-num-items`}\n          className='header__cart-items animate-num-items'\n        >\n          {this.props.quantity}\n        </div>\n      );\n    }\n    let itemAdded = null;\n    if (\n      this.props.numItemsAdded > 0 &&\n      this.props.location.pathname !== '/cart' &&\n      this.props.location.pathname !== '/checkout'\n    ) {\n      let numItems = null;\n      if (this.props.numItemsAdded === 1) {\n        numItems = <span>{this.props.numItemsAdded} new item</span>;\n      } else {\n        numItems = <span>{this.props.numItemsAdded} new items</span>;\n      }\n      itemAdded = (\n        <DropdownAlert\n          data-test='itemAdded'\n          onClick={this.handleClickItemAddedAlert}\n          alertKey={`${this.props.quantity}-add-items`}\n        >\n          <h3 className='header__alert-text'>{numItems} added to cart</h3>\n          <Link\n            onClick={this.handleClickCheckout}\n            className='header__checkout'\n            to={{\n              pathname: this.props.isAuthenticated\n                ? '/checkout/order-type'\n                : '/signin',\n              fromCheckout: true,\n            }}\n          >\n            <Button type={primary}>Checkout</Button>\n          </Link>\n        </DropdownAlert>\n      );\n    }\n\n    return (\n      <div style={{ height: '100%' }} data-test='cartIconContainer'>\n        <NavigationItem to='/cart' data-test='navigationItem'>\n          <div className='header__cart header__icon' data-test='cartIcon'>\n            <MdShoppingCart />\n            {numItemsInCart}\n          </div>\n        </NavigationItem>\n        {itemAdded}\n      </div>\n    );\n  }\n}\n\nCartIcon.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default withRouter(CartIcon);\n","import React, { Component } from 'react';\nimport './Header.scss';\nimport PizzaTimeLogo from '../../assets/images/alarm-clock.png';\nimport { MdMenu } from 'react-icons/md';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport PizzaMenuItems from '../../components/PizzaMenuItems/PizzaMenuItems';\nimport AccountMenuItems from '../../components/AccountMenuItems/AccountMenuItems';\nimport CartIcon from '../../components/CartIcon/CartIcon';\nimport PropTypes from 'prop-types';\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nclass Header extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.isAuthenticated !== nextProps.isAuthenticated\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClickMenuIcon = () => {\n    this.props.toggleSidebar();\n  };\n\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  render() {\n    return (\n      <header className='header'>\n        <div className='header__main'>\n          <div onClick={this.handleClickMenuIcon} className='header__menu'>\n            <NavigationItem>\n              <div className='header__icon'>\n                <MdMenu />\n              </div>\n            </NavigationItem>\n          </div>\n          <Link to='/' className='header__logo-title'>\n            <img\n              alt='PizzaTime logo'\n              className='header__logo'\n              src={PizzaTimeLogo}\n            />\n            <div className='header__title'>\n              <span>PizzaTime</span>\n            </div>\n          </Link>\n          <div className='header__menu-items'>\n            <PizzaMenuItems />\n          </div>\n        </div>\n        <div className='header__account'>\n          <div className='header__account-actions'>\n            <AccountMenuItems\n              isAuthenticated={this.props.isAuthenticated}\n              signOut={this.props.signOut}\n            />\n          </div>\n          <div style={{ position: 'relative' }}>\n            <CartIcon\n              numItemsAdded={this.props.numItemsAdded}\n              quantity={this.props.quantity}\n            />\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toggleSidebar } from '../store/ui/uiActions/uiActions';\nimport { signOut } from '../store/auth/authActions/authActions';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header/Header';\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nconst HeaderContainer = (props) => {\n  return <Header {...props} />;\n};\n\nHeaderContainer.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  quantity: state.cart.quantity,\n  numItemsAdded: state.cart.numItemsAdded,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { toggleSidebar, signOut })(\n  withRouter(HeaderContainer)\n);\n","import React from 'react';\nimport './Backdrop.scss';\nimport PropTypes from 'prop-types';\n\n/* Greyed out backdrop on top of provided children */\nconst Backdrop = (props) => {\n  return props.show ? <div className='backdrop'>{props.children}</div> : null;\n};\n\nBackdrop.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport './Modal.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport { useEffect } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport PropTypes from 'prop-types';\n\n/* Standard modal across entire app */\nconst Modal = (props) => {\n  useEffect(() => {\n    if (props.show) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  });\n\n  let modalClassNames = ['modal'];\n  if (props.error) {\n    modalClassNames.push('modal--error');\n  }\n  if (!props.show) {\n    modalClassNames.push('modal--closed');\n  }\n  return (\n    <Backdrop show={props.show} clicked={props.modalClosed}>\n      <div className={modalClassNames.join(' ')}>\n        <MdClose className='modal__close' onClick={props.modalClosed} />\n        <div className='modal__children'>{props.children}</div>\n      </div>\n    </Backdrop>\n  );\n};\n\nModal.propTypes = {\n  show: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  error: PropTypes.bool,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Modal from '../components/UI/Modal/Modal';\nimport { connect } from 'react-redux';\nimport { SIGN_IN, SIGN_UP, AUTH_TOKEN } from '../shared/actionErrors';\n\n/* Axios error handler HOC */\nconst withErrorHandler = (WrappedComponent, axios) => {\n  class HOComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.requestInterceptor = null;\n      this.responseInterceptor = null;\n    }\n    state = {\n      error: null,\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      if (!this.state.error && nextState.error) {\n        return false;\n      }\n      return true;\n    }\n\n    componentDidMount() {\n      this.requestInterceptor = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n\n      this.responseInterceptor = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n          return Promise.reject(error);\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.requestInterceptor);\n      axios.interceptors.response.eject(this.responseInterceptor);\n    }\n\n    handleModalClosed = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      //Don't show error modal for certain actions\n      //They have their own error handling\n      let excludeActions = [SIGN_UP, SIGN_IN, AUTH_TOKEN];\n      if (\n        this.state.error &&\n        this.state.error.message !== 'Network Error' &&\n        this.state.error.response.status !== 500 &&\n        excludeActions.includes(this.props.erroredAction)\n      ) {\n        return <WrappedComponent {...this.props} />;\n      }\n      let erroredAction = 'perform action';\n      erroredAction = this.props.erroredAction || erroredAction;\n\n      return (\n        <React.Fragment>\n          <Modal\n            error\n            show={this.state.error}\n            modalClosed={this.handleModalClosed}\n          >\n            {this.state.error\n              ? `Unable to ${erroredAction}: ${this.state.error.message}`\n              : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    erroredAction: state.ui.erroredAction,\n  });\n\n  return connect(mapStateToProps, null)(HOComponent);\n};\n\nexport default withErrorHandler;\n","import React from 'react';\nimport HeaderContainer from '../../../containers/HeaderContainer';\nimport './Layout.scss';\nimport PropTypes from 'prop-types';\nimport withErrorHandler from '../../../hoc/withErrorHandler';\nimport axiosAPI from '../../../shared/axiosAPI';\n\n/* Overall app layout */\nconst Layout = (props) => {\n  return (\n    <div className='layout' data-test='layout'>\n      <HeaderContainer data-test='header' />\n      <main className='main' data-test='main'>\n        {props.children}\n      </main>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default withErrorHandler(Layout, axiosAPI);\n","import * as actionTypes from '../pizzaBuilderActionTypes';\nimport { REGULAR_TOPPING, WHOLE } from '../../../metadata/pizzaProperties';\n\n/* Initialize pizza builder with properties of given pizza */\nexport const initializePizzaBuilder = (pizza, quantity, itemId) => {\n  return {\n    type: actionTypes.INIT_PIZZA_BUILDER,\n    pizza: pizza,\n    quantity: quantity,\n    itemId: itemId,\n  };\n};\n\nexport const closePizzaBuilder = () => {\n  return {\n    type: actionTypes.CLOSE_PIZZA_BUILDER,\n  };\n};\n\n/* Dynamically set a pizza property value */\nexport const setProperty = (property, value) => {\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: value,\n  };\n};\n\n/* Select/deselect a topping */\nexport const toggleTopping = (pizza, property, value) => {\n  let toppings = [...pizza[property]];\n\n  const toppingIndex = toppings.findIndex(\n    (topping) => topping.toppingName === value\n  );\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: value,\n      amount: REGULAR_TOPPING,\n      portion: WHOLE,\n    });\n  } else {\n    toppings.splice(toppingIndex, 1);\n  }\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n\n/* Set the topping amount, whether regular/extra */\nexport const setToppingAmount = (pizza, property, topping, value) => {\n  let toppings = [...pizza[property]];\n  const toppingIndex = toppings.findIndex(\n    (selectedTopping) => selectedTopping.toppingName === topping\n  );\n\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: topping,\n      amount: value,\n      portion: WHOLE,\n    });\n  } else {\n    toppings[toppingIndex] = {\n      ...toppings[toppingIndex],\n      amount: value,\n    };\n  }\n\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n\n/* Set the topping portion, whether left/right/whole */\nexport const setToppingPortion = (pizza, property, topping, value) => {\n  let toppings = [...pizza[property]];\n  const toppingIndex = toppings.findIndex(\n    (selectedTopping) => selectedTopping.toppingName === topping\n  );\n\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: topping,\n      amount: REGULAR_TOPPING,\n      portion: value,\n    });\n  } else {\n    toppings[toppingIndex] = {\n      ...toppings[toppingIndex],\n      portion: value,\n    };\n  }\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n","import React from 'react';\nimport './Dropdown.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard dropdown selectors across entire app */\nconst Dropdown = (props) => {\n  return (\n    <select\n      value={props.value ? props.value : 1}\n      onChange={props.onChange}\n      className='dropdown'\n      aria-label={props.label}\n    >\n      {props.options.map((option) => {\n        return <option key={option}>{option}</option>;\n      })}\n    </select>\n  );\n};\n\nDropdown.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  options: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport './PizzaBox.scss';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport Button from '../../components/UI/Button/Button';\nimport { crustMetadataMapping } from '../../metadata/crustMetadata';\nimport { sizes } from '../../metadata/sizeMetadata';\nimport { primary, secondary } from '../../components/UI/Button/Button';\nimport { calculatePrice, normalizePizza, getCrust } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* UI box container that holds an pizza and lets user customize various pizza properties.\n   Can add pizza to order and also build your own pizza from here. */\nconst PizzaBox = (props) => {\n  const handleAddToCart = () => {\n    let pizza = { ...props.pizza };\n    pizza.crust = getCrust(pizza.crust);\n    props.addToCart(props.cartId, normalizePizza(pizza), props.quantity);\n    props.resetState();\n  };\n\n  const crustOptions = Object.entries(crustMetadataMapping).map(\n    ([crust, crustMetadata]) => {\n      return (\n        crust +\n        (crustMetadata.additionalDisplay\n          ? ` ${crustMetadata.additionalDisplay}`\n          : '')\n      );\n    }\n  );\n\n  const sizeOptions = sizes;\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  let pizza = { ...props.pizza };\n  pizza.crust = getCrust(pizza.crust);\n  const price = calculatePrice(pizza);\n\n  let pizzaAdd = null;\n  let pizzaName = null;\n  let customize = null;\n  let customizeSecondary = null;\n\n  if (props.buildPizza) {\n    pizzaAdd = (\n      <Button type={primary} onClick={props.handleClickBuild}>\n        Get Started\n      </Button>\n    );\n    pizzaName = 'Build Your Own';\n    customize = <div className='empty-button'></div>;\n  } else {\n    pizzaAdd = (\n      <React.Fragment>\n        <div className='pizza-box__quantity'>\n          <Dropdown\n            onChange={props.handleChangeQuantity}\n            options={quantityOptions}\n            value={props.quantity}\n            label='quantity'\n          />\n        </div>\n        <Button type={primary} onClick={handleAddToCart}>\n          Add to Order\n        </Button>\n      </React.Fragment>\n    );\n    pizzaName = props.pizzaType;\n    customize = (\n      <Button type={secondary} onClick={props.handleClickBuild}>\n        Customize\n      </Button>\n    );\n    customizeSecondary = (\n      <span\n        className='pizza-box__customize link'\n        onClick={props.handleClickBuild}\n      >\n        Customize\n      </span>\n    );\n  }\n\n  return (\n    <div className='pizza-box'>\n      <h2 className='pizza-box__name'>{pizzaName} Pizza</h2>\n      <div className='pizza-box__container'>\n        <div className='pizza-box__details'>\n          {customizeSecondary}\n\n          <h3 className='pizza-box__price'>\n            ${(props.quantity * price).toFixed(2)}\n          </h3>\n          <div className='pizza-box__options'>\n            <div className='pizza-box__crust'>\n              <Dropdown\n                options={crustOptions}\n                onChange={props.handleChangeCrust}\n                value={props.pizza.crust}\n                label='crust'\n              />\n            </div>\n            <div className='pizza-box__size'>\n              <Dropdown\n                options={sizeOptions}\n                onChange={props.handleChangeSize}\n                value={props.pizza.size}\n                label='size'\n              />\n            </div>\n            <div className='pizza-box__add'>{pizzaAdd}</div>\n          </div>\n        </div>\n        <div className='pizza-box__right'>\n          <img\n            className='pizza-box__image'\n            src={props.imageSrc}\n            alt={pizzaName}\n          />\n          {customize}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPizzaBox.propTypes = {\n  priceType: PropTypes.string.isRequired,\n  pizzaType: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  pizzaName: PropTypes.string,\n};\n\nexport default PizzaBox;\n","import React, { Component } from 'react';\nimport { HAND_TOSSED } from '../metadata/crustMetadata';\nimport { LARGE } from '../metadata/sizeMetadata';\nimport { toppingMapping } from '../metadata/comboMetadata';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport { addToCart } from '../store/cart/cartActions/cartActions';\nimport { SIZE, CRUST, COMBO_NAME } from '../metadata/pizzaProperties';\nimport { normalizePizza, getCrust } from '../shared/util';\nimport PropTypes from 'prop-types';\nimport PizzaBox from '../components/PizzaBox/PizzaBox';\n\n/* Container for PizzaBox component */\nclass PizzaBoxContainer extends Component {\n  constructor(props) {\n    super(props);\n    const initialState = this.getInitialState();\n    this.state = {\n      ...initialState,\n    };\n  }\n\n  getInitialState = () => {\n    let initialState = {\n      pizza: {\n        priceType: this.props.priceType,\n        [COMBO_NAME]: this.props.pizzaType,\n        [CRUST]: HAND_TOSSED,\n        [SIZE]: LARGE,\n      },\n      quantity: 1,\n    };\n\n    if (toppingMapping[this.props.pizzaType]) {\n      initialState = {\n        ...initialState,\n        pizza: {\n          ...initialState.pizza,\n          ...toppingMapping[this.props.pizzaType],\n        },\n      };\n    }\n\n    return initialState;\n  };\n\n  resetState = () => {\n    this.setState(this.getInitialState());\n  };\n\n  handleChangeQuantity = (event) => {\n    event.persist();\n    this.setState({\n      quantity: parseInt(event.target.value),\n    });\n  };\n\n  handleChangeCrust = (event) => {\n    event.persist();\n\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [CRUST]: event.target.value,\n      },\n    });\n  };\n\n  handleChangeSize = (event) => {\n    event.persist();\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [SIZE]: event.target.value,\n      },\n    });\n  };\n\n  handleClickBuild = () => {\n    let pizza = { ...this.state.pizza };\n    pizza.crust = getCrust(pizza.crust);\n    this.props.initializePizzaBuilder(\n      normalizePizza(pizza),\n      this.state.quantity\n    );\n    this.resetState();\n  };\n\n  render() {\n    return (\n      <PizzaBox\n        handleClickBuild={this.handleClickBuild}\n        handleChangeSize={this.handleChangeSize}\n        handleChangeCrust={this.handleChangeCrust}\n        handleChangeQuantity={this.handleChangeQuantity}\n        resetState={this.resetState}\n        {...this.props}\n        {...this.state}\n      />\n    );\n  }\n}\n\nPizzaBoxContainer.propTypes = {\n  cartId: PropTypes.string,\n  priceType: PropTypes.string.isRequired,\n  pizzaType: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  pizzaName: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  cartId: state.cart.cartId,\n});\nexport default connect(mapStateToProps, { initializePizzaBuilder, addToCart })(\n  PizzaBoxContainer\n);\n","import React from 'react';\nimport './Message.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard message alert to the user component */\nconst Message = (props) => {\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <div className='message'>\n          <h4 style={{ display: 'inline' }}>{props.children} </h4>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default Message;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniPizzaImg from '../../../assets/images/pizza_pepperoni.jpg';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  PEPPERONI_PIZZA,\n  MEAT_LOVER,\n  SUPREME,\n} from '../../../metadata/comboMetadata';\nimport Message from '../../UI/Message/Message';\nimport { Link } from 'react-router-dom';\n\n/* Displays popular pizzas */\nconst Home = (props) => {\n  let message = null;\n  if (props.location.fromCheckout) {\n    message = (\n      <Message>\n        <React.Fragment>\n          Thank you for ordering at PizzaTime! View your{' '}\n          <Link className='link' to='/my-orders' data-test='orders'>\n            orders\n          </Link>\n          .\n        </React.Fragment>\n      </Message>\n    );\n  } else if (props.location.fromSignOut) {\n    message = <Message>You are now signed out!</Message>;\n  } else if (props.location.fromSignUp) {\n    message = <Message>You have successfully created an account!</Message>;\n  }\n\n  return (\n    <React.Fragment>\n      {message}\n      <div className='pizza-grid'>\n        <h1 className='pizza-grid__title'>Popular</h1>\n        <div className='pizza-grid__grid'>\n          <PizzaBoxContainer\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            buildPizza\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={PEPPERONI_PIZZA}\n            priceType={REGULAR}\n            imageSrc={PepperoniPizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={MEAT_LOVER}\n            priceType={COMBO}\n            imageSrc={MeatLoversPizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={SUPREME}\n            priceType={COMBO}\n            imageSrc={SupremePizzaImg}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniLoversPizzaImg from '../../../assets/images/pizza_Pepperoni_Lovers.png';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  MEAT_LOVER,\n  SUPREME,\n  SUPER_SUPREME,\n  PEPPERONI_LOVER,\n} from '../../../metadata/comboMetadata';\n\n/* Displays various types of meat pizzas */\nconst Meats = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Meats</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={MEAT_LOVER}\n          priceType={COMBO}\n          imageSrc={MeatLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={PEPPERONI_LOVER}\n          priceType={COMBO}\n          imageSrc={PepperoniLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={SUPER_SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Meats;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport VeggieLoversPizzaImg from '../../../assets/images/pizza_Veggie_Lovers.png';\nimport UltimateCheeseLoverPizzaImg from '../../../assets/images/pizza_Ultimate_Cheese_Lovers.png';\nimport {\n  REGULAR,\n  COMBO,\n  VEGGIE_LOVER,\n  ULTIMATE_CHEESE_LOVER,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of veggy pizzas */\nconst Veggies = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Veggies</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={VEGGIE_LOVER}\n          priceType={COMBO}\n          imageSrc={VeggieLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={ULTIMATE_CHEESE_LOVER}\n          priceType={COMBO}\n          imageSrc={UltimateCheeseLoverPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Veggies;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport HawaiianChickenPizzaImg from '../../../assets/images/pizza_Hawaiian_Chicken.png';\nimport ChickenBaconParmesanImg from '../../../assets/images/pizza_Chicken_Bacon_Parmesan.png';\nimport BBQChickenPizzaImg from '../../../assets/images/pizza_Backyard_BBQ_Chicken.png';\nimport BuffaloChickenPizzaImg from '../../../assets/images/pizza_Buffalo_Chicken.png';\nimport {\n  REGULAR,\n  COMBO,\n  HAWAIIAN_CHICKEN,\n  CHICKEN_BACON_PARMESAN,\n  BBQ_CHICKEN,\n  BUFFALO_CHICKEN,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of chicken pizza */\nconst Chicken = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Chicken</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={HAWAIIAN_CHICKEN}\n          priceType={COMBO}\n          imageSrc={HawaiianChickenPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={CHICKEN_BACON_PARMESAN}\n          priceType={COMBO}\n          imageSrc={ChickenBaconParmesanImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={BBQ_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BBQChickenPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={BUFFALO_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BuffaloChickenPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chicken;\n","import React, { Component } from 'react';\nimport './PizzaBuilderPreview.scss';\nimport PizzaPreview from '../../PizzaPreview/PizzaPreview';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image section of the pizza builder */\nclass PizzaBuilderPreview extends Component {\n  shouldComponentUpdate(prevProps) {\n    if (this.props.pizza !== prevProps.pizza) {\n      return true;\n    }\n    return false;\n  }\n  render() {\n    return (\n      <div className='pizza-builder-preview'>\n        <h4 className='builder-section__title'>Preview</h4>\n        <div className='pizza-builder-preview__preview'>\n          <PizzaPreview pizza={this.props.pizza} />\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaBuilderPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default PizzaBuilderPreview;\n","import React, { Component } from 'react';\nimport Dropdown from '../../UI/Dropdown/Dropdown';\nimport Button, { primary } from '../../UI/Button/Button';\nimport PizzaDescription from '../../PizzaDescription/PizzaDescription';\nimport './PizzaDetails.scss';\nimport { calculatePrice } from '../../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shows pizza description, as well as options to change quantity and add/save to cart */\nclass PizzaDetails extends Component {\n  state = {\n    quantity: this.props.quantity,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.pizza !== nextProps.pizza ||\n      this.state.quantity !== nextState.quantity\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChangeQuantity = (event) => {\n    this.setState({ quantity: parseInt(event.target.value) });\n  };\n\n  render() {\n    const price = calculatePrice(this.props.pizza, true);\n\n    let save = null;\n    if (this.props.itemId) {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.saveToCart(this.state.quantity)}\n        >\n          Save Changes\n        </Button>\n      );\n    } else {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.addToCart(this.state.quantity)}\n        >\n          Add to Cart\n        </Button>\n      );\n    }\n\n    return (\n      <div className='pizza-details'>\n        <h3 className='builder-title'>My Pizza</h3>\n        <div className='pizza-details__details'>\n          <div className='pizza-details__description'>\n            <PizzaDescription\n              quantity={this.state.quantity}\n              pizza={this.props.pizza}\n            />\n          </div>\n          <div className='pizza-details__options'>\n            <h2 className='pizza-details__price'>\n              ${(price * this.state.quantity).toFixed(2)}\n            </h2>\n            <div className='pizza-details__quantity'>\n              <Dropdown\n                className='item__size'\n                options={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n                value={this.state.quantity}\n                onChange={this.handleChangeQuantity}\n                label='quantity'\n              />\n            </div>\n            <div className='pizza-details__save'>{save}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaDetails.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n};\n\nexport default PizzaDetails;\n","import React, { useEffect } from 'react';\nimport './PizzaBuilderProgress.scss';\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS,\n} from '../../../containers/PizzaBuilderContainer';\nimport PropTypes from 'prop-types';\n\n/* Shows progress of steps in the pizza builder */\nconst PizzaBuilderProgress = (props) => {\n  useEffect(() => {}, [props.stage]);\n  return (\n    <div className='progress'>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === TOPPINGS\n            ? 'progress__button progress__button--toppings progress__button--selected'\n            : 'progress__button progress__button--toppings'\n        }\n        value={TOPPINGS}\n      >\n        Toppings\n      </button>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === CHEESE_SAUCE\n            ? 'progress__button progress__button--cheese-sauce progress__button--selected'\n            : 'progress__button progress__button--cheese-sauce'\n        }\n        value={CHEESE_SAUCE}\n      >\n        Cheese &amp; Sauce\n      </button>\n      <button\n        onClick={props.onClick}\n        className='progress__button progress__button--size-crust'\n        value={SIZE_CRUST}\n      >\n        Size &amp; Crust\n      </button>\n    </div>\n  );\n};\n\nPizzaBuilderProgress.propTypes = {\n  stage: PropTypes.oneOf(['SIZE_CRUST', 'CHEESE_SAUCE', 'TOPPINGS']).isRequired,\n};\n\nexport default PizzaBuilderProgress;\n","import React from 'react';\nimport './ImageOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as images in the pizza builder */\nconst ImageOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {Object.keys(props.imageMapping).map((option) => {\n        const selected = props.itemSelected === option;\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className='option'\n            data-value={option}\n          >\n            {selected ? <FaCheckCircle className='option__checkmark' /> : null}\n            <img\n              className='option__img'\n              src={props.imageMapping[option].icon}\n              alt={option}\n            />\n            <div\n              className={\n                selected\n                  ? 'option__name option__name--selected'\n                  : 'option__name'\n              }\n            >\n              {option} {additionalDisplay}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nImageOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ImageOptions;\n","import React from 'react';\nimport './ButtonOptions.scss';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as buttons in the pizza builder */\nconst ButtonOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {props.selectionOptions.map((option) => {\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className={\n              props.itemSelected === option\n                ? 'button-option button-option--selected'\n                : 'button-option'\n            }\n            data-value={option}\n          >\n            {option} {additionalDisplay}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nButtonOptions.propTypes = {\n  selectionOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ButtonOptions;\n","import React, { Component } from 'react';\nimport {\n  crustTypes,\n  crustMetadataMapping,\n} from '../../../../metadata/crustMetadata';\nimport {\n  crust_flavors,\n  crustFlavorImageMapping,\n} from '../../../../metadata/crustFlavorMetadata';\nimport { sizes } from '../../../../metadata/sizeMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SIZE,\n  CRUST,\n  CRUST_FLAVOR,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with size/crust options */\nclass SizeCrustBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Size</h4>\n          <ButtonOptions\n            selectionOptions={sizes}\n            itemSelected={this.props.pizza[SIZE]}\n            onClick={(e) => this.props.onClick(e, SIZE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust</h4>\n          <ImageOptions\n            selectionMetadata={crustMetadataMapping}\n            selectionOptions={crustTypes}\n            itemSelected={this.props.pizza[CRUST]}\n            imageMapping={crustMetadataMapping}\n            onClick={(e) => this.props.onClick(e, CRUST)}\n          />\n        </div>\n\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust Flavor</h4>\n          <ImageOptions\n            selectionOptions={crust_flavors}\n            itemSelected={this.props.pizza[CRUST_FLAVOR]}\n            imageMapping={crustFlavorImageMapping}\n            onClick={(e) => this.props.onClick(e, CRUST_FLAVOR)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSizeCrustBuilder.proptTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default SizeCrustBuilder;\n","import React, { Component } from 'react';\nimport {\n  cheeseAmounts,\n  cheeseAmountMetadataMapping,\n} from '../../../../metadata/cheeseMetadata';\nimport {\n  sauceImageMapping,\n  sauceAmounts,\n  sauceAmountMetadataMapping,\n} from '../../../../metadata/sauceMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with cheese/sauce options */\nclass CheeseSauceBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Sauce</h2>\n          <ImageOptions\n            itemSelected={this.props.pizza[SAUCE]}\n            imageMapping={sauceImageMapping}\n            onClick={(e) => this.props.onClick(e, SAUCE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Sauce</h2>\n          <ButtonOptions\n            selectionMetadata={sauceAmountMetadataMapping}\n            selectionOptions={sauceAmounts}\n            itemSelected={this.props.pizza[SAUCE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, SAUCE_AMOUNT)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Cheese</h2>\n          <ButtonOptions\n            selectionMetadata={cheeseAmountMetadataMapping}\n            selectionOptions={cheeseAmounts}\n            itemSelected={this.props.pizza[CHEESE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, CHEESE_AMOUNT)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCheeseSauceBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default CheeseSauceBuilder;\n","import React from 'react';\nimport './ToppingOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport {\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Interactable topping options */\n\nconst ToppingOptions = (props) => {\n  const onClick = (event) => {\n    event.stopPropagation();\n    props.onClick(event);\n  };\n\n  const onClickAmount = (event) => {\n    event.stopPropagation();\n    props.onClickAmount(event);\n  };\n\n  const onClickPortion = (event) => {\n    event.stopPropagation();\n    props.onClickPortion(event);\n  };\n\n  return (\n    <div className='builder-list'>\n      {Object.keys(props.imageMapping).map((topping) => {\n        const selection = props.itemsSelected.find(\n          (itemSelected) => itemSelected.toppingName === topping\n        );\n        let checkMark = null;\n        let toppingOptionClasses = ['topping-option'];\n        let amountOptions = null;\n        let portionOptions = null;\n        toppingOptionClasses.push('topping-option--selected');\n        amountOptions = (\n          <div className='topping-option__amount'>\n            <div\n              className={\n                selection && selection.amount === EXTRA_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={EXTRA_TOPPING}\n              onClick={onClickAmount}\n            >\n              Extra\n            </div>\n            <div\n              className={\n                selection && selection.amount === REGULAR_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={REGULAR_TOPPING}\n              onClick={onClickAmount}\n            >\n              Regular\n            </div>\n            <div\n              className={\n                !selection\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-value={topping}\n              onClick={onClick}\n            >\n              None\n            </div>\n          </div>\n        );\n        if (selection) {\n          checkMark = <FaCheckCircle className='topping-option__checkmark' />;\n\n          let wholeSelection = selection.portion === WHOLE;\n          let leftSelection = selection.portion === LEFT_HALF;\n          let rightSelection = selection.portion === RIGHT_HALF;\n          portionOptions = (\n            <div className='topping-option__portion'>\n              <div\n                className={\n                  wholeSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={WHOLE}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    wholeSelection\n                      ? 'portion-option__whole portion-option__whole--selected'\n                      : 'portion-option__whole'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  leftSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={LEFT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    leftSelection\n                      ? 'portion-option__left portion-option__left--selected'\n                      : 'portion-option__left'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  rightSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={RIGHT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    rightSelection\n                      ? 'portion-option__right portion-option__right--selected'\n                      : 'portion-option__right'\n                  }\n                ></div>\n              </div>\n            </div>\n          );\n        }\n\n        return (\n          <div\n            key={topping}\n            onClick={props.onClick}\n            className={toppingOptionClasses.join(' ')}\n            data-value={topping}\n          >\n            <div\n              className='topping-option__img-selection'\n              data-value={topping}\n              onClick={onClick}\n            >\n              {checkMark}\n              <img\n                className='topping-option__img'\n                src={props.imageMapping[topping].icon}\n                alt={topping}\n              />\n            </div>\n            <div className='topping-option__details'>\n              <span className='topping-option__name'>{topping}</span>\n              <div\n                className='topping-option__amount-portion'\n                onClick={(e) => e.stopPropagation()}\n              >\n                {amountOptions}\n                {portionOptions}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToppingOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string,\n};\n\nexport default ToppingOptions;\n","import React, { Component } from 'react';\nimport './OptionsButton.scss';\nimport Button, { tertiary } from '../Button/Button';\nimport PropTypes from 'prop-types';\n\n/* Standard single component with one or more button options */\nclass OptionsButton extends Component {\n  state = {};\n\n  handleButtonClick = (option) => {\n    option.onClick();\n  };\n\n  render() {\n    return (\n      <div className='optionsButton'>\n        {this.props.options.map((option) => {\n          let button = null;\n          if (this.props.selectedOption === option.optionName) {\n            button = (\n              <Button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                type={tertiary}\n              >\n                {option.displayName}\n              </Button>\n            );\n          } else {\n            button = (\n              <button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                className='optionsButton__option'\n              >\n                {option.displayName}\n              </button>\n            );\n          }\n          return button;\n        })}\n      </div>\n    );\n  }\n}\n\nOptionsButton.propTypes = {\n  options: PropTypes.array.isRequired,\n};\n\nexport default OptionsButton;\n","import React, { Component } from 'react';\nimport './ToppingsBuilder.scss';\nimport ToppingOptions from '../../BuilderOptions/ToppingOptions/ToppingOptions';\nimport { meatImageMapping } from '../../../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../../../metadata/veggiesMetadata';\nimport { MEATS, VEGGIES } from '../../../../metadata/pizzaProperties';\nimport OptionsButton from '../../../UI/OptionsButton/OptionsButton';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with topping options */\nclass ToppingsBuilder extends Component {\n  state = {\n    stage: this.props.toppingType || MEATS,\n  };\n\n  handleClickVeggies = () => {\n    this.setState({ stage: VEGGIES });\n  };\n\n  handleClickMeats = () => {\n    this.setState({ stage: MEATS });\n  };\n\n  render() {\n    let toppingsBuilder = null;\n    if (this.state.stage === MEATS) {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, MEATS)}\n            onClickAmount={(e) => this.props.onClickAmount(e, MEATS)}\n            onClickPortion={(e) => this.props.onClickPortion(e, MEATS)}\n            imageMapping={meatImageMapping}\n            itemsSelected={this.props.pizza[MEATS]}\n          />\n        </React.Fragment>\n      );\n    } else {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, VEGGIES)}\n            onClickAmount={(e) => this.props.onClickAmount(e, VEGGIES)}\n            onClickPortion={(e) => this.props.onClickPortion(e, VEGGIES)}\n            imageMapping={veggiesImageMapping}\n            itemsSelected={this.props.pizza[VEGGIES]}\n          />\n        </React.Fragment>\n      );\n    }\n\n    const options = [\n      {\n        optionName: MEATS,\n        displayName: 'Meats',\n        onClick: this.handleClickMeats,\n      },\n      {\n        optionName: VEGGIES,\n        displayName: 'Veggies',\n        onClick: this.handleClickVeggies,\n      },\n    ];\n    return (\n      <div className='builder'>\n        <div className='builder__topping-type'>\n          <OptionsButton selectedOption={this.state.stage} options={options} />\n        </div>\n        <div className='builder__topping'></div>\n        {toppingsBuilder}\n      </div>\n    );\n  }\n}\n\nToppingsBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default ToppingsBuilder;\n","import React from 'react';\nimport './PizzaBuilder.scss';\nimport PizzaBuilderPreview from './PizzaBuilderPreview/PizzaBuilderPreview';\nimport PizzaDetails from './PizzaDetails/PizzaDetails';\nimport PizzaBuilderProgress from './PizzaBuilderProgress/PizzaBuilderProgress';\nimport Modal from '../../components/UI/Modal/Modal';\nimport SizeCrustBuilder from '../../components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder';\nimport CheeseSauceBuilder from '../../components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder';\nimport ToppingsBuilder from '../../components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport PropTypes from 'prop-types';\nimport { normalizePizza } from '../../shared/util';\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS,\n} from '../../containers/PizzaBuilderContainer';\n\n/* All controls for building your own pizza */\nconst PizzaBuilder = (props) => {\n  /* Set provided value on given property on current pizza */\n  const handleClickProperty = (event, property) => {\n    props.setProperty(property, event.currentTarget.dataset.value);\n  };\n\n  /* Toggle given topping on current pizza */\n  const handleClickTopping = (event, property) => {\n    props.toggleTopping(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  const handleClickAmount = (event, property) => {\n    props.setToppingAmount(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  const handleClickPortion = (event, property) => {\n    props.setToppingPortion(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  /* Add current pizza to cart and close pizza builder */\n  const handleAddToCart = (quantity) => {\n    props.addToCart(props.cartId, normalizePizza(props.pizza), quantity);\n    props.handleCloseBuilder();\n  };\n\n  /* Save current pizza to cart and close pizza builder */\n  const handleSaveToCart = (quantity) => {\n    props.saveToCart(\n      props.cartId,\n      normalizePizza(props.pizza),\n      quantity,\n      props.cartQuantity,\n      props.itemId\n    );\n    props.handleCloseBuilder();\n  };\n\n  let builder = null;\n  let back = null;\n  let next = null;\n\n  /* helper function that returns button that moves\n       pizza builder to specified stage */\n  const getActionButton = (stage, buttonName) => {\n    return (\n      <div className='builder-action__step'>\n        <Button type={primary} onClick={() => props.handleClickAction(stage)}>\n          {buttonName}\n        </Button>\n      </div>\n    );\n  };\n\n  /* set SizeCrustBuilder for SIZE_CRUST stage\n       and appopriate next button */\n  if (props.stage === SIZE_CRUST) {\n    builder = (\n      <SizeCrustBuilder pizza={props.pizza} onClick={handleClickProperty} />\n    );\n    next = getActionButton(CHEESE_SAUCE, 'Next');\n  } else if (props.stage === CHEESE_SAUCE) {\n    /* set CheeseSauceBuilder for CHEESE_SAUCE stage\n       and appropriate back/next buttons */\n    builder = (\n      <CheeseSauceBuilder pizza={props.pizza} onClick={handleClickProperty} />\n    );\n    back = getActionButton(SIZE_CRUST, 'Back');\n    next = getActionButton(TOPPINGS, 'Next');\n  } else if (props.stage === TOPPINGS) {\n    /* set ToppingsBuilder for TOPPINGS stage\n       and appropriate back button */\n\n    builder = (\n      <ToppingsBuilder\n        pizza={props.pizza}\n        onClick={handleClickTopping}\n        onClickAmount={handleClickAmount}\n        onClickPortion={handleClickPortion}\n      />\n    );\n    back = getActionButton(CHEESE_SAUCE, 'Back');\n  }\n\n  let totalBuilder = null;\n  if (props.showPizzaBuilder) {\n    totalBuilder = (\n      <div className='totalBuilder'>\n        <div className='totalBuilder__mypizza'>\n          <div className='totalBuilder__details'>\n            <PizzaDetails\n              addToCart={handleAddToCart}\n              saveToCart={handleSaveToCart}\n              pizza={props.pizza}\n              quantity={props.quantity}\n              itemId={props.itemId}\n            />\n          </div>\n          <div className='totalBuilder__preview'>\n            <PizzaBuilderPreview pizza={props.pizza} />\n          </div>\n        </div>\n        <div className='totalBuilder__builder'>\n          <h3 className='builder-title'>Pizza Builder</h3>\n          <div className='builder-progress'>\n            <PizzaBuilderProgress\n              stage={props.stage}\n              onClick={props.handleClickStage}\n            />\n          </div>\n          {builder}\n          <div className='builder-action'>\n            {back}\n            {next}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal show={props.showPizzaBuilder} modalClosed={props.handleCloseBuilder}>\n      {totalBuilder}\n    </Modal>\n  );\n};\n\nPizzaBuilder.propTypes = {\n  itemId: PropTypes.string,\n  pizza: PropTypes.object,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  showPizzaBuilder: PropTypes.bool,\n};\n\nexport default PizzaBuilder;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart, saveToCart } from '../store/cart/cartActions/cartActions';\nimport {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n} from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport PropTypes from 'prop-types';\nimport PizzaBuilder from '../components/PizzaBuilder/PizzaBuilder';\n\n/* Stages that are possible for pizza builder.\n   Set in state. */\nexport const SIZE_CRUST = 'SIZE_CRUST';\nexport const CHEESE_SAUCE = 'CHEESE_SAUCE';\nexport const TOPPINGS = 'TOPPINGS';\n\n/* Main container for entire pizza builder */\nclass PizzaBuilderContainer extends Component {\n  state = {\n    stage: SIZE_CRUST,\n  };\n\n  /* Set current stage of pizza builder based on \n    PizzaBuilderProgres component */\n  handleClickStage = (event) => {\n    this.setState({ stage: event.target.value });\n  };\n\n  /* Set current stage of pizza builder based on\n     Back/Next buttons */\n  handleClickAction = (stage) => {\n    this.setState({ stage: stage });\n  };\n\n  /* Reset to first stage and close pizza builder */\n  handleCloseBuilder = () => {\n    this.setState({ stage: SIZE_CRUST });\n    this.props.closePizzaBuilder();\n  };\n\n  render() {\n    return (\n      <PizzaBuilder\n        stage={this.state.stage}\n        handleClickAction={this.handleClickAction}\n        handleClickStage={this.handleClickStage}\n        handleCloseBuilder={this.handleCloseBuilder}\n        {...this.props}\n      />\n    );\n  }\n}\n\nPizzaBuilderContainer.propTypes = {\n  cartId: PropTypes.string,\n  itemId: PropTypes.string,\n  pizza: PropTypes.object,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  cartQuantity: PropTypes.number,\n  showPizzaBuilder: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  cartId: state.cart.cartId,\n  itemId: state.pizzaBuilder.itemId,\n  pizza: state.pizzaBuilder.pizza,\n  quantity: state.pizzaBuilder.quantity,\n  cartQuantity: state.cart.quantity,\n  showPizzaBuilder: state.pizzaBuilder.showPizzaBuilder,\n});\n\nexport default connect(mapStateToProps, {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n  addToCart,\n  saveToCart,\n})(PizzaBuilderContainer);\n","import React from 'react';\nimport './CartItem.scss';\nimport PizzaDescription from '../../components/PizzaDescription/PizzaDescription';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport PizzaPreview from '../../components/PizzaPreview/PizzaPreview';\nimport { SyncLoader } from 'react-spinners';\nimport { isEqual } from 'lodash';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Single cart item with pizza description, price, quantity and edit/remove options */\nconst CartItem = (props) => {\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  /* Open the pizza builder for editing a pizza */\n  const handleEditItem = () => {\n    props.initializePizzaBuilder(props.pizza, props.quantity, props.itemId);\n  };\n\n  /* Change the quantity of an item in redux store */\n  const handleChangeItemQuantity = (event) => {\n    props.changeItemQuantity(\n      props.cartId,\n      props.itemId,\n      props.pizza,\n      parseInt(event.target.value)\n    );\n  };\n\n  /* Remove item from cart */\n  const handleRemoveItem = () => {\n    props.removeItem(props.cartId, props.itemId, props.pizza);\n  };\n\n  let remove = null;\n  if (!props.checkout) {\n    remove = (\n      <span className='link' onClick={handleRemoveItem}>\n        Remove\n      </span>\n    );\n  }\n\n  let overallPrice = (calculatePrice(props.pizza) * props.quantity).toFixed(2);\n\n  let cartItem = null;\n  if (\n    props.loadingCartItem &&\n    isEqual(props.itemIdBeingChanged, props.itemId)\n  ) {\n    cartItem = (\n      <div className='item__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else {\n    cartItem = (\n      <div className='item'>\n        <div className='item__pizza u-margin-right'>\n          <div className='item__preview'>\n            <PizzaPreview small pizza={props.pizza} />\n          </div>\n          <div className='item__description'>\n            <PizzaDescription\n              cart\n              pizza={props.pizza}\n              quantity={props.quantity}\n            />\n          </div>\n        </div>\n        <div className='item__details'>\n          <div className='item__price'>${overallPrice}</div>\n          <div className='item__quantity'>\n            <Dropdown\n              onChange={handleChangeItemQuantity}\n              options={quantityOptions}\n              value={props.quantity}\n              label='quantity'\n            />\n          </div>\n          <div className='item__actions'>\n            <span className='item__edit link' onClick={handleEditItem}>\n              Edit\n            </span>\n            {remove}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return cartItem;\n};\n\nCartItem.propTypes = {\n  cartId: PropTypes.string,\n  itemIdBeingChanged: PropTypes.string,\n  loadingCartItem: PropTypes.bool,\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  checkout: PropTypes.bool,\n};\n\nexport default CartItem;\n","import React from 'react';\nimport CartItem from '../../components/CartItem/CartItem';\nimport PropTypes from 'prop-types';\n\n/* All cart items to display in cart and order summary pages */\nconst CartItems = (props) => {\n  return props.items.map((item) => {\n    return (\n      <CartItem\n        key={item._id}\n        itemId={item._id}\n        pizza={item.pizza}\n        quantity={item.quantity}\n        changeItemQuantity={props.changeItemQuantity}\n        removeItem={props.removeItem}\n        initializePizzaBuilder={props.initializePizzaBuilder}\n        checkout={props.checkout}\n        loadingCartItem={props.loadingCartItem}\n        itemIdBeingChanged={props.itemIdBeingChanged}\n        cartId={props.cartId}\n      />\n    );\n  });\n};\n\nCartItems.propTypes = {\n  cartId: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n};\n\nexport default CartItems;\n","import React from 'react';\nimport CartItems from '../../components/CartItems/CartItems';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { SyncLoader } from 'react-spinners';\nimport { calculateSubTotal } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shopping cart with all added cart items */\nconst Cart = (props) => {\n  const subTotal = calculateSubTotal(props.items);\n\n  let cart = null;\n  if (props.loadingCart) {\n    cart = (\n      <div className='item-list__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else if (props.items.length > 0) {\n    cart = (\n      <React.Fragment>\n        <CartItems\n          initializePizzaBuilder={props.initializePizzaBuilder}\n          removeItem={props.removeItem}\n          changeItemQuantity={props.changeItemQuantity}\n          items={props.items}\n          loadingCartItem={props.loadingCartItem}\n          itemIdBeingChanged={props.itemIdBeingChanged}\n          cartId={props.cartId}\n        />\n        <div className='item-list__bottom'>\n          <div className='totals'>\n            <div className='totals__line-items'>\n              <div className='totals__line-item'>\n                <h3>Subtotal:</h3> <h3>${subTotal}</h3>\n              </div>\n            </div>\n\n            <Link\n              to={{\n                pathname: props.userId ? '/checkout/order-type' : '/signin',\n                fromCheckout: true,\n              }}\n            >\n              <Button type={primary}>Checkout</Button>\n            </Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    const emptyCartMessage = <h2>Your cart is empty!</h2>;\n    const errorMessage = <h2>Unable to retrieve your cart!</h2>;\n\n    let message = null;\n    if (props.signInError || props.signUpError) {\n      message = errorMessage;\n    } else {\n      message = emptyCartMessage;\n    }\n    cart = <div className='item-list__empty'>{message}</div>;\n  }\n\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <h1 className='item-list__title'>Shopping Cart</h1>\n        {cart}\n      </div>\n    </div>\n  );\n};\n\nCart.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool.isRequired,\n  loadingCartItem: PropTypes.bool.isRequired,\n  itemIdBeingChanged: PropTypes.string,\n  userId: PropTypes.string,\n  cartId: PropTypes.string,\n  signInError: PropTypes.string,\n  signUpError: PropTypes.string,\n};\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport {\n  changeItemQuantity,\n  removeItem,\n} from '../store/cart/cartActions/cartActions';\nimport PropTypes from 'prop-types';\nimport Cart from '../components/Cart/Cart';\n\n/* Shopping cart container with all added cart items */\nclass CartContainer extends Component {\n  render() {\n    return <Cart {...this.props} />;\n  }\n}\n\nCartContainer.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool.isRequired,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  userId: PropTypes.string,\n  cartId: PropTypes.string,\n  signInError: PropTypes.string,\n  signUpError: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  loadingCart: state.cart.loadingCart,\n  loadingCartItem: state.cart.loadingCartItem,\n  itemIdBeingChanged: state.cart.itemIdBeingChanged,\n  userId: state.auth.userId,\n  cartId: state.cart.cartId,\n  signInError: state.auth.signInError,\n  signUpError: state.auth.signUpError,\n});\n\nexport default connect(mapStateToProps, {\n  initializePizzaBuilder,\n  changeItemQuantity,\n  removeItem,\n})(CartContainer);\n","import React from 'react';\nimport './Input.scss';\nimport Dropdown from '../Dropdown/Dropdown';\nimport PropTypes from 'prop-types';\n\n/* Standard input element to be included in forms */\nconst Input = (props) => {\n  let inputElement = null;\n  const inputClasses = ['input__element'];\n  let validationError = null;\n  if (\n    props.invalid &&\n    props.shouldValidate &&\n    props.touched &&\n    props.formSubmitted\n  ) {\n    inputClasses.push('input__invalid');\n    validationError = (\n      <p className='input__error-message'>{props.errorMessage}</p>\n    );\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <Dropdown\n          size={props.elementConfig.size}\n          options={props.elementConfig.options}\n          value={props.value}\n          onChange={props.onChange}\n          label={props.label}\n        />\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n  }\n  return (\n    <div className='input'>\n      <label>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  invalid: PropTypes.bool.isRequired,\n  shouldValidate: PropTypes.object.isRequired,\n  touched: PropTypes.bool,\n  formSubmitted: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  elementConfig: PropTypes.object.isRequired,\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  elementType: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","/* Form validation helper functions */\n\nconst formatPhoneNumber = (digits) => {\n  const cleaned = digits.replace(/\\D/g, '');\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    return `( ${match[1]} ) ${match[2]} - ${match[3]}`;\n  }\n  return digits;\n};\n\nexport const handleInputChange = (form, event, inputId) => {\n  const updatedForm = {\n    ...form,\n  };\n\n  const updatedFormElement = {\n    ...updatedForm[inputId],\n  };\n\n  let trimmedValue = event.target.value.trim();\n\n  if (updatedFormElement.elementType === 'phonenumber') {\n    updatedFormElement.value = formatPhoneNumber(trimmedValue);\n  } else {\n    updatedFormElement.value = trimmedValue;\n  }\n  updatedFormElement.valid = checkValidity(\n    updatedFormElement.value,\n    updatedFormElement.validation\n  );\n  updatedFormElement.touched = true;\n  updatedForm[inputId] = updatedFormElement;\n\n  let formIsValid = true;\n  for (let inputId in updatedForm) {\n    formIsValid = updatedForm[inputId].valid && formIsValid;\n  }\n  return { form: updatedForm, formIsValid: formIsValid };\n};\n\nconst checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d*$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isPhoneNumber) {\n    const pattern = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","import React from 'react';\nimport Button, { primary } from '../Button/Button';\nimport Input from '../Input/Input';\nimport { handleInputChange } from '../../../shared/formValidation.js';\nimport PropTypes from 'prop-types';\n\n/* Standard form component across entire app */\nconst Form = (props) => {\n  const handleChange = (event, inputId) => {\n    const updatedFormData = handleInputChange(props.form, event, inputId);\n    props.updateForm({\n      form: updatedFormData.form,\n      formIsValid: updatedFormData.formIsValid,\n    });\n  };\n\n  const formElementsArray = [];\n  for (let key in props.form) {\n    formElementsArray.push({\n      id: key,\n      config: props.form[key],\n    });\n  }\n\n  let form = null;\n  form = (\n    <React.Fragment>\n      {formElementsArray.map((formElement) => {\n        return (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            shouldValidate={formElement.config.validation}\n            invalid={!formElement.config.valid}\n            touched={formElement.config.touched}\n            formSubmitted={props.formSubmitted}\n            errorMessage={formElement.config.errorMessage}\n            onChange={(e) => handleChange(e, formElement.id)}\n          />\n        );\n      })}\n      <div className='form-component__submit'>\n        <Button\n          type={primary}\n          disabled={props.formSubmitted && !props.formIsValid}\n        >\n          Submit\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <form className='form-component__form' onSubmit={props.onSubmit}>\n      {form}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  form: PropTypes.object.isRequired,\n  formSubmitted: PropTypes.bool.isRequired,\n  formIsValid: PropTypes.bool.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport './SignIn.scss';\nimport Button, { secondary } from '../../components/UI/Button/Button';\nimport { SyncLoader } from 'react-spinners';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Sign in form */\nconst SignIn = (props) => {\n  let form = (\n    <Form\n      {...props}\n      onSubmit={props.handleSubmit}\n      updateForm={props.updateForm}\n    />\n  );\n  if (props.loadingUser) {\n    form = (\n      <div className='spinner'>\n        <SyncLoader />\n      </div>\n    );\n  }\n\n  let errorMessage = null;\n  if (props.error) {\n    if (props.error.status === 500) {\n      errorMessage = 'Internal server error.';\n    } else {\n      errorMessage = props.error.data.message;\n    }\n  }\n\n  let redirect = null;\n  if (props.isAuthenticated) {\n    if (props.location.fromCheckout) {\n      redirect = <Redirect to='/checkout/order-type' />;\n    } else {\n      redirect = <Redirect to='/' />;\n    }\n  }\n\n  return (\n    <div className='form-container'>\n      <div className='form-component'>\n        <h3 className='form-component__title'>\n          Please sign in to your account\n        </h3>\n        {redirect}\n        <div className='form-component__error'>{errorMessage}</div>\n        {form}\n        <div className='signup'>\n          <Link\n            to={{\n              pathname: '/signup',\n              fromCheckout: props.location.fromCheckout,\n            }}\n          >\n            <Button type={secondary}>Sign Up</Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default SignIn;\n","import React, { Component } from 'react';\nimport { signIn, authReset } from '../../store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SignIn from '../../components/SignIn/SignIn';\n\n/* Sign in form container */\nclass SignInContainer extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signIn(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  componentWillUnmount() {\n    if (this.props.error) {\n      this.props.authReset();\n    }\n  }\n\n  render() {\n    return (\n      <SignIn\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nSignInContainer.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingUser: state.auth.loadingUser,\n  error: state.auth.signInError,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { signIn, authReset })(SignInContainer);\n","import React from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport PropTypes from 'prop-types';\n\n/* User sign up form */\nconst SignUp = (props) => {\n  let form = (\n    <Form\n      {...props}\n      onSubmit={props.handleSubmit}\n      updateForm={props.updateForm}\n    />\n  );\n  if (props.loadingUser) {\n    form = (\n      <div className='spinner'>\n        <SyncLoader />\n      </div>\n    );\n  }\n\n  let errorMessage = null;\n  if (props.error) {\n    if (props.error.status === 500) {\n      errorMessage = 'Internal server error.';\n    } else if (props.error.data.message === 'Duplicate field value entered') {\n      errorMessage = 'The email you entered is already taken.';\n    } else {\n      errorMessage = props.error.data.message;\n    }\n  }\n\n  let redirect = null;\n  if (props.isAuthenticated) {\n    if (props.location.fromCheckout) {\n      redirect = (\n        <Redirect\n          to={{ pathname: '/checkout/order-type', fromSignUp: 'true' }}\n        />\n      );\n    } else {\n      redirect = <Redirect to={{ pathname: '/', fromSignUp: 'true' }} />;\n    }\n  }\n\n  return (\n    <div className='form-container'>\n      <div className='form-component'>\n        <h3 className='form-component__title'>Sign up for an account</h3>\n        {redirect}\n        <div className='form-component__error'>{errorMessage}</div>\n        {form}\n      </div>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport { signUp, authReset } from '../../store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SignUp from '../../components/SignUp/SignUp';\n\n/* User sign up form */\nclass SignUpContainer extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signUp(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  componentWillUnmount() {\n    this.props.authReset();\n  }\n\n  render() {\n    return (\n      <SignUp\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nSignUpContainer.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingUser: state.auth.loadingUser,\n  error: state.auth.signUpError,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { signUp, authReset })(SignUpContainer);\n","import React, { Component } from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { withRouter } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport PropTypes from 'prop-types';\n\n/* Delivery address form */\nclass AddressForm extends Component {\n  constructor(props) {\n    super(props);\n    this.props.validateDeliveryAddressReset();\n  }\n\n  componentDidUpdate() {\n    if (this.props.addressValid) {\n      this.props.history.push('/checkout');\n    }\n  }\n\n  render() {\n    let errorMessage = null;\n    let form = null;\n    if (this.props.loading) {\n      form = (\n        <div className='spinner'>\n          <SyncLoader />\n        </div>\n      );\n    } else {\n      form = (\n        <Form\n          {...this.props}\n          onSubmit={this.props.handleSubmit}\n          updateForm={this.props.updateForm}\n        />\n      );\n    }\n\n    if (this.props.error) {\n      errorMessage = (\n        <div className='form-component__error'>\n          <p>{this.props.error}</p>\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <h4 className='form-component__title'>\n          Please enter your delivery address\n        </h4>\n        {errorMessage}\n        {form}\n      </React.Fragment>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.string,\n  addressValid: PropTypes.bool,\n};\n\nexport default withRouter(AddressForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddressForm from '../components/AddressForm/AddressForm';\nimport {\n  validateDeliveryAddress,\n  validateDeliveryAddressReset,\n} from '../store/checkout/checkoutActions/checkoutActions.js';\nimport withErrorHandler from '../hoc/withErrorHandler';\nimport axios from 'axios';\n\nclass AddressFormContainer extends Component {\n  state = {\n    form: {\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Street Address',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      unit: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Apt/Unit #',\n        },\n        validation: {\n          isNumeric: true,\n        },\n        errorMessage: 'Please enter only the Apt/Unit number',\n        value: '',\n        valid: true,\n      },\n      city: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'City',\n        },\n        value: '',\n        validation: {\n          hasLength: 2,\n          required: true,\n        },\n        valid: false,\n      },\n      state: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'State',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      zipcode: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'ZIP Code',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.validateDeliveryAddress(this.state.form);\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  render() {\n    return (\n      <AddressForm\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nAddressFormContainer.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.string,\n  addressValid: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  addressValid: state.checkout.addressValid,\n  error: state.checkout.addressValidationError,\n  loading: state.checkout.validatingAddress,\n});\n\nexport default connect(mapStateToProps, {\n  validateDeliveryAddress,\n  validateDeliveryAddressReset,\n})(withErrorHandler(AddressFormContainer, axios));\n","import React, { Component } from 'react';\nimport './OrderType.scss';\nimport { MdDirectionsCar, MdStore } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport AddressFormContainer from '../../containers/AddressFormContainer';\nimport Message from '../../components/UI/Message/Message';\nimport PropTypes from 'prop-types';\nimport { clearDeliveryAddress } from '../../store/checkout/checkoutActions/checkoutActions';\n\n/* Options for choosing either carryout or delivery order */\nclass OrderType extends Component {\n  state = {\n    isDelivery: false,\n  };\n\n  handleClick = (event) => {\n    if (event.currentTarget.dataset.type === 'Delivery') {\n      this.setState({ isDelivery: true });\n    } else {\n      this.props.clearDeliveryAddress();\n      this.props.history.push('/checkout');\n    }\n  };\n\n  render() {\n    let message = null;\n    if (this.props.location.fromSignUp) {\n      message = <Message>You have successfully created an account!</Message>;\n    }\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/signin',\n            fromCheckout: true,\n          }}\n        />\n      );\n    }\n\n    let form = null;\n\n    if (this.state.isDelivery) {\n      form = <AddressFormContainer />;\n    }\n\n    let orderTypeClassNames = ['order-type'];\n    let deliveryClassNames = ['order-type__type'];\n    let iconClassNames = ['order-type__icon'];\n    if (this.state.isDelivery) {\n      orderTypeClassNames.push('order-type--extended');\n      deliveryClassNames.push('order-type__type--selected');\n      iconClassNames.push('order-type__icon--selected');\n    }\n\n    return (\n      <React.Fragment>\n        {message}\n        <div className='form-container'>\n          <div className='form-component'>\n            <h4 className='form-component__title'>\n              Please choose an order method\n            </h4>\n            <div className={orderTypeClassNames.join(' ')}>\n              <div\n                onClick={this.handleClick}\n                data-type='Delivery'\n                className={deliveryClassNames.join(' ')}\n              >\n                <div className={iconClassNames.join(' ')}>\n                  <MdDirectionsCar />\n                </div>\n                <span className='order-type__description'>Delivery</span>\n              </div>\n              <div\n                onClick={this.handleClick}\n                data-type='Carryout'\n                className='order-type__type'\n              >\n                <div className='order-type__icon'>\n                  <MdStore />\n                </div>\n                <span className='order-type__description'>Carryout</span>\n              </div>\n            </div>\n            {form}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nOrderType.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { clearDeliveryAddress })(OrderType);\n","import React, { Component } from 'react';\nimport './Checkout.scss';\nimport CartItems from '../../components/CartItems/CartItems';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { calculateSubTotal, calculateTax } from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport DeliveryAddress from '../../components/DeliveryAddress/DeliveryAddress';\nimport PropTypes from 'prop-types';\n\n/* Order summary and ability to submit an order */\nclass Checkout extends Component {\n  handleSubmitOrder = (total) => {\n    this.props.submitOrder(\n      total,\n      this.props.items,\n      this.props.deliveryAddress,\n      this.props.cartId\n    );\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.submittingOrder &&\n      !this.props.submittingOrder &&\n      !this.props.submitOrderError\n    ) {\n      this.props.history.push({ pathname: '/', fromCheckout: true });\n      this.props.emptyCart(this.props.cartId);\n    }\n  }\n\n  render() {\n    const subTotal = calculateSubTotal(this.props.items);\n    const tax = calculateTax(subTotal);\n    const total = (+subTotal + +tax).toFixed(2);\n    let deliveryAddress = null;\n    if (this.props.deliveryAddress) {\n      deliveryAddress = (\n        <DeliveryAddress deliveryAddress={this.props.deliveryAddress} />\n      );\n    }\n\n    let submitOrder = null;\n    if (this.props.submittingOrder) {\n      submitOrder = (\n        <Button type={primary}>\n          <SyncLoader color='white' size='10px' />\n        </Button>\n      );\n    } else {\n      submitOrder = (\n        <Button onClick={() => this.handleSubmitOrder(total)} type={primary}>\n          Place Order\n        </Button>\n      );\n    }\n\n    let cart = null;\n    if (this.props.loadingCart) {\n      cart = (\n        <div className='item-list__empty'>\n          <SyncLoader />\n        </div>\n      );\n    } else if (Object.keys(this.props.items).length > 0) {\n      cart = (\n        <React.Fragment>\n          <CartItems\n            initializePizzaBuilder={this.props.initializePizzaBuilder}\n            removeItem={this.props.removeItem}\n            changeItemQuantity={this.props.changeItemQuantity}\n            checkout\n            items={this.props.items}\n            loadingCartItem={this.props.loadingCartItem}\n            itemIdBeingChanged={this.props.itemIdBeingChanged}\n            cartId={this.props.cartId}\n          />\n          <div className='item-list__bottom'>\n            <div className='delivery-address'>{deliveryAddress}</div>\n            <div className='totals'>\n              <div className='totals__line-items'>\n                <div className='totals__line-item'>\n                  <h4>Subtotal:</h4> <h4>${subTotal}</h4>\n                </div>\n                <div className='totals__line-item'>\n                  <h4>Tax:</h4> <h4>${tax}</h4>\n                </div>\n                <div className='totals__line-item'>\n                  <h2>Total:</h2> <h2>${total}</h2>\n                </div>\n              </div>\n\n              {submitOrder}\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      cart = (\n        <div className='item-list__empty'>\n          <h2>Your cart is empty!</h2>\n        </div>\n      );\n    }\n\n    return (\n      <div className='item-list-container'>\n        <div className='item-list'>\n          <h1 className='item-list__title'>Checkout</h1>\n          {cart}\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  submitOrderError: PropTypes.bool,\n  submittingOrder: PropTypes.bool,\n  deliveryAddress: PropTypes.object,\n};\n\nexport default Checkout;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { submitOrder } from '../store/checkout/checkoutActions/checkoutActions';\nimport {\n  emptyCart,\n  changeItemQuantity,\n  removeItem,\n} from '../store/cart/cartActions/cartActions';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport PropTypes from 'prop-types';\nimport Checkout from '../components/Checkout/Checkout';\n\n/* Container for order summary and ability to submit an order */\nconst CheckoutContainer = (props) => {\n  return <Checkout {...props} />;\n};\n\nCheckoutContainer.propTypes = {\n  items: PropTypes.array.isRequired,\n  cartId: PropTypes.string,\n  loadingCart: PropTypes.bool,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  submitOrderError: PropTypes.bool,\n  submittingOrder: PropTypes.bool,\n  deliveryAddress: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  cartId: state.cart.cartId,\n  loadingCart: state.cart.loadingCart,\n  loadingCartItem: state.cart.loadingCartItem,\n  itemIdBeingChanged: state.cart.itemIdBeingChanged,\n  submittingOrder: state.checkout.submittingOrder,\n  deliveryAddress: state.checkout.deliveryAddress,\n  submitOrderError: state.checkout.submitOrderError,\n});\n\nexport default connect(mapStateToProps, {\n  submitOrder,\n  emptyCart,\n  removeItem,\n  initializePizzaBuilder,\n  changeItemQuantity,\n})(CheckoutContainer);\n","import React from 'react';\nimport './Sidebar.scss';\nimport PizzaMenuItems from '../../components/PizzaMenuItems/PizzaMenuItems';\nimport AccountMenuItems from '../../components/AccountMenuItems/AccountMenuItems';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport PropTypes from 'prop-types';\n\n/* Sidebar menu with pizza menu items and account menu items */\nconst Sidebar = (props) => {\n  const handleClickMenuItem = () => {\n    props.closeSidebar();\n  };\n\n  let sidebarContainerClassNames = ['sidebar-container'];\n  let sidebarClassNames = ['sidebar'];\n  if (!props.sidebarOpen) {\n    sidebarClassNames.push('sidebar--closed');\n    sidebarContainerClassNames.push('sidebar-container--closed');\n  }\n\n  return (\n    <div\n      onClick={handleClickMenuItem}\n      className={sidebarContainerClassNames.join(' ')}\n    >\n      <div className={sidebarClassNames.join(' ')}>\n        <div className='sidebar__menu-items'>\n          <PizzaMenuItems vertical />\n        </div>\n        <div className='sidebar__account'>\n          <NavigationItem vertical to='/cart'>\n            Cart\n          </NavigationItem>\n          <AccountMenuItems vertical isAuthenticated={props.isAuthenticated} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeSidebar } from '../store/ui/uiActions/uiActions';\nimport PropTypes from 'prop-types';\nimport Sidebar from '../components/Sidebar/Sidebar';\n\n/* Container for sidebar menu with pizza menu items and account menu items */\nconst SidebarContainer = (props) => {\n  return <Sidebar {...props} />;\n};\n\nSidebarContainer.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  sidebarOpen: state.ui.sidebarOpen,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { closeSidebar })(SidebarContainer);\n","import React, { Component, lazy, Suspense } from 'react';\nimport './App.scss';\nimport Layout from './components/Layout/Layout/Layout';\nimport Home from './components/PizzaCategories/Home/Home';\nimport Meats from './components/PizzaCategories/Meats/Meats';\nimport Veggies from './components/PizzaCategories/Veggies/Veggies';\nimport Chicken from './components/PizzaCategories/Chicken/Chicken';\nimport PizzaBuilderContainer from './containers/PizzaBuilderContainer';\nimport { Route, Switch } from 'react-router-dom';\nimport CartContainer from './containers/CartContainer';\nimport SignInContainer from './containers/Auth/SignInContainer';\nimport SignUpContainer from './containers/Auth/SignUpContainer';\nimport { authenticateToken } from './store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport OrderType from './components/OrderType/OrderType';\nimport CheckoutContainer from './containers/CheckoutContainer';\nimport SidebarContainer from './containers/SidebarContainer';\n\nconst OrdersContainer = lazy(() => import('./containers/OrdersContainer'));\n\nexport class App extends Component {\n  componentDidMount() {\n    this.props.authenticateToken();\n  }\n\n  render() {\n    return (\n      <Layout data-test='layout'>\n        <PizzaBuilderContainer data-test='pizzaBuilder' />\n        <SidebarContainer data-test='sidebar' />\n        <Switch>\n          <Route exact path='/checkout' component={CheckoutContainer} />\n          <Route path='/checkout/order-type' component={OrderType} />\n          <Route path='/signin' component={SignInContainer} />\n          <Route path='/signup' component={SignUpContainer} />\n          <Route path='/my-orders' component={OrdersContainer} />\n          <Route path='/cart' component={CartContainer} />\n          <Route path='/' exact component={Home} />\n          <Route path='/meats' exact component={Meats} />\n          <Route path='/veggies' exact component={Veggies} />\n          <Route path='/chicken' exact component={Chicken} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null, { authenticateToken })(App);\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/* Scroll to top of page when it is loaded */\nconst ScrollToTop = ({ history, children }) => {\n  useEffect(() => {\n    history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n  }, [history]);\n  return children;\n};\n\nexport default withRouter(ScrollToTop);\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { Router } from 'react-router-dom';\nimport ScrollToTop from './hoc/ScrollToTop';\n\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory({\n  basename: `${process.env.REACT_APP_BASE_URL}`,\n});\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n","export const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n"],"sourceRoot":""}