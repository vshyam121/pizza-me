{"version":3,"sources":["assets/images/pizza_supreme.png","assets/images/topping_GreenBellPepper_ML_reg.png","assets/images/pizza_meat_lovers.png","assets/images/topping_Pepperoni_ML_reg.png","assets/images/topping_Pepperoni_ML_extra.png","assets/images/icon_topping_Pepperoni.png","assets/images/topping_ItalianSausage_ML_reg.png","assets/images/topping_ItalianSausage_ML_extra.png","assets/images/icon_topping_ItalianSausage.png","assets/images/topping_Ham_ML_reg.png","assets/images/topping_Ham_ML_extra.png","assets/images/icon_topping_Ham.png","assets/images/topping_Bacon_ML_reg.png","assets/images/topping_Bacon_ML_extra.png","assets/images/icon_topping_Bacon.png","assets/images/topping_Chicken_ML_reg.png","assets/images/topping_Chicken_ML_extra.png","assets/images/icon_topping_Chicken.png","assets/images/topping_Beef_ML_reg.png","assets/images/topping_Beef_ML_extra.png","assets/images/icon_topping_Beef.png","assets/images/topping_Pork_ML_reg.png","assets/images/topping_Pork_ML_extra.png","assets/images/icon_topping_Pork.png","assets/images/topping_Mushroom_ML_reg.png","assets/images/topping_Mushroom_ML_extra.png","assets/images/icon_topping_Mushroom.png","assets/images/topping_Spinach_Fresh_ML_reg.png","assets/images/topping_Spinach_Fresh_ML_extra.png","assets/images/icon_topping_Spinach_fresh.png","assets/images/topping_Onion_red_ML_reg.png","assets/images/topping_Onion_red_ML_extra.png","assets/images/icon_topping_Onion_Red.png","assets/images/topping_Olives_black_ML_reg.png","assets/images/topping_Olives_black_ML_extra.png","assets/images/icon_topping_Olive_black.png","assets/images/icon_topping_GreenBellPepper.png","assets/images/topping_BananaPepper_ML_reg.png","assets/images/topping_BananaPepper_ML_extra.png","assets/images/icon_topping_BananaPepper.png","assets/images/topping_Pineapple_ML_reg.png","assets/images/topping_Pineapple_ML_extra.png","assets/images/icon_topping_Pineapple.png","assets/images/topping_Jalepeno_ML_reg.png","assets/images/topping_Jalepeno_ML_extra.png","assets/images/icon_topping_Jalapeno.png","assets/images/topping_Tomato_ML_reg.png","assets/images/topping_Tomato_ML_extra.png","assets/images/icon_topping_Tomato.png","assets/images/icon_sauce_Marinara.png","assets/images/icon_sauce_CreamyGarlicParm.png","assets/images/icon_sauce_BBQ.png","assets/images/icon_sauce_Buffalo.png","assets/images/crust_ht_GarlicButteryBlend.png","assets/images/crust_thin_GarlicButteryBlend.png","assets/images/crust_pan_GarlicButteryBlend.png","assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png","assets/images/crust_ht_ToastedParmesan.png","assets/images/crust_thin_ToastedParmesan.png","assets/images/crust_pan_ToastedParmesan.png","assets/images/icon_finisher_ToastedParm_whole_2017.png","assets/images/icon_finisher_none_whole_2017.png","assets/images/crust_ht_NoFinish.png","assets/images/icon_crust_ht.png","assets/images/crust_thin_NoFinish.png","assets/images/icon_crust_thin.png","assets/images/crust_pan_NoFinish.png","assets/images/icon_crust_pan.png","assets/images/alarm-clock.png","assets/images/pizza_pepperoni.jpg","assets/images/pizza_Pepperoni_Lovers.png","assets/images/pizza_Veggie_Lovers.png","assets/images/pizza_Ultimate_Cheese_Lovers.png","assets/images/pizza_Hawaiian_Chicken.png","assets/images/pizza_Chicken_Bacon_Parmesan.png","assets/images/pizza_Backyard_BBQ_Chicken.png","assets/images/pizza_Buffalo_Chicken.png","assets/images/cheese_mozz_ML.png","assets/images/pizza_cheese.jpg","store/ui/uiActions/uiActions.js","store/ui/uiActionTypes.js","shared/axiosAPI.js","shared/secureStorage.js","metadata/pizzaProperties.js","metadata/meatMetadata.js","metadata/veggiesMetadata.js","metadata/cheeseMetadata.js","metadata/sauceMetadata.js","metadata/crustMetadata.js","metadata/crustFlavorMetadata.js","metadata/comboMetadata.js","metadata/sizeMetadata.js","metadata/priceMappings.js","store/pizzaBuilder/pizzaBuilderReducer/pizzaBuilderReducer.js","store/pizzaBuilder/pizzaBuilderActionTypes.js","store/cart/cartReducer/cartReducer.js","store/cart/cartActionTypes.js","store/checkout/checkoutReducer/checkoutReducer.js","store/checkout/checkoutActionTypes.js","store/auth/authReducer/authReducer.js","store/auth/authActionTypes.js","store/ui/uiReducer/uiReducer.js","store/rootReducer.js","store/store.js","shared/util.js","store/cart/cartActions/cartActions.js","shared/actionErrors.js","store/checkout/checkoutActions/checkoutActions.js","store/auth/authActions/authActions.js","components/UI/NavigationItem/NavigationItem.js","components/PizzaMenuItems/PizzaMenuItems.js","components/AccountMenuItems/AccountMenuItems.js","components/UI/Button/Button.js","components/UI/DropdownAlert/DropdownAlert.js","components/CartIcon/CartIcon.js","components/Header/Header.js","containers/HeaderContainer.js","components/Layout/Footer/Footer.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler.js","components/Layout/Layout/Layout.js","store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions.js","components/UI/Dropdown/Dropdown.js","components/PizzaBox/PizzaBox.js","containers/PizzaBoxContainer.js","components/UI/Message/Message.js","components/PizzaCategories/Home/Home.js","components/PizzaCategories/Meats/Meats.js","components/PizzaCategories/Veggies/Veggies.js","components/PizzaCategories/Chicken/Chicken.js","components/PizzaPreview/PizzaPreview.js","components/PizzaBuilder/PizzaBuilderPreview/PizzaBuilderPreview.js","components/PizzaDescription/PizzaDescription.js","components/PizzaBuilder/PizzaDetails/PizzaDetails.js","components/PizzaBuilder/PizzaBuilderProgress/PizzaBuilderProgress.js","components/PizzaBuilder/BuilderOptions/ImageOptions/ImageOptions.js","components/PizzaBuilder/BuilderOptions/ButtonOptions/ButtonOptions.js","components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder.js","components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder.js","components/PizzaBuilder/BuilderOptions/ToppingOptions/ToppingOptions.js","components/UI/OptionsButton/OptionsButton.js","components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder.js","components/PizzaBuilder/PizzaBuilder.js","containers/PizzaBuilderContainer.js","components/CartItem/CartItem.js","components/CartItems/CartItems.js","components/Cart/Cart.js","containers/CartContainer.js","components/UI/Input/Input.js","shared/formValidation.js","components/UI/Form/Form.js","components/SignIn/SignIn.js","containers/Auth/SignInContainer.js","components/SignUp/SignUp.js","containers/Auth/SignUpContainer.js","components/AddressForm/AddressForm.js","containers/AddressFormContainer.js","components/OrderType/OrderType.js","components/DeliveryAddress/DeliveryAddress.js","components/Checkout/Checkout.js","containers/CheckoutContainer.js","components/Sidebar/Sidebar.js","containers/SidebarContainer.js","components/Order/Order.js","components/Orders/Orders.js","containers/OrdersContainer.js","App.js","hoc/ScrollToTop.js","index.js"],"names":["module","exports","setErroredAction","erroredAction","type","instance","axios","create","baseURL","process","withCredentials","interceptors","response","use","error","Promise","reject","CryptoJS","require","SECRET_KEY","secureStorage","SecureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","CRUST","SIZE","SAUCE","MEATS","VEGGIES","REGULAR_TOPPING","WHOLE","meatImageMapping","preview","PepperoniPreview","previewExtra","ExtraPepperoniPreview","icon","PepperoniIcon","ItalianSausagePreview","ExtraItalianSausagePreview","ItalianSausageIcon","HamPreview","ExtraHamPreview","HamIcon","BaconPreview","ExtraBaconPreview","BaconIcon","GrilledChickenPreview","ExtraGrilledChickenPreview","GrilledChickenIcon","BeefPreview","ExtraBeefPreview","BeefIcon","PorkPreview","ExtraPorkPreview","PorkIcon","OLIVES","BELL_PEPPERS","veggiesImageMapping","MushroomsPreview","ExtraMushroomsPreview","MushroomsIcon","RoastedSpinachPreview","ExtraRoastedSpinachPreview","RoastedSpinachIcon","RedOnionsPreview","ExtraRedOnionsPreview","RedOnionsIcon","OlivesPreview","ExtraOlivesPreview","OlivesIcon","BellPeppersPreview","ExtraBellPeppersPreview","BellPeppersIcon","BananaPeppersPreview","ExtraBananaPeppersPreview","BananaPeppersIcon","PineapplePreview","ExtraPineapplePreview","PineappleIcon","JalapenoPeppersPreview","ExtraJalapenoPeppersPreview","JalapenoPeppersIcon","RomaTomatoesPreview","ExtraRomaTomatoesPreview","RomaTomatoesIcon","cheeseAmounts","cheeseAmountMetadataMapping","additionalDisplay","sauceImageMapping","ClassicMarinaraIcon","CreamyGarlicParmesanIcon","BarbequeIcon","BuffaloIcon","sauceAmounts","sauceAmountMetadataMapping","crustTypes","crustMetadataMapping","HandTossedPreview","HandTossedIcon","ThinNCrispyPreview","ThinNCrispyIcon","OriginalPanPreview","OriginalPanIcon","crust_flavors","crustFlavorImageMapping","NoCrustFlavorIcon","HTGarlicButteryBlendPreview","ThinGarlicButteryBlendPreview","PanGarlicButteryBlendPreview","GarlicButteryBlendIcon","HTToastedParmesanPreview","ThinToastedParmesanPreview","PanToastedParmesanPreview","ToastedParmesanIcon","REGULAR","COMBO","toppingMapping","toppingName","amount","portion","sizes","crustPriceMapping","sizePriceMapping","propertyPriceMapping","initialState","showPizzaBuilder","itemId","pizza","pizzaBuilderReducer","state","action","priceType","quantity","property","value","cartId","items","numItemsAdded","loadingCartItem","loadingCart","itemIdBeingChanged","cartReducer","orders","validatingAddress","addressValid","addressValidationError","deliveryAddress","loadingOrders","submittingOrder","submitOrderError","getOrdersError","checkoutReducer","order","userId","signInError","signUpError","loadingUser","authReducer","sidebarOpen","uiReducer","combineReducers","pizzaBuilder","cart","checkout","auth","ui","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","calculatePrice","basePrice","propertyPrices","meatsPrice","veggiesPrice","getToppingsPrice","toFixed","toppingType","combo","toppings","toppingsPrice","forEach","topping","comboIncludesTopping","find","comboTopping","extraToppingPrice","calculateSubTotal","subTotal","item","price","getCrust","crustDisplayValue","match","exec","normalizePizza","getOrCreateLocalCart","emptyCart","pizzaHashMap","localCart","getItem","setItem","getCart","dispatch","get","then","res","getCombinedCart","post","getCartDone","combineCarts","setCart","getState","_id","Object","values","addToCart","addToLocalCart","pizzaHash","uuidv4","itemsArr","setCartFromLocalCart","changeCartItemStart","changeCartItemSuccess","changeItemQuantity","quantityPatch","patch","changeItemQuantityInLocalCart","keys","length","removeItem","removeItemFromLocalCart","saveToLocalCart","currentItem","submitOrderFailed","validateDeliveryAddressFailed","authReset","authSuccess","authData","user","checkAuthTimeout","expires","signInFailed","signUpFailed","signOut","history","push","pathname","fromSignOut","expirationTime","timeToExpire","Date","getTime","setTimeout","NavigationItem","props","classNames","vertical","navigationItemContent","className","join","children","to","onClick","PizzaMenuItems","AccountMenuItems","accountMenuItems","data-test","isAuthenticated","Button","disabled","React","memo","alertKey","CartIcon","handleClickItemAddedAlert","handleClickCheckout","event","stopPropagation","nextProps","this","numItemsInCart","itemAdded","location","numItems","fromCheckout","style","height","Component","withRouter","Header","handleClickMenuIcon","toggleSidebar","alt","src","PizzaTimeLogo","position","connect","Footer","Backdrop","show","Modal","useEffect","document","body","overflow","modalClassNames","clicked","modalClosed","withErrorHandler","WrappedComponent","HOComponent","handleModalClosed","setState","requestInterceptor","responseInterceptor","nextState","request","req","eject","excludeActions","message","status","includes","Fragment","axiosAPI","initializePizzaBuilder","Dropdown","onChange","options","map","option","PizzaBox","crustOptions","entries","crust","crustMetadata","sizeOptions","pizzaAdd","pizzaName","customize","customizeSecondary","buildPizza","handleClickBuild","handleChangeQuantity","resetState","pizzaType","handleChangeCrust","handleChangeSize","size","imageSrc","PizzaBoxContainer","getInitialState","persist","parseInt","target","Message","display","Home","fromSignUp","CheesePizzaImg","PepperoniPizzaImg","MeatLoversPizzaImg","SupremePizzaImg","Meats","PepperoniLoversPizzaImg","Veggies","VeggieLoversPizzaImg","UltimateCheeseLoverPizzaImg","Chicken","HawaiianChickenPizzaImg","ChickenBaconParmesanImg","BBQChickenPizzaImg","BuffaloChickenPizzaImg","PizzaPreview","small","Cheese","meat","imgClassNames","veggy","PizzaBuilderPreview","prevProps","PizzaDescription","sauce","cheeseAmount","crustFlavor","getToppingDescriptions","toppingDescriptions","toppingDescription","meats","veggies","overallPrice","pizzaText","PizzaDetails","save","saveToCart","PizzaBuilderProgress","stage","TOPPINGS","CHEESE_SAUCE","SIZE_CRUST","ImageOptions","imageMapping","selected","itemSelected","selectionMetadata","data-value","ButtonOptions","selectionOptions","SizeCrustBuilder","e","proptTypes","PropTypes","object","isRequired","CheeseSauceBuilder","ToppingOptions","onClickAmount","onClickPortion","amountOptions","selection","itemsSelected","checkMark","toppingOptionClasses","portionOptions","data-topping","wholeSelection","leftSelection","rightSelection","OptionsButton","handleButtonClick","selectedOption","optionName","displayName","ToppingsBuilder","handleClickVeggies","handleClickMeats","toppingsBuilder","PizzaBuilder","handleClickProperty","setProperty","currentTarget","dataset","builder","back","next","getActionButton","buttonName","handleClickAction","toggleTopping","setToppingAmount","setToppingPortion","totalBuilder","handleCloseBuilder","cartQuantity","handleClickStage","PizzaBuilderContainer","closePizzaBuilder","toppingIndex","findIndex","splice","selectedTopping","put","CartItem","remove","isEqual","CartItems","Cart","emptyCartMessage","errorMessage","CartContainer","Input","inputElement","inputClasses","validationError","invalid","shouldValidate","touched","formSubmitted","elementType","elementConfig","label","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","isPhoneNumber","Form","handleChange","inputId","updatedFormData","form","updatedForm","updatedFormElement","trimmedValue","digits","replace","formatPhoneNumber","valid","validation","formIsValid","handleInputChange","updateForm","formElementsArray","id","config","formElement","onSubmit","SignIn","handleSubmit","redirect","SignInContainer","email","placeholder","password","preventDefault","signIn","stateUpdate","err","SignUp","SignUpContainer","signUp","AddressForm","validateDeliveryAddressReset","loading","AddressFormContainer","street","unit","city","hasLength","zipcode","validateDeliveryAddress","addressForm","params","secondary","candidates","axiosGeolocation","matchCode","analysis","dpv_match_code","streetAddress","secondaryAddress","OrderType","isDelivery","handleClick","clearDeliveryAddress","orderTypeClassNames","deliveryClassNames","iconClassNames","data-type","DeliveryAddress","Checkout","handleSubmitOrder","total","submitOrder","tax","calculateTax","color","orderDate","Sidebar","sidebarContainerClassNames","sidebarClassNames","closeSidebar","Order","Orders","ordersContent","reverse","orderType","givenDate","date","month","getMonth","day","getDate","year","getFullYear","getReadableDate","App","authenticateToken","exact","path","component","CheckoutContainer","OrdersContainer","listen","scrollTo","createBrowserHistory","basename","ReactDOM","render","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,6D,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.98619d69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza_supreme.d32db457.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_GreenBellPepper_ML_reg.0e00f485.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_meat_lovers.6888d88d.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_reg.bd65daa5.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_extra.1a5dda64.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pepperoni.c8384ebc.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_reg.67e2467d.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_extra.c854f9c4.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_ItalianSausage.30f1abc9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_reg.de53578e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_extra.5a14d4e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Ham.f9a4b089.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_reg.9ad0ed0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_extra.09ab3e70.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Bacon.01d8344a.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_reg.9f9c0251.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_extra.b8e5a0bf.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Chicken.5ad44911.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_reg.2aa6b6df.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_extra.ed2a2c61.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Beef.3b7c67c7.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_reg.6342108f.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_extra.029c5390.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pork.f6ce9e4e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_reg.ac08da62.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_extra.4d46fc4f.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Mushroom.13419b0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_reg.a1aa56b9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_extra.70bff6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Spinach_fresh.0f9a3e93.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_reg.56b4f355.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_extra.a0e7bd25.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Onion_Red.fc649c44.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_reg.2c37ed8c.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_extra.37addb7c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Olive_black.f36bd555.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_GreenBellPepper.52813aeb.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_reg.f86003d4.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_extra.f22472f1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_BananaPepper.f3bcdf43.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_reg.84001df3.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_extra.97e5f278.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pineapple.25272d60.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_reg.351d9ecd.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_extra.d8ec6a52.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Jalapeno.010847af.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_reg.6d5ebb38.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_extra.8efd4042.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Tomato.45793eeb.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Marinara.85fd0f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_CreamyGarlicParm.c6e0d76c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_BBQ.552f71e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Buffalo.75e74963.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_GarlicButteryBlend.3519578d.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_GarlicButteryBlend.cbd8d06b.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_GarlicButteryBlend.eed3a573.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_GarlicButteryBlend_whole_2017.cb6aaecb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_ToastedParmesan.2d159915.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_ToastedParmesan.936d9f40.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_ToastedParmesan.78b23d6e.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_ToastedParm_whole_2017.222e5fd7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_none_whole_2017.b6008bb6.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_NoFinish.3abbb296.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_ht.ef946a28.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_NoFinish.3d23efc8.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_thin.6c415f1e.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_NoFinish.857451fd.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_pan.a639fd58.png\";","module.exports = __webpack_public_path__ + \"static/media/alarm-clock.e343a2cb.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_pepperoni.50a5d0e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Pepperoni_Lovers.436141dc.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Veggie_Lovers.eb41eca4.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Ultimate_Cheese_Lovers.cf9afb2c.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Hawaiian_Chicken.8799700a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Chicken_Bacon_Parmesan.44137224.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Backyard_BBQ_Chicken.cdffd12a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Buffalo_Chicken.332af0a5.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese_mozz_ML.10abdd1f.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_cheese.f7ed334d.jpg\";","import * as actionTypes from '../uiActionTypes';\n\n/* open/close the sidebar menu */\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR,\n  };\n};\n\n/* close the sidebar menu */\nexport const closeSidebar = () => {\n  return {\n    type: actionTypes.CLOSE_SIDEBAR,\n  };\n};\n\n/* set error for withErrorHandler HOC to pickup */\nexport const setErroredAction = (erroredAction) => {\n  return {\n    type: actionTypes.SET_ERRORED_ACTION,\n    erroredAction: erroredAction,\n  };\n};\n","export const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n","import axios from 'axios';\n\n//axios.defaults.withCredentials = true;\n\n/* Axios instance used to call firebase api */\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  withCredentials: true,\n});\n\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","import SecureStorage from 'secure-web-storage';\nconst CryptoJS = require('crypto-js');\n\nconst SECRET_KEY = process.env.REACT_APP_SECURE_WEB_STORAGE_SECRET_KEY;\n\n/* decrypt and encrypt data to/from local storage using the provided secret key */\nexport const secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n\n    data = data.toString();\n\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n\n    data = data.toString(CryptoJS.enc.Utf8);\n\n    return data;\n  },\n});\n","/* Standard key names used to store data in app */\nexport const CRUST = 'crust';\nexport const SIZE = 'size';\nexport const SAUCE = 'sauce';\nexport const SAUCE_AMOUNT = 'sauceAmount';\nexport const CHEESE_AMOUNT = 'cheeseAmount';\nexport const CRUST_FLAVOR = 'crustFlavor';\nexport const MEATS = 'meats';\nexport const VEGGIES = 'veggies';\nexport const COMBO_NAME = 'comboName';\n\n/* Standard value names used for topping related data */\nexport const EXTRA_TOPPING = 'Extra Topping';\nexport const REGULAR_TOPPING = 'Regular Topping';\nexport const WHOLE = 'Whole';\nexport const LEFT_HALF = 'Left Half';\nexport const RIGHT_HALF = 'Right Half';\n","import PepperoniPreview from '../assets/images/topping_Pepperoni_ML_reg.png';\nimport ExtraPepperoniPreview from '../assets/images/topping_Pepperoni_ML_extra.png';\nimport PepperoniIcon from '../assets/images/icon_topping_Pepperoni.png';\nimport ItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_reg.png';\nimport ExtraItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_extra.png';\nimport ItalianSausageIcon from '../assets/images/icon_topping_ItalianSausage.png';\nimport HamPreview from '../assets/images/topping_Ham_ML_reg.png';\nimport ExtraHamPreview from '../assets/images/topping_Ham_ML_extra.png';\nimport HamIcon from '../assets/images/icon_topping_Ham.png';\nimport BaconPreview from '../assets/images/topping_Bacon_ML_reg.png';\nimport ExtraBaconPreview from '../assets/images/topping_Bacon_ML_extra.png';\nimport BaconIcon from '../assets/images/icon_topping_Bacon.png';\nimport GrilledChickenPreview from '../assets/images/topping_Chicken_ML_reg.png';\nimport ExtraGrilledChickenPreview from '../assets/images/topping_Chicken_ML_extra.png';\nimport GrilledChickenIcon from '../assets/images/icon_topping_Chicken.png';\nimport BeefPreview from '../assets/images/topping_Beef_ML_reg.png';\nimport ExtraBeefPreview from '../assets/images/topping_Beef_ML_extra.png';\nimport BeefIcon from '../assets/images/icon_topping_Beef.png';\nimport PorkPreview from '../assets/images/topping_Pork_ML_reg.png';\nimport ExtraPorkPreview from '../assets/images/topping_Pork_ML_extra.png';\nimport PorkIcon from '../assets/images/icon_topping_Pork.png';\n\n/* All metadata related to the display of meat options */\n\nexport const PEPPERONI = 'Pepperoni';\nexport const ITALIAN_SAUSAGE = 'Italian Sausage';\nexport const HAM = 'Ham';\nexport const BACON = 'Bacon';\nexport const GRILLED_CHICKEN = 'Grilled Chicken';\nexport const BEEF = 'Beef';\nexport const PORK = 'Pork';\n\nexport const meatImageMapping = {\n  [PEPPERONI]: {\n    preview: PepperoniPreview,\n    previewExtra: ExtraPepperoniPreview,\n    icon: PepperoniIcon,\n  },\n  [ITALIAN_SAUSAGE]: {\n    preview: ItalianSausagePreview,\n    previewExtra: ExtraItalianSausagePreview,\n    icon: ItalianSausageIcon,\n  },\n  [HAM]: {\n    preview: HamPreview,\n    previewExtra: ExtraHamPreview,\n    icon: HamIcon,\n  },\n  [BACON]: {\n    preview: BaconPreview,\n    previewExtra: ExtraBaconPreview,\n    icon: BaconIcon,\n  },\n  [GRILLED_CHICKEN]: {\n    preview: GrilledChickenPreview,\n    previewExtra: ExtraGrilledChickenPreview,\n    icon: GrilledChickenIcon,\n  },\n  [BEEF]: {\n    preview: BeefPreview,\n    previewExtra: ExtraBeefPreview,\n    icon: BeefIcon,\n  },\n  [PORK]: {\n    preview: PorkPreview,\n    previewExtra: ExtraPorkPreview,\n    icon: PorkIcon,\n  },\n};\n","import MushroomsPreview from '../assets/images/topping_Mushroom_ML_reg.png';\nimport ExtraMushroomsPreview from '../assets/images/topping_Mushroom_ML_extra.png';\nimport MushroomsIcon from '../assets/images/icon_topping_Mushroom.png';\nimport RoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_reg.png';\nimport ExtraRoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_extra.png';\nimport RoastedSpinachIcon from '../assets/images/icon_topping_Spinach_fresh.png';\nimport RedOnionsPreview from '../assets/images/topping_Onion_red_ML_reg.png';\nimport ExtraRedOnionsPreview from '../assets/images/topping_Onion_red_ML_extra.png';\nimport RedOnionsIcon from '../assets/images/icon_topping_Onion_Red.png';\nimport OlivesPreview from '../assets/images/topping_Olives_black_ML_reg.png';\nimport ExtraOlivesPreview from '../assets/images/topping_Olives_black_ML_extra.png';\nimport OlivesIcon from '../assets/images/icon_topping_Olive_black.png';\nimport BellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport ExtraBellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport BellPeppersIcon from '../assets/images/icon_topping_GreenBellPepper.png';\nimport BananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_reg.png';\nimport ExtraBananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_extra.png';\nimport BananaPeppersIcon from '../assets/images/icon_topping_BananaPepper.png';\nimport PineapplePreview from '../assets/images/topping_Pineapple_ML_reg.png';\nimport ExtraPineapplePreview from '../assets/images/topping_Pineapple_ML_extra.png';\nimport PineappleIcon from '../assets/images/icon_topping_Pineapple.png';\nimport JalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_reg.png';\nimport ExtraJalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_extra.png';\nimport JalapenoPeppersIcon from '../assets/images/icon_topping_Jalapeno.png';\nimport RomaTomatoesPreview from '../assets/images/topping_Tomato_ML_reg.png';\nimport ExtraRomaTomatoesPreview from '../assets/images/topping_Tomato_ML_extra.png';\nimport RomaTomatoesIcon from '../assets/images/icon_topping_Tomato.png';\n\n/* All metadata related to the display of veggy options */\n\nexport const MUSHROOMS = 'Mushrooms';\nexport const ROASTED_SPINACH = 'Roasted Spinach';\nexport const RED_ONIONS = 'Red Onions';\nexport const OLIVES = 'Mediterranean Black Olives';\nexport const BELL_PEPPERS = 'Green Bell Peppers';\nexport const BANANA_PEPPERS = 'Banana Peppers';\nexport const PINEAPPLE = 'Pineapple';\nexport const JALAPENO_PEPPERS = 'Jalapeno Peppers';\nexport const ROMA_TOMATOES = 'Roma Tomatoes';\n\nexport const veggiesImageMapping = {\n  [MUSHROOMS]: {\n    preview: MushroomsPreview,\n    previewExtra: ExtraMushroomsPreview,\n    icon: MushroomsIcon,\n  },\n  [ROASTED_SPINACH]: {\n    preview: RoastedSpinachPreview,\n    previewExtra: ExtraRoastedSpinachPreview,\n    icon: RoastedSpinachIcon,\n  },\n  [RED_ONIONS]: {\n    preview: RedOnionsPreview,\n    previewExtra: ExtraRedOnionsPreview,\n    icon: RedOnionsIcon,\n  },\n  [OLIVES]: {\n    preview: OlivesPreview,\n    previewExtra: ExtraOlivesPreview,\n    icon: OlivesIcon,\n  },\n  [BELL_PEPPERS]: {\n    preview: BellPeppersPreview,\n    previewExtra: ExtraBellPeppersPreview,\n    icon: BellPeppersIcon,\n  },\n  [BANANA_PEPPERS]: {\n    preview: BananaPeppersPreview,\n    previewExtra: ExtraBananaPeppersPreview,\n    icon: BananaPeppersIcon,\n  },\n  [PINEAPPLE]: {\n    preview: PineapplePreview,\n    previewExtra: ExtraPineapplePreview,\n    icon: PineappleIcon,\n  },\n  [JALAPENO_PEPPERS]: {\n    preview: JalapenoPeppersPreview,\n    previewExtra: ExtraJalapenoPeppersPreview,\n    icon: JalapenoPeppersIcon,\n  },\n  [ROMA_TOMATOES]: {\n    preview: RomaTomatoesPreview,\n    previewExtra: ExtraRomaTomatoesPreview,\n    icon: RomaTomatoesIcon,\n  },\n};\n","/* All metadata related to the displaying of cheese options */\n\nexport const REGULAR_CHEESE = 'Regular';\nexport const EXTRA_CHEESE = 'Extra';\nexport const LIGHT_CHEESE = 'Light';\nexport const NO_CHEESE = 'None';\n\nexport const cheeseAmounts = [\n  EXTRA_CHEESE,\n  REGULAR_CHEESE,\n  LIGHT_CHEESE,\n  NO_CHEESE,\n];\n\nexport const cheeseAmountMetadataMapping = {\n  [EXTRA_CHEESE]: {\n    additionalDisplay: '+$1.00',\n  },\n};\n","import ClassicMarinaraIcon from '../assets/images/icon_sauce_Marinara.png';\nimport CreamyGarlicParmesanIcon from '../assets/images/icon_sauce_CreamyGarlicParm.png';\nimport BarbequeIcon from '../assets/images/icon_sauce_BBQ.png';\nimport BuffaloIcon from '../assets/images/icon_sauce_Buffalo.png';\n\n/* All metadata related to the display of sauce options */\n\nexport const CLASSIC_MARINARA = 'Classic Marinara';\nexport const CREAMY_GARLIC_PARMESAN = 'Creamy Garlic Parmesan';\nexport const BARBECUE = 'Barbeque';\nexport const BUFFALO = 'Buffalo';\n\nexport const sauceImageMapping = {\n  [CLASSIC_MARINARA]: {\n    icon: ClassicMarinaraIcon,\n  },\n  [CREAMY_GARLIC_PARMESAN]: {\n    icon: CreamyGarlicParmesanIcon,\n  },\n  [BARBECUE]: {\n    icon: BarbequeIcon,\n  },\n  [BUFFALO]: {\n    icon: BuffaloIcon,\n  },\n};\n\nexport const REGULAR_SAUCE = 'Regular';\nexport const EXTRA_SAUCE = 'Extra';\nexport const LIGHT_SAUCE = 'Light';\nexport const NO_SAUCE = 'None';\n\nexport const sauceAmounts = [EXTRA_SAUCE, REGULAR_SAUCE, LIGHT_SAUCE, NO_SAUCE];\n\nexport const sauceAmountMetadataMapping = {\n  [EXTRA_SAUCE]: {\n    additionalDisplay: '+$1.00',\n  },\n};\n","import HandTossedPreview from '../assets/images/crust_ht_NoFinish.png';\nimport HandTossedIcon from '../assets/images/icon_crust_ht.png';\nimport ThinNCrispyPreview from '../assets/images/crust_thin_NoFinish.png';\nimport ThinNCrispyIcon from '../assets/images/icon_crust_thin.png';\nimport OriginalPanPreview from '../assets/images/crust_pan_NoFinish.png';\nimport OriginalPanIcon from '../assets/images/icon_crust_pan.png';\n\n/* All metadata related to the display of crust options */\n\nexport const HAND_TOSSED = 'Hand Tossed';\nexport const THIN_N_CRISPY = \"Thin 'N Crispy\";\nexport const ORIGINAL_PAN = 'Original Pan';\n\nexport const crustTypes = [HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN];\n\nexport const crustMetadataMapping = {\n  [HAND_TOSSED]: {\n    preview: HandTossedPreview,\n    icon: HandTossedIcon,\n  },\n  [THIN_N_CRISPY]: {\n    preview: ThinNCrispyPreview,\n    icon: ThinNCrispyIcon,\n  },\n  [ORIGINAL_PAN]: {\n    preview: OriginalPanPreview,\n    icon: OriginalPanIcon,\n    additionalDisplay: '+$2.00',\n  },\n};\n","import HTGarlicButteryBlendPreview from '../assets/images/crust_ht_GarlicButteryBlend.png';\nimport ThinGarlicButteryBlendPreview from '../assets/images/crust_thin_GarlicButteryBlend.png';\nimport PanGarlicButteryBlendPreview from '../assets/images/crust_pan_GarlicButteryBlend.png';\nimport GarlicButteryBlendIcon from '../assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png';\nimport HTToastedParmesanPreview from '../assets/images/crust_ht_ToastedParmesan.png';\nimport ThinToastedParmesanPreview from '../assets/images/crust_thin_ToastedParmesan.png';\nimport PanToastedParmesanPreview from '../assets/images/crust_pan_ToastedParmesan.png';\nimport ToastedParmesanIcon from '../assets/images/icon_finisher_ToastedParm_whole_2017.png';\nimport NoCrustFlavorIcon from '../assets/images/icon_finisher_none_whole_2017.png';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\n\n/* All metadata related to the display of crust flavor options */\n\nexport const NO_CRUST_FLAVOR = 'No Crust Flavor';\nexport const GARLIC_BUTTERY_BLEND = 'Garlic Buttery Blend';\nexport const TOASTED_PARMESAN = 'Toasted Parmesan';\n\nexport const crust_flavors = [\n  NO_CRUST_FLAVOR,\n  GARLIC_BUTTERY_BLEND,\n  TOASTED_PARMESAN,\n];\n\nexport const crustFlavorImageMapping = {\n  [NO_CRUST_FLAVOR]: {\n    icon: NoCrustFlavorIcon,\n  },\n  [GARLIC_BUTTERY_BLEND]: {\n    [HAND_TOSSED]: {\n      preview: HTGarlicButteryBlendPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinGarlicButteryBlendPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanGarlicButteryBlendPreview,\n    },\n    icon: GarlicButteryBlendIcon,\n  },\n  [TOASTED_PARMESAN]: {\n    [HAND_TOSSED]: {\n      preview: HTToastedParmesanPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinToastedParmesanPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanToastedParmesanPreview,\n    },\n    icon: ToastedParmesanIcon,\n  },\n};\n","import {\n  HAM,\n  PORK,\n  BEEF,\n  ITALIAN_SAUSAGE,\n  BACON,\n  PEPPERONI,\n  GRILLED_CHICKEN,\n} from './meatMetadata';\nimport {\n  MUSHROOMS,\n  BELL_PEPPERS,\n  RED_ONIONS,\n  OLIVES,\n  ROMA_TOMATOES,\n  BANANA_PEPPERS,\n  PINEAPPLE,\n} from './veggiesMetadata';\nimport {\n  MEATS,\n  VEGGIES,\n  CHEESE_AMOUNT,\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  SAUCE,\n  CRUST_FLAVOR,\n} from './pizzaProperties';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { BUFFALO, BARBECUE } from './sauceMetadata';\nimport { TOASTED_PARMESAN } from './crustFlavorMetadata';\n\n/* Holds various combo related display metadata used in multiple components */\n\nexport const CHEESE = 'Cheese';\nexport const PEPPERONI_PIZZA = 'Pepperoni';\nexport const MEAT_LOVER = \"Meat Lover's\";\nexport const SUPREME = 'Supreme';\nexport const PEPPERONI_LOVER = \"Pepperoni Lover's\";\nexport const SUPER_SUPREME = 'Super Supreme';\nexport const VEGGIE_LOVER = \"Veggie Lover's\";\nexport const ULTIMATE_CHEESE_LOVER = \"Ultimate Cheese Lover's\";\nexport const BUFFALO_CHICKEN = 'Buffalo Chicken';\nexport const BBQ_CHICKEN = 'BBQ Chicken';\nexport const HAWAIIAN_CHICKEN = 'Hawaiian Chicken';\nexport const CHICKEN_BACON_PARMESAN = 'Chicken Bacon Parmesan';\n\nexport const REGULAR = 'Regular';\nexport const COMBO = 'Combo';\n\nexport const toppingMapping = {\n  [CHEESE]: {\n    [MEATS]: [],\n    [VEGGIES]: [],\n  },\n  [PEPPERONI_PIZZA]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [MEAT_LOVER]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ITALIAN_SAUSAGE, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [PEPPERONI_LOVER]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: EXTRA_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [SUPREME]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [SUPER_SUPREME]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ITALIAN_SAUSAGE, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: OLIVES, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [VEGGIE_LOVER]: {\n    [MEATS]: [],\n    [VEGGIES]: [\n      { toppingName: OLIVES, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ROMA_TOMATOES, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [ULTIMATE_CHEESE_LOVER]: {\n    [CHEESE_AMOUNT]: EXTRA_CHEESE,\n    [MEATS]: [],\n    [VEGGIES]: [],\n  },\n  [BUFFALO_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: BANANA_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [SAUCE]: BUFFALO,\n  },\n  [BBQ_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [SAUCE]: BARBECUE,\n  },\n  [HAWAIIAN_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PINEAPPLE, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [CHICKEN_BACON_PARMESAN]: {\n    [MEATS]: [\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: ROMA_TOMATOES, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [CRUST_FLAVOR]: TOASTED_PARMESAN,\n  },\n};\n","/* All metadata related to the display of size options */\n\nexport const LARGE = 'Large';\nexport const MEDIUM = 'Medium';\nexport const PERSONAL = 'Personal';\n\nexport const sizes = [LARGE, MEDIUM, PERSONAL];\n","import { LARGE, MEDIUM, PERSONAL } from './sizeMetadata';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\nimport { REGULAR, COMBO } from './comboMetadata';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { EXTRA_SAUCE } from './sauceMetadata';\n\n/* Holds price mappings for various pizza properties */\nexport const crustPriceMapping = {\n  [LARGE]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [MEDIUM]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [PERSONAL]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n};\n\nexport const sizePriceMapping = {\n  [LARGE]: {\n    [REGULAR]: 13.99,\n    [COMBO]: 18.99,\n  },\n  [MEDIUM]: {\n    [REGULAR]: 11.99,\n    [COMBO]: 15.99,\n  },\n  [PERSONAL]: {\n    [REGULAR]: 9.99,\n    [COMBO]: 11.99,\n  },\n};\n\nexport const propertyPriceMapping = {\n  [EXTRA_SAUCE]: 1.0,\n  [EXTRA_CHEESE]: 1.0,\n};\n\nexport const toppingPrice = 1.5;\nexport const extraToppingPrice = 2.5;\n","import * as actionTypes from '../pizzaBuilderActionTypes';\nimport {\n  CLASSIC_MARINARA,\n  REGULAR_SAUCE,\n} from '../../../metadata/sauceMetadata';\nimport { HAND_TOSSED } from '../../../metadata/crustMetadata';\nimport { LARGE } from '../../../metadata/sizeMetadata';\nimport { REGULAR_CHEESE } from '../../../metadata/cheeseMetadata';\nimport { NO_CRUST_FLAVOR } from '../../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  SIZE,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n} from '../../../metadata/pizzaProperties';\nimport { REGULAR } from '../../../metadata/comboMetadata';\n\nexport const initialState = {\n  showPizzaBuilder: false,\n  itemId: null,\n  pizza: {\n    [CHEESE_AMOUNT]: REGULAR_CHEESE,\n    [COMBO_NAME]: null,\n    [CRUST]: HAND_TOSSED,\n    [CRUST_FLAVOR]: NO_CRUST_FLAVOR,\n    [MEATS]: [],\n    [VEGGIES]: [],\n    [SAUCE]: CLASSIC_MARINARA,\n    [SAUCE_AMOUNT]: REGULAR_SAUCE,\n    [SIZE]: LARGE,\n    priceType: REGULAR,\n  },\n};\n\nconst pizzaBuilderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //initialize and display pizza builder with given pizza and quantity\n    case actionTypes.INIT_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: true,\n        itemId: action.itemId,\n        pizza: {\n          [CHEESE_AMOUNT]: action.pizza[CHEESE_AMOUNT]\n            ? action.pizza[CHEESE_AMOUNT]\n            : REGULAR_CHEESE,\n          [COMBO_NAME]: action.pizza[COMBO_NAME]\n            ? action.pizza[COMBO_NAME]\n            : null,\n          [CRUST]: action.pizza[CRUST],\n          [CRUST_FLAVOR]: action.pizza[CRUST_FLAVOR]\n            ? action.pizza[CRUST_FLAVOR]\n            : NO_CRUST_FLAVOR,\n          [MEATS]: action.pizza[MEATS],\n          [VEGGIES]: action.pizza[VEGGIES],\n          [SAUCE]: action.pizza[SAUCE] ? action.pizza[SAUCE] : CLASSIC_MARINARA,\n          [SAUCE_AMOUNT]: action.pizza[SAUCE_AMOUNT]\n            ? action.pizza[SAUCE_AMOUNT]\n            : REGULAR_SAUCE,\n          [SIZE]: action.pizza[SIZE],\n          priceType: action.pizza.priceType,\n        },\n        quantity: action.quantity,\n      };\n    //close the pizza builder\n    case actionTypes.CLOSE_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: false,\n      };\n    //dynamically set a pizza property\n    case actionTypes.SET_PROPERTY:\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: action.value,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pizzaBuilderReducer;\n","export const INIT_PIZZA_BUILDER = 'INIT_PIZZA_BUILDER';\nexport const CLOSE_PIZZA_BUILDER = 'CLOSE_PIZZA_BUILDER';\nexport const SET_PROPERTY = 'SET_PROPERTY';\n","import * as actionTypes from '../cartActionTypes';\n\nexport const initialState = {\n  cartId: null,\n\n  //Array of cart items\n  //Each item contains a pizza object and item quantity\n  items: [],\n\n  //Cart quantity\n  quantity: 0,\n\n  //Number of items just added. For item add notification.\n  numItemsAdded: 0,\n\n  //Loading true when changing a cart item. i.e. update or remove\n  loadingCartItem: false,\n\n  //Loading when getting the cart\n  loadingCart: true,\n\n  //Item id of item being changed to know which item to show loading sign\n  itemIdBeingChanged: null,\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Add item to cart, update pizza to item id hashmap and quantity\n    case actionTypes.ADD_TO_CART:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        numItemsAdded: action.numItemsAdded,\n      };\n    //Combine local storage cart with backend cart\n    case actionTypes.COMBINE_CARTS:\n      return {\n        ...state,\n        cartId: action.cartId,\n        items: action.items,\n        quantity: action.quantity,\n        numItemsAdded: action.numItemsAdded,\n      };\n    //Done loading cart\n    case actionTypes.GET_CART_DONE:\n      return {\n        ...state,\n        loadingCart: false,\n      };\n    //Set cart items\n    case actionTypes.SET_CART:\n      return {\n        ...state,\n        cartId: action.cartId,\n        items: action.items,\n        quantity: action.quantity,\n      };\n    //Change item quantity\n    case actionTypes.CHANGE_CART_ITEM_SUCCESS:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        loadingCartItem: false,\n      };\n    //Set loading before changing cart item\n    case actionTypes.CHANGE_CART_ITEM_START:\n      return {\n        ...state,\n        loadingCartItem: true,\n        itemIdBeingChanged: action.itemIdBeingChanged,\n      };\n    //Failed to change cart item, done loading\n    case actionTypes.CHANGE_CART_ITEM_FAILED:\n      return {\n        ...state,\n        loadingCartItem: false,\n        itemIdBeingChanged: null,\n      };\n    //Empty cart and all metadata\n    case actionTypes.EMPTY_CART:\n      return {\n        ...state,\n        items: [],\n        quantity: 0,\n        numItemsAdded: 0,\n      };\n    //Clear cart after signing out\n    case actionTypes.SIGN_OUT_CART:\n      return {\n        ...state,\n        cartId: null,\n        items: [],\n        quantity: 0,\n        numItemsAdded: 0,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","export const CREATE_CART = 'CREATE_CART';\nexport const GET_CART_START = 'GET_CART_START';\nexport const GET_CART_DONE = 'GET_CART_DONE';\nexport const SIGN_OUT_CART = 'SIGNOUT_CART';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const COMBINE_CARTS = 'COMBINE_CARTS';\nexport const SET_CART = 'SET_CART';\nexport const CHANGE_ITEM_QUANTITY = 'CHANGE_ITEM_QUANTITY';\nexport const INCREASE_ITEM_QUANTITY = 'INCREASE_ITEM_QUANTITY';\nexport const CHANGE_CART_ITEM_START = 'CHANGE_CART_ITEM_START';\nexport const REMOVE_ITEM_SUCCESS = 'REMOVE_ITEM_SUCCESS';\nexport const CHANGE_CART_ITEM_FAILED = 'CHANGE_CART_ITEM_FAILED';\nexport const CHANGE_CART_ITEM_SUCCESS = 'CHANGE_CART_ITEM_SUCCESS';\nexport const SAVE_TO_CART = 'SAVE_TO_CART';\nexport const EMPTY_CART = 'EMPTY_CART';\nexport const SET_ERRORED_ACTION = 'ERRORED_ACTION';\n","import * as actionTypes from '../checkoutActionTypes';\n\nexport const initialState = {\n  orders: [],\n  validatingAddress: false,\n  addressValid: false,\n  addressValidationError: null,\n  deliveryAddress: null,\n  loadingOrders: true,\n  submittingOrder: false,\n  submitOrderError: false,\n  getOrdersError: false,\n};\n\nconst checkoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Set loading for submit order\n    case actionTypes.SUBMIT_ORDER_START:\n      return {\n        ...state,\n        submittingOrder: true,\n        submitOrderError: false,\n      };\n    //Add submitted order to list of orders\n    case actionTypes.SUBMIT_ORDER_SUCCESS:\n      const orders = [...state.orders, action.order];\n      return {\n        ...state,\n        orders: orders,\n        submittingOrder: false,\n      };\n    //Finish loading when submit order failed\n    case actionTypes.SUBMIT_ORDER_FAILED:\n      return {\n        ...state,\n        submittingOrder: false,\n        submitOrderError: true,\n      };\n    //Successfully got orders, set orders\n    case actionTypes.GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        loadingOrders: false,\n        orders: action.orders,\n      };\n    //Finish loading when getting orders failed\n    case actionTypes.GET_ORDERS_FAILED:\n      return {\n        ...state,\n        loadingOrders: false,\n        getOrdersError: true,\n      };\n    //Successfully validated address, stop loading and set address\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        addressValid: true,\n        addressValidationError: null,\n        validatingAddress: false,\n        deliveryAddress: action.deliveryAddress,\n      };\n    //Finish loading when validating adddress failed\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_FAILED:\n      return {\n        ...state,\n        addressValid: false,\n        addressValidationError: action.error,\n        validatingAddress: false,\n      };\n    //Set loading\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_START:\n      return {\n        ...state,\n        validatingAddress: true,\n        addressValidationError: null,\n      };\n    //Reset all address validation properties\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_RESET:\n      return {\n        ...state,\n        validatingAddress: false,\n        addressValid: false,\n        addressValidationError: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default checkoutReducer;\n","export const SUBMIT_ORDER_START = 'SUBMIT_ORDER_START';\nexport const SUBMIT_ORDER_SUCCESS = 'SUBMIT_ORDER_SUCCESS';\nexport const SUBMIT_ORDER_FAILED = 'SUBMIT_ORDER_FAILED';\nexport const GET_ORDERS = 'GET_ORDERS';\nexport const GET_ORDERS_START = 'GET_ORDERS_START';\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS';\nexport const GET_ORDERS_FAILED = 'GET_ORDERS_FAILED';\nexport const CLEAR_DELIVERY_ADDRESS = 'CLEAR_DELIVERY_ADDRESS';\nexport const VALIDATE_DELIVERY_ADDRESS_START =\n  'VALIDATE_DELIVERY_ADDRESS_START';\nexport const VALIDATE_DELIVERY_ADDRESS_SUCCESS =\n  'VALIDATE_DELIVERY_ADDRESS_SUCCESS';\nexport const VALIDATE_DELIVERY_ADDRESS_FAILED =\n  'VALIDATE_DELIVERY_ADDRESS_FAILED';\nexport const VALIDATE_DELIVERY_ADDRESS_RESET =\n  'VALIDATE_DELIVERY_ADDRESS_RESET';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n","import * as actionTypes from '../authActionTypes';\n\nexport const initialState = {\n  userId: null,\n  signInError: null,\n  signUpError: null,\n  loadingUser: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Set loading to true and reset error\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        signInError: null,\n        signUpError: null,\n        loadingUser: true,\n      };\n    case actionTypes.AUTH_TOKEN_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n      };\n    //Reset auth errors\n    case actionTypes.AUTH_RESET:\n      return {\n        ...state,\n        signInError: null,\n        signUpError: null,\n      };\n    //Successfully authenticated\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        loadingUser: false,\n        userId: action.userId,\n        signInError: null,\n      };\n    //Set error and reset loading when sign in failed\n    case actionTypes.SIGN_IN_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n        signInError: action.error,\n      };\n    //Set error and reset loading when sign up failed\n    case actionTypes.SIGN_UP_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n        signUpError: action.error,\n      };\n    //Reset user data on signout\n    case actionTypes.AUTH_SIGNOUT:\n      return {\n        ...state,\n        userId: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_TOKEN_FAILED = 'AUTH_TOKEN_FAILED';\nexport const SIGN_IN_FAILED = 'SIGN_IN_FAILED';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const AUTH_SIGNOUT = 'AUTH_SIGNOUT';\nexport const AUTH_RESET = 'AUTH_RESET';\n","import * as actionTypes from '../uiActionTypes';\n\nexport const initialState = {\n  sidebarOpen: false,\n  erroredAction: null,\n};\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // open/close sidebar\n    case actionTypes.TOGGLE_SIDEBAR:\n      let sidebarOpen = state.sidebarOpen;\n      return {\n        ...state,\n        sidebarOpen: !sidebarOpen,\n      };\n    //close sidebar\n    case actionTypes.CLOSE_SIDEBAR:\n      return {\n        ...state,\n        sidebarOpen: false,\n      };\n    //set action that produced the error\n    case actionTypes.SET_ERRORED_ACTION:\n      return {\n        ...state,\n        erroredAction: action.erroredAction,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default uiReducer;\n","import { combineReducers } from 'redux';\nimport pizzaBuilderReducer from './pizzaBuilder/pizzaBuilderReducer/pizzaBuilderReducer';\nimport cartReducer from './cart/cartReducer/cartReducer';\nimport checkoutReducer from './checkout/checkoutReducer/checkoutReducer';\nimport authReducer from './auth/authReducer/authReducer';\nimport uiReducer from './ui/uiReducer/uiReducer';\n\nexport default combineReducers({\n  pizzaBuilder: pizzaBuilderReducer,\n  cart: cartReducer,\n  checkout: checkoutReducer,\n  auth: authReducer,\n  ui: uiReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nexport const middleware = [thunk];\n\nconst initialState = {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  SIZE,\n  CRUST,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n  CHEESE_AMOUNT,\n  SAUCE_AMOUNT,\n  EXTRA_TOPPING,\n  CRUST_FLAVOR,\n  SAUCE,\n} from '../metadata/pizzaProperties';\nimport { COMBO, toppingMapping } from '../metadata/comboMetadata';\nimport {\n  sizePriceMapping,\n  crustPriceMapping,\n  toppingPrice,\n  extraToppingPrice,\n  propertyPriceMapping,\n} from '../metadata/priceMappings';\nimport checkPropTypes from 'check-prop-types';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from '../store/rootReducer';\nimport { middleware } from '../store/store';\nimport { CLASSIC_MARINARA, REGULAR_SAUCE } from '../metadata/sauceMetadata';\nimport { REGULAR_CHEESE } from '../metadata/cheeseMetadata';\nimport { NO_CRUST_FLAVOR } from '../metadata/crustFlavorMetadata';\nimport { secureStorage } from '../shared/secureStorage';\n\n/* Utility functions used across multiple components/containers */\n\n/* calculate price of a pizza, given its size, crust, toppings and various other properties */\nexport const calculatePrice = (pizza) => {\n  const basePrice =\n    sizePriceMapping[pizza[SIZE]][pizza.priceType] +\n    crustPriceMapping[pizza[SIZE]][pizza[CRUST]];\n\n  let propertyPrices = propertyPriceMapping[pizza[SAUCE_AMOUNT]] || 0;\n  propertyPrices += propertyPriceMapping[pizza[CHEESE_AMOUNT]] || 0;\n\n  let meatsPrice = 0;\n  let veggiesPrice = 0;\n\n  if (pizza.priceType !== COMBO) {\n    meatsPrice += getToppingsPrice(pizza, MEATS, false);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, false);\n  } else {\n    meatsPrice += getToppingsPrice(pizza, MEATS, true);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, true);\n  }\n\n  return (basePrice + meatsPrice + veggiesPrice + propertyPrices).toFixed(2);\n};\n\n/* Get price of only the toppings */\nconst getToppingsPrice = (pizza, toppingType, combo) => {\n  let toppings = pizza[toppingType];\n  let toppingsPrice = 0;\n  toppings &&\n    toppings.forEach((topping) => {\n      const comboIncludesTopping =\n        combo &&\n        toppingMapping[pizza[COMBO_NAME]][toppingType].find(\n          (comboTopping) => comboTopping === topping.topping\n        );\n\n      if (!comboIncludesTopping || !combo) {\n        if (topping.amount === EXTRA_TOPPING) {\n          toppingsPrice += extraToppingPrice;\n        } else {\n          toppingsPrice += toppingPrice;\n        }\n      } else if (comboIncludesTopping && topping.amount === EXTRA_TOPPING) {\n        toppingsPrice += extraToppingPrice - toppingPrice;\n      }\n    });\n\n  return toppingsPrice;\n};\n\n/* Calculate the sum of the price of all pizzas in cart before tax */\nexport const calculateSubTotal = (items) => {\n  let subTotal = 0;\n  items.forEach((item) => {\n    const price = calculatePrice(item.pizza);\n    subTotal += price * item.quantity;\n  });\n  return subTotal.toFixed(2);\n};\n\n/* Calculate the tax */\nexport const calculateTax = (subTotal) => {\n  return (subTotal * 0.1).toFixed(2);\n};\n\n/* Get only crust value from crust display value which includes price */\nexport const getCrust = (crustDisplayValue) => {\n  const regexp = /(.*) (\\+\\$.*)/g;\n  const match = regexp.exec(crustDisplayValue);\n  return match ? match[1] : crustDisplayValue;\n};\n\n/* Get display date */\nexport const getReadableDate = (givenDate) => {\n  const monthArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const date = new Date(givenDate);\n  const month = monthArray[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return `${month} ${day}, ${year}`;\n};\n\n/* Find an element by data-test attribute for unit tests */\nexport const findByTestAttr = (component, attr) => {\n  const wrapper = component.find(`[data-test=\"${attr}\"]`);\n  return wrapper;\n};\n\n/* Find an element by element type for unit tests */\nexport const findByElementType = (component, elementType) => {\n  const wrapper = component.find(`${elementType}`);\n  return wrapper;\n};\n\n/* Validate prop types for a component */\nexport const checkProps = (component, expectedProps) => {\n  const propsErr = checkPropTypes(\n    component.propTypes,\n    expectedProps,\n    'props',\n    component.name\n  );\n  return propsErr;\n};\n\n/* Create a test store for unit tests */\nexport const testStore = (initialState) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n  );\n  return store;\n};\n\n/* Normalize the pizza object before adding to cart.\n   Important for making sure hashes of two different \n   pizzas with the same attributes are equal */\nexport const normalizePizza = (pizza) => {\n  //If coming from pizza box, some attributes won't be set\n  if (!pizza[SAUCE]) {\n    pizza[SAUCE] = CLASSIC_MARINARA;\n  }\n  if (!pizza[SAUCE_AMOUNT]) {\n    pizza[SAUCE_AMOUNT] = REGULAR_SAUCE;\n  }\n  if (!pizza[CHEESE_AMOUNT]) {\n    pizza[CHEESE_AMOUNT] = REGULAR_CHEESE;\n  }\n  if (!pizza[CRUST_FLAVOR]) {\n    pizza[CRUST_FLAVOR] = NO_CRUST_FLAVOR;\n  }\n\n  return {\n    [CHEESE_AMOUNT]: pizza[CHEESE_AMOUNT],\n    [COMBO_NAME]: pizza[COMBO_NAME],\n    [CRUST]: pizza[CRUST],\n    [CRUST_FLAVOR]: pizza[CRUST_FLAVOR],\n    priceType: pizza.priceType,\n    [MEATS]: pizza[MEATS],\n    [SAUCE]: pizza[SAUCE],\n    [SAUCE_AMOUNT]: pizza[SAUCE_AMOUNT],\n    [SIZE]: pizza[SIZE],\n    [VEGGIES]: pizza[VEGGIES],\n  };\n};\n\nexport const getOrCreateLocalCart = () => {\n  const emptyCart = { items: {}, pizzaHashMap: {}, quantity: 0 };\n  let localCart = null;\n  try {\n    localCart = secureStorage.getItem('cart');\n  } catch (error) {\n    secureStorage.setItem('cart', emptyCart);\n    localCart = emptyCart;\n  }\n\n  if (!localCart) {\n    secureStorage.setItem('cart', emptyCart);\n    localCart = emptyCart;\n  }\n  return localCart;\n};\n","import * as actionTypes from '../cartActionTypes';\nimport axios from '../../../shared/axiosAPI';\nimport { v4 as uuidv4 } from 'uuid';\nimport hash from 'object-hash';\nimport { secureStorage } from '../../../shared/secureStorage';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\nimport { getOrCreateLocalCart } from '../../../shared/util';\n\n/* Create cart for user */\nexport const createCart = () => {\n  return (dispatch) => {\n    return axios\n      .post('/carts')\n      .then((res) => {\n        //Get final cart, combined with local cart if local items exist\n        getCombinedCart(res.data.cart);\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.CREATE_CART));\n      });\n  };\n};\n\nexport const getCart = () => {\n  return (dispatch) => {\n    return axios\n      .get('/carts')\n      .then((res) => {\n        //If we get back cart in response\n        if (res.data.cart) {\n          //Get final cart, combined with local cart if local items exist\n          getCombinedCart(res.data.cart);\n          //If cart doesn't exist, create one\n        } else {\n          dispatch(createCart());\n        }\n        dispatch(getCartDone());\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.GET_CART));\n        dispatch(getCartDone());\n      });\n  };\n};\n\n/* Get final cart, combined with local cart if local items exist */\nexport const getCombinedCart = (cart) => {\n  return (dispatch) => {\n    //Get cart from secure local storage\n    let localCart = getOrCreateLocalCart();\n\n    //If items in local cart, combine local cart with backend cart\n    if (localCart && localCart.quantity > 0) {\n      dispatch(combineCarts(cart));\n    }\n    //Otherwise, just set from backend cart\n    else {\n      dispatch(setCart(cart));\n    }\n  };\n};\n\n/* Set cart in redux store from cart in local storage */\nexport const getCartFromLocalStorage = () => {\n  return (dispatch) => {\n    let localCart = secureStorage.getItem('cart');\n    if (localCart.quantity > 0) {\n      dispatch(setCartFromLocalCart(localCart));\n    }\n    dispatch(getCartDone());\n  };\n};\n\n/* Finish loading cart */\nexport const getCartDone = () => {\n  return {\n    type: actionTypes.GET_CART_DONE,\n  };\n};\n\n/* Combine local cart with backend cart */\nexport const combineCarts = (cart) => {\n  return (dispatch, getState) => {\n    const localCart = getOrCreateLocalCart();\n\n    const cartId = cart._id;\n    return axios\n      .post(`/carts/${cartId}/items`, Object.values(localCart.items))\n      .then((res) => {\n        //Dispatch to update state with combined cart\n        dispatch({\n          type: actionTypes.COMBINE_CARTS,\n          cartId: cartId,\n          items: res.data.cart.items,\n          quantity: res.data.cart.quantity,\n          numItemsAdded: res.data.cart.quantity - localCart.quantity,\n        });\n\n        //Empty the local cart\n        const emptyCart = { items: {}, quantity: 0, pizzaHashMap: {} };\n        secureStorage.setItem('cart', emptyCart);\n      });\n  };\n};\n\n/* Just clear cart items from redux store only. \n   Different from empty cart which empties cart in backend as well */\nexport const signOutCart = () => {\n  return {\n    type: actionTypes.SIGN_OUT_CART,\n  };\n};\n\n/* Add to cart, either new item or increase quantity for already existing item */\nexport const addToCart = (cartId, pizza, quantity) => {\n  return (dispatch) => {\n    const item = { pizza, quantity };\n    if (cartId) {\n      return axios\n        .post(`/carts/${cartId}/items`, [item])\n        .then((res) => {\n          dispatch({\n            type: actionTypes.ADD_TO_CART,\n            items: res.data.cart.items,\n            quantity: res.data.cart.quantity,\n            numItemsAdded: quantity,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.ADD_ITEM_TO_CART));\n        });\n    } else {\n      dispatch(addToLocalCart(item));\n    }\n  };\n};\n\n/* If user not signed in, add to local storage cart */\nconst addToLocalCart = (item) => {\n  return (dispatch) => {\n    //Get local cart\n    let localCart = getOrCreateLocalCart();\n\n    //Hash of pizza to be added\n    let pizzaHash = hash(item.pizza);\n\n    //Local pizza hash map\n    let pizzaHashMap = localCart.pizzaHashMap;\n\n    //This is an object, not an array. Easier to manipulate object\n    //when DB is not involved.\n    let items = localCart.items;\n\n    //If pizza to be added has hash in hash map\n    if (pizzaHash in pizzaHashMap) {\n      //Update quantity of that item\n      items[pizzaHashMap[pizzaHash]].quantity += item.quantity;\n    }\n    //Otherwise, add new item to local cart\n    else {\n      const itemId = uuidv4();\n      pizzaHashMap[pizzaHash] = itemId;\n      item = { _id: itemId, ...item };\n      items[itemId] = item;\n    }\n\n    //Convert objects to array to match items array in DB\n    let itemsArr = Object.values(items);\n    localCart.quantity += item.quantity;\n\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to update state\n    dispatch({\n      type: actionTypes.ADD_TO_CART,\n      items: itemsArr,\n      quantity: localCart.quantity,\n      numItemsAdded: item.quantity,\n    });\n  };\n};\n\n/* Set cart items and metadata in redux store */\nexport const setCart = (cart) => {\n  return {\n    type: actionTypes.SET_CART,\n    cartId: cart._id,\n    items: cart.items,\n    quantity: cart.quantity,\n  };\n};\n\n/* Set cart items and metadata in redux store */\nexport const setCartFromLocalCart = (localCart) => {\n  return {\n    type: actionTypes.SET_CART,\n    items: Object.values(localCart.items),\n    quantity: localCart.quantity,\n  };\n};\n\n/* To set loading in UI when making change to a cart item */\nconst changeCartItemStart = (itemId) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_START,\n    itemIdBeingChanged: itemId,\n  };\n};\n\n/* Successfully changed a cart item. Finish loading that item */\nexport const changeCartItemSuccess = (items, quantity) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_SUCCESS,\n    items: items,\n    quantity: quantity,\n  };\n};\n\n/* To stop loading cart item in UI if changing cart item failed */\nconst changeCartItemFailed = () => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_FAILED,\n  };\n};\n\n/* Set new item quantity and update total quantity */\nexport const changeItemQuantity = (cartId, itemId, pizza, quantity) => {\n  return (dispatch) => {\n    const quantityPatch = { quantity: quantity };\n\n    dispatch(changeCartItemStart(itemId));\n\n    //if user signed in, PUT call to change item quantity in backend cart\n    if (cartId) {\n      axios\n        .patch(`/carts/${cartId}/items/${itemId}`, quantityPatch)\n        .then((res) => {\n          const cart = res.data.cart;\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.CHANGE_ITEM_QUANTITY));\n          dispatch(changeCartItemFailed());\n        });\n    }\n    //if user not signed in, change item quantity in local storage cart\n    else {\n      dispatch(changeItemQuantityInLocalCart(itemId, quantity));\n    }\n  };\n};\n\n/* If user not signed in, change item quantity in local storage cart */\nconst changeItemQuantityInLocalCart = (itemId, quantity) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      dispatch(\n        changeCartItemSuccess(\n          Object.values(localCart.items),\n          localCart.quantity\n        )\n      );\n      return;\n    }\n\n    let items = localCart.items;\n\n    //Update total cart quantity\n    localCart.quantity -= items[itemId].quantity;\n    localCart.quantity += quantity;\n\n    //Update item quantity\n    items[itemId].quantity = quantity;\n\n    //Set back in local storage\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to update cart state\n    dispatch(changeCartItemSuccess(Object.values(items), localCart.quantity));\n  };\n};\n\n/* Remove item from cart in backend if user signed in or from cart in local storage if not */\nexport const removeItem = (cartId, itemId, pizza) => {\n  return (dispatch) => {\n    dispatch(changeCartItemStart(itemId));\n\n    //If user signed in, DELETE call to remove item from backend cart\n    if (cartId) {\n      axios\n        .delete(`/carts/${cartId}/items/${itemId}`)\n        .then((res) => {\n          const cart = res.data.cart;\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionErrors.REMOVE_ITEM));\n        });\n    } else {\n      dispatch(removeItemFromLocalCart(itemId, pizza));\n    }\n  };\n};\n\n/* If user not signed in, remove item from local storage cart */\nconst removeItemFromLocalCart = (itemId, pizza) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      dispatch(setCartFromLocalCart(localCart));\n      return;\n    }\n\n    //Get new cart quantity\n    localCart.quantity -= localCart.items[itemId].quantity;\n\n    //Remove from items\n    delete localCart.items[itemId];\n    delete localCart.pizzaHashMap[hash(pizza)];\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to set cart state\n    dispatch(\n      changeCartItemSuccess(Object.values(localCart.items), localCart.quantity)\n    );\n  };\n};\n\nexport const emptyCart = (cartId) => {\n  return (dispatch) => {\n    //If user signed in, PUT call to empty backend cart\n    if (cartId) {\n      let emptyCart = {\n        items: [],\n      };\n      axios\n        .put(`/carts/${cartId}`, emptyCart)\n        .then(() => {\n          dispatch({\n            type: actionTypes.EMPTY_CART,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.EMPTY_CART));\n        });\n    }\n    //If user not signed in, empty local storage cart\n    else {\n      let emptyCart = { items: {}, pizzaHashMap: {}, quantity: 0 };\n      secureStorage.setItem('cart', emptyCart);\n      dispatch({\n        type: actionTypes.EMPTY_CART,\n      });\n    }\n  };\n};\n\n/* Save item to cart in backend if user signed in or in local storage if not */\nexport const saveToCart = (cartId, pizza, quantity, cartQuantity, itemId) => {\n  return (dispatch) => {\n    const item = { pizza: pizza, quantity: quantity };\n    dispatch(changeCartItemStart(itemId));\n\n    //If user signed in, PUT call to make change to backend cart\n    if (cartId) {\n      axios\n        .put(`/carts/${cartId}/items/${itemId}`, item)\n        .then((res) => {\n          const cart = res.data.cart;\n          //Dispatch to set cart state\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionErrors.SAVE_TO_CART));\n        });\n    }\n    //if user not signed in, make change to local storage cart\n    else {\n      dispatch(saveToLocalCart(itemId, item));\n    }\n  };\n};\n\n/* If user not signed in, make change to local storage cart */\nconst saveToLocalCart = (itemId, item) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      localCart.items = { [itemId]: { _id: itemId, ...item } };\n      localCart.pizzaHashMap[hash(item.pizza)] = itemId;\n      localCart.quantity = item.quantity;\n      secureStorage.setItem('cart', localCart);\n      dispatch(\n        changeCartItemSuccess(\n          Object.values(localCart.items),\n          localCart.quantity\n        )\n      );\n      return;\n    }\n\n    //Local cart items\n    let items = localCart.items;\n\n    //Local pizza hash map\n    let pizzaHashMap = localCart.pizzaHashMap;\n\n    //Hash of pizza to be saved\n    let pizzaHash = hash(item.pizza);\n\n    //Item that needs to be updated\n    let currentItem = items[itemId];\n\n    localCart.quantity += item.quantity - items[itemId].quantity;\n\n    //If hash of pizza to be saved is in hash map\n    if (pizzaHash in pizzaHashMap) {\n      //If matching hash item's id doesn't match\n      if (pizzaHashMap[pizzaHash] !== itemId) {\n        //Then update matching hash item's quantity\n        items[pizzaHashMap[pizzaHash]].quantity += item.quantity;\n\n        delete pizzaHashMap[items[itemId].pizza];\n\n        //And delete the old item\n        delete items[itemId];\n      } else {\n        currentItem.quantity = item.quantity;\n      }\n    } else {\n      delete pizzaHashMap[hash(currentItem.pizza)];\n      items[itemId] = { _id: itemId, ...item };\n      pizzaHashMap[pizzaHash] = itemId;\n    }\n\n    //Save back to local storage\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to set cart state\n    dispatch(changeCartItemSuccess(Object.values(items), localCart.quantity));\n  };\n};\n","export const SUBMIT_ORDER = 'submit your order';\nexport const GET_ORDERS = 'retrieve your orders';\nexport const ADD_ITEM_TO_CART = 'add item(s) to cart';\nexport const CREATE_CART = 'create cart';\nexport const GET_CART = 'retrieve cart';\nexport const EMPTY_CART = 'empty cart';\nexport const CHANGE_ITEM_QUANTITY = 'change item quantity';\nexport const REMOVE_ITEM = 'remove item';\nexport const SAVE_TO_CART = 'save item to cart';\nexport const SIGN_IN = 'sign in';\nexport const SIGN_UP = 'sign up';\nexport const AUTH_TOKEN = 'authenticate token';\nexport const VALIDATE_DELIVERY_ADDRESS = 'validate delivery address';\n","import * as actionTypes from '../checkoutActionTypes';\nimport axios from '../../../shared/axiosAPI';\nimport axiosGeolocation from 'axios';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\n\n/* To set loading in UI when starting to submit order */\nexport const submitOrderStart = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_START,\n  };\n};\n\n/* Submit an order for a user */\nexport const submitOrder = (total, items, deliveryAddress, cartId) => {\n  return (dispatch) => {\n    dispatch(submitOrderStart());\n    let order = {\n      orderDate: new Date(),\n      total: total,\n    };\n\n    if (deliveryAddress) {\n      order = { ...order, deliveryAddress: deliveryAddress };\n    }\n    axios\n      .post('/orders', order)\n      .then((res) => {\n        dispatch({\n          type: actionTypes.SUBMIT_ORDER_SUCCESS,\n          order: res.data.order,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.SUBMIT_ORDER));\n        dispatch(submitOrderFailed());\n      });\n  };\n};\n\n/* Stop loading in UI when submitting order failed */\nexport const submitOrderFailed = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_FAILED,\n  };\n};\n\nexport const clearDeliveryAddress = () => {\n  return {\n    type: actionTypes.CLEAR_DELIVERY_ADDRESS,\n  };\n};\n/* Reset all address validation properties */\nexport const validateDeliveryAddressReset = () => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_RESET,\n  };\n};\n\nexport const validateDeliveryAddressStart = () => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_START,\n  };\n};\n\n/* Call smarty streets geolocation api to validate delivery address */\nexport const validateDeliveryAddress = (addressForm) => {\n  return (dispatch) => {\n    let params = {\n      key: process.env.REACT_APP_SMARTY_STREETS_KEY,\n      street: addressForm.street.value,\n      secondary: addressForm.unit.value,\n      city: addressForm.city.value,\n      state: addressForm.state.value,\n      zipcode: addressForm.zipcode.value,\n      candidates: 1,\n    };\n\n    axiosGeolocation\n      .get(process.env.REACT_APP_SMARTY_STREETS_BASE_URL, {\n        params: params,\n      })\n      .then((res) => {\n        const matchCode = res.data[0].analysis.dpv_match_code;\n        if (matchCode === 'Y') {\n          dispatch({\n            type: actionTypes.VALIDATE_DELIVERY_ADDRESS_SUCCESS,\n            deliveryAddress: {\n              streetAddress: addressForm.street.value,\n              secondaryAddress: addressForm.unit.value,\n              city: addressForm.city.value,\n              state: addressForm.state.value,\n              zipcode: addressForm.zipcode.value,\n            },\n          });\n        } else if (matchCode === 'S' || matchCode === 'D') {\n          dispatch(\n            validateDeliveryAddressFailed(\n              'Missing or incorrect secondary address (apt/unit)'\n            )\n          );\n        } else {\n          dispatch(\n            validateDeliveryAddressFailed('The address you entered is invalid')\n          );\n        }\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.VALIDATE_DELIVERY_ADDRESS));\n        dispatch(validateDeliveryAddressFailed());\n      });\n  };\n};\n\nexport const validateDeliveryAddressFailed = (error) => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_FAILED,\n    error: error,\n  };\n};\n\n/* To finish loading in UI after getting orders failed */\nconst getOrdersFailed = () => {\n  return {\n    type: actionTypes.GET_ORDERS_FAILED,\n  };\n};\n\n/* Get all past orders for a particular user */\nexport const getOrders = () => {\n  return (dispatch) => {\n    return axios\n      .get('/orders')\n      .then((res) => {\n        dispatch({\n          type: actionTypes.GET_ORDERS_SUCCESS,\n          orders: res.data.orders,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.GET_ORDERS));\n        dispatch(getOrdersFailed());\n      });\n  };\n};\n","import * as actionTypes from '../authActionTypes';\nimport {\n  signOutCart,\n  getCartFromLocalStorage,\n  getCart,\n} from '../../cart/cartActions/cartActions';\nimport { getOrders } from '../../checkout/checkoutActions/checkoutActions';\nimport axios from '../../../shared/axiosAPI';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { getOrCreateLocalCart } from '../../../shared/util';\nimport { history } from '../../../index';\n\n/* To show loading in UI when authentication action has started */\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\n/* Reset auth error after unmounting an auth component */\nexport const authReset = () => {\n  return {\n    type: actionTypes.AUTH_RESET,\n  };\n};\n\n/* Failed to initialize app */\nexport const authTokenFailed = () => {\n  return {\n    type: actionTypes.AUTH_TOKEN_FAILED,\n  };\n};\n\n/* Successfully authenticated user and received token/userid */\nexport const authSuccess = (authData) => {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.AUTH_SUCCESS, userId: authData.user._id });\n\n    //Get cart for this user\n    dispatch(getCart());\n\n    //Set automatic sign out\n    dispatch(checkAuthTimeout(authData.expires));\n\n    //Get orders for this user\n    dispatch(getOrders());\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signInFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_IN_FAILED,\n    error: error,\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signUpFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_UP_FAILED,\n    error: error,\n  };\n};\n\n/* Clear user data and cart on sign out */\nexport const signOut = () => {\n  return (dispatch) => {\n    return axios.post('/auth/signout', {}).then(() => {\n      dispatch(signOutCart());\n\n      dispatch({\n        type: actionTypes.AUTH_SIGNOUT,\n      });\n\n      history.push({ pathname: '/', fromSignOut: true });\n    });\n  };\n};\n\n/* Sign out user when expiration time has been reached */\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    //Calculate time to expire based on exact time of expiration\n    let timeToExpire = expirationTime - new Date().getTime();\n\n    //Dispatch sign out action in time to expire\n    setTimeout(() => {\n      dispatch(signOut());\n    }, timeToExpire);\n  };\n};\n\n/* Sign in user with email/password.\n   Also get user's cart and orders once successfully signed in */\nexport const signIn = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n    };\n    return axios\n      .post('/auth/signin', authData)\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionErrors.SIGN_IN));\n        if (err.response) {\n          dispatch(signInFailed(err.response));\n        } else {\n          dispatch(signInFailed(null));\n        }\n      });\n  };\n};\n\n/* Sign up user with email/password */\nexport const signUp = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n    };\n    return axios\n      .post('/auth/signup', authData)\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionErrors.SIGN_UP));\n        if (err.response) {\n          dispatch(signUpFailed(err.response));\n        } else {\n          dispatch(signUpFailed(null));\n        }\n      });\n  };\n};\n\n/* Initialize application upon app load */\nexport const authenticateToken = () => {\n  return (dispatch) => {\n    getOrCreateLocalCart();\n\n    dispatch(authStart());\n\n    return axios\n      .get('/auth/me')\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch(() => {\n        //If an error with api, then get cart from secure local storage\n        dispatch(getCartFromLocalStorage());\n        dispatch(authTokenFailed());\n        dispatch(setErroredAction(actionErrors.AUTH_TOKEN));\n      });\n  };\n};\n","import React from 'react';\nimport './NavigationItem.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Standard navigation item that is part of either the header or sidebar menus */\nconst NavigationItem = (props) => {\n  let classNames = ['navigation-item__text'];\n  if (props.vertical) {\n    classNames.push('navigation-item__text--vertical');\n  }\n  let navigationItemContent = null;\n\n  navigationItemContent = (\n    <span className={classNames.join(' ')}>\n      <h3>{props.children}</h3>\n    </span>\n  );\n\n  let navigationItem = null;\n  if (props.to) {\n    navigationItem = (\n      <Link onClick={props.onClick} to={props.to} className='navigation-item'>\n        {navigationItemContent}\n      </Link>\n    );\n  } else {\n    navigationItem = (\n      <span onClick={props.onClick} className='navigation-item'>\n        {navigationItemContent}\n      </span>\n    );\n  }\n\n  return navigationItem;\n};\n\nNavigationItem.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  vertical: PropTypes.bool,\n};\n\nexport default NavigationItem;\n","import React from 'react';\nimport './PizzaMenuItems.scss';\nimport NavigationItem from '../UI/NavigationItem/NavigationItem';\n\n/* Menu items that display links to different categories of pizza */\n\nconst PizzaMenuItems = (props) => {\n  return (\n    <div className='pizza-menu-items'>\n      <NavigationItem {...props} onClick={props.onClick} to='/'>\n        Popular\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/meats'>\n        Meats\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/chicken'>\n        Chicken\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/veggies'>\n        Veggies\n      </NavigationItem>\n    </div>\n  );\n};\n\nexport default PizzaMenuItems;\n","import React, { Fragment } from 'react';\nimport NavigationItem from '../UI/NavigationItem/NavigationItem';\nimport PropTypes from 'prop-types';\n\n/* Menu items that deal with account information, namely authentication and orders */\nconst AccountMenuItems = (props) => {\n  const handleSignOut = () => {\n    props.signOut();\n  };\n\n  let accountMenuItems = (\n    <NavigationItem {...props} to='/signin' data-test='signin'>\n      Sign In\n    </NavigationItem>\n  );\n  if (props.isAuthenticated) {\n    accountMenuItems = (\n      <Fragment>\n        <NavigationItem {...props} to='/my-orders' data-test='my-orders'>\n          My Orders\n        </NavigationItem>\n        <NavigationItem {...props} onClick={handleSignOut} data-test='signout'>\n          Sign Out\n        </NavigationItem>\n      </Fragment>\n    );\n  }\n  return accountMenuItems;\n};\n\nAccountMenuItems.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nexport default AccountMenuItems;\n","import React from 'react';\nimport './Button.scss';\nimport PropTypes from 'prop-types';\n\nexport const primary = 'button';\nexport const secondary = 'button button--secondary';\nexport const tertiary = 'button button--tertiary';\n\n/* Standard button across entire app */\nconst Button = (props) => {\n  return (\n    <button\n      data-test='button'\n      onClick={props.onClick}\n      disabled={props.disabled}\n      className={props.type}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  type: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n    .isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport './DropdownAlert.scss';\nimport PropTypes from 'prop-types';\n\n/* Dropdown alert disappears automatically in a few seconds */\nconst DropdownAlert = (props) => {\n  return (\n    <div\n      key={props.alertKey}\n      onClick={props.onClick}\n      className='dropdown-menu-alert'\n    >\n      <div className='dropdown-menu-alert__container'>{props.children}</div>\n    </div>\n  );\n};\n\nDropdownAlert.propTypes = {\n  alertKey: PropTypes.string.isRequired,\n  children: PropTypes.array,\n};\n\nexport default React.memo(DropdownAlert);\n","import React, { Component } from 'react';\nimport { MdShoppingCart } from 'react-icons/md';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport DropdownAlert from '../../components/UI/DropdownAlert/DropdownAlert';\nimport PropTypes from 'prop-types';\n\nclass CartIcon extends Component {\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.quantity !== nextProps.quantity) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    let numItemsInCart = null;\n    if (this.props.quantity > 0) {\n      numItemsInCart = (\n        <div\n          data-test='numItems'\n          key={`${this.props.quantity}-num-items`}\n          className='header__cart-items animate-num-items'\n        >\n          {this.props.quantity}\n        </div>\n      );\n    }\n    let itemAdded = null;\n    if (\n      this.props.numItemsAdded > 0 &&\n      this.props.location.pathname !== '/cart' &&\n      this.props.location.pathname !== '/checkout'\n    ) {\n      let numItems = null;\n      if (this.props.numItemsAdded === 1) {\n        numItems = <span>{this.props.numItemsAdded} new item</span>;\n      } else {\n        numItems = <span>{this.props.numItemsAdded} new items</span>;\n      }\n      itemAdded = (\n        <DropdownAlert\n          data-test='itemAdded'\n          onClick={this.handleClickItemAddedAlert}\n          alertKey={`${this.props.quantity}-add-items`}\n        >\n          <h3 className='header__alert-text'>{numItems} added to cart</h3>\n          <Link\n            onClick={this.handleClickCheckout}\n            className='header__checkout'\n            to={{\n              pathname: this.props.isAuthenticated\n                ? '/checkout/order-type'\n                : '/signin',\n              fromCheckout: true,\n            }}\n          >\n            <Button type={primary}>Checkout</Button>\n          </Link>\n        </DropdownAlert>\n      );\n    }\n\n    return (\n      <div style={{ height: '100%' }} data-test='cartIconContainer'>\n        <NavigationItem to='/cart' data-test='navigationItem'>\n          <div className='header__cart header__icon' data-test='cartIcon'>\n            <MdShoppingCart />\n            {numItemsInCart}\n          </div>\n        </NavigationItem>\n        {itemAdded}\n      </div>\n    );\n  }\n}\n\nCartIcon.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default withRouter(CartIcon);\n","import React, { Component } from 'react';\nimport './Header.scss';\nimport PizzaTimeLogo from '../../assets/images/alarm-clock.png';\nimport { MdMenu } from 'react-icons/md';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport PizzaMenuItems from '../../components/PizzaMenuItems/PizzaMenuItems';\nimport AccountMenuItems from '../../components/AccountMenuItems/AccountMenuItems';\nimport CartIcon from '../../components/CartIcon/CartIcon';\nimport PropTypes from 'prop-types';\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nclass Header extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.isAuthenticated !== nextProps.isAuthenticated\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClickMenuIcon = () => {\n    this.props.toggleSidebar();\n  };\n\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  render() {\n    return (\n      <header className='header'>\n        <div className='header__main'>\n          <div onClick={this.handleClickMenuIcon} className='header__menu'>\n            <NavigationItem>\n              <div className='header__icon'>\n                <MdMenu />\n              </div>\n            </NavigationItem>\n          </div>\n          <Link to='/' className='header__logo-title'>\n            <img\n              alt='PizzaTime logo'\n              className='header__logo'\n              src={PizzaTimeLogo}\n            />\n            <div className='header__title'>\n              <span>PizzaTime</span>\n            </div>\n          </Link>\n          <div className='header__menu-items'>\n            <PizzaMenuItems />\n          </div>\n        </div>\n        <div className='header__account'>\n          <div className='header__account-actions'>\n            <AccountMenuItems\n              isAuthenticated={this.props.isAuthenticated}\n              signOut={this.props.signOut}\n            />\n          </div>\n          <div style={{ position: 'relative' }}>\n            <CartIcon\n              numItemsAdded={this.props.numItemsAdded}\n              quantity={this.props.quantity}\n            />\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toggleSidebar } from '../store/ui/uiActions/uiActions';\nimport { signOut } from '../store/auth/authActions/authActions';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header/Header';\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nconst HeaderContainer = (props) => {\n  return <Header {...props} />;\n};\n\nHeaderContainer.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  quantity: state.cart.quantity,\n  numItemsAdded: state.cart.numItemsAdded,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { toggleSidebar, signOut })(\n  withRouter(HeaderContainer)\n);\n","import React from 'react';\nimport './Footer.scss';\nimport { Link } from 'react-router-dom';\n\n/* Footer containing informational links */\nconst Footer = (props) => {\n  return (\n    <footer className='footer'>\n      <div className='footer__links'>\n        <Link to='#'>ABOUT</Link>\n        <Link to='#'>CONTACT US</Link>\n        <Link to='#'>CAREERS</Link>\n        <Link to='#'>PRIVACY POLICY</Link>\n        <Link to='#'>TERMS</Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './Backdrop.scss';\nimport PropTypes from 'prop-types';\n\n/* Greyed out backdrop on top of provided children */\nconst Backdrop = (props) => {\n  return props.show ? <div className='backdrop'>{props.children}</div> : null;\n};\n\nBackdrop.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport './Modal.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport { useEffect } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport PropTypes from 'prop-types';\n\n/* Standard modal across entire app */\nconst Modal = (props) => {\n  useEffect(() => {\n    if (props.show) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  });\n\n  let modalClassNames = ['modal'];\n  if (props.error) {\n    modalClassNames.push('modal--error');\n  }\n  if (!props.show) {\n    modalClassNames.push('modal--closed');\n  }\n  return (\n    <Backdrop show={props.show} clicked={props.modalClosed}>\n      <div className={modalClassNames.join(' ')}>\n        <MdClose className='modal__close' onClick={props.modalClosed} />\n        <div className='modal__children'>{props.children}</div>\n      </div>\n    </Backdrop>\n  );\n};\n\nModal.propTypes = {\n  show: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  error: PropTypes.bool,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Modal from '../components/UI/Modal/Modal';\nimport { connect } from 'react-redux';\nimport { SIGN_IN, SIGN_UP, AUTH_TOKEN } from '../shared/actionErrors';\n\n/* Axios error handler HOC */\nconst withErrorHandler = (WrappedComponent, axios) => {\n  class HOComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.requestInterceptor = null;\n      this.responseInterceptor = null;\n    }\n    state = {\n      error: null,\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      if (!this.state.error && nextState.error) {\n        return false;\n      }\n      return true;\n    }\n\n    componentDidMount() {\n      this.requestInterceptor = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n\n      this.responseInterceptor = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n          return Promise.reject(error);\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.requestInterceptor);\n      axios.interceptors.response.eject(this.responseInterceptor);\n    }\n\n    handleModalClosed = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      //Don't show error modal for certain actions\n      //They have their own error handling\n      let excludeActions = [SIGN_UP, SIGN_IN, AUTH_TOKEN];\n      if (\n        this.state.error &&\n        this.state.error.message !== 'Network Error' &&\n        this.state.error.response.status !== 500 &&\n        excludeActions.includes(this.props.erroredAction)\n      ) {\n        return <WrappedComponent {...this.props} />;\n      }\n      let erroredAction = 'perform action';\n      erroredAction = this.props.erroredAction || erroredAction;\n\n      return (\n        <React.Fragment>\n          <Modal\n            error\n            show={this.state.error}\n            modalClosed={this.handleModalClosed}\n          >\n            {this.state.error\n              ? `Unable to ${erroredAction}: ${this.state.error.message}`\n              : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    erroredAction: state.ui.erroredAction,\n  });\n\n  return connect(mapStateToProps, null)(HOComponent);\n};\n\nexport default withErrorHandler;\n","import React from 'react';\nimport HeaderContainer from '../../../containers/HeaderContainer';\nimport Footer from '../Footer/Footer';\nimport './Layout.scss';\nimport PropTypes from 'prop-types';\nimport withErrorHandler from '../../../hoc/withErrorHandler';\nimport axiosAPI from '../../../shared/axiosAPI';\n\n/* Overall app layout */\nconst Layout = (props) => {\n  return (\n    <div className='layout' data-test='layout'>\n      <HeaderContainer data-test='header' />\n      <main className='main' data-test='main'>\n        {props.children}\n      </main>\n      <Footer data-test='footer' />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default withErrorHandler(Layout, axiosAPI);\n","import * as actionTypes from '../pizzaBuilderActionTypes';\nimport { REGULAR_TOPPING, WHOLE } from '../../../metadata/pizzaProperties';\n\n/* Initialize pizza builder with properties of given pizza */\nexport const initializePizzaBuilder = (pizza, quantity, itemId) => {\n  return {\n    type: actionTypes.INIT_PIZZA_BUILDER,\n    pizza: pizza,\n    quantity: quantity,\n    itemId: itemId,\n  };\n};\n\nexport const closePizzaBuilder = () => {\n  return {\n    type: actionTypes.CLOSE_PIZZA_BUILDER,\n  };\n};\n\n/* Dynamically set a pizza property value */\nexport const setProperty = (property, value) => {\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: value,\n  };\n};\n\n/* Select/deselect a topping */\nexport const toggleTopping = (pizza, property, value) => {\n  let toppings = [...pizza[property]];\n\n  const toppingIndex = toppings.findIndex(\n    (topping) => topping.toppingName === value\n  );\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: value,\n      amount: REGULAR_TOPPING,\n      portion: WHOLE,\n    });\n  } else {\n    toppings.splice(toppingIndex, 1);\n  }\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n\n/* Set the topping amount, whether regular/extra */\nexport const setToppingAmount = (pizza, property, topping, value) => {\n  let toppings = [...pizza[property]];\n  const toppingIndex = toppings.findIndex(\n    (selectedTopping) => selectedTopping.toppingName === topping\n  );\n\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: topping,\n      amount: value,\n      portion: WHOLE,\n    });\n  } else {\n    toppings[toppingIndex] = {\n      ...toppings[toppingIndex],\n      amount: value,\n    };\n  }\n\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n\n/* Set the topping portion, whether left/right/whole */\nexport const setToppingPortion = (pizza, property, topping, value) => {\n  let toppings = [...pizza[property]];\n  const toppingIndex = toppings.findIndex(\n    (selectedTopping) => selectedTopping.toppingName === topping\n  );\n\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: topping,\n      amount: REGULAR_TOPPING,\n      portion: value,\n    });\n  } else {\n    toppings[toppingIndex] = {\n      ...toppings[toppingIndex],\n      portion: value,\n    };\n  }\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n","import React from 'react';\nimport './Dropdown.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard dropdown selectors across entire app */\nconst Dropdown = (props) => {\n  return (\n    <select\n      value={props.value ? props.value : 1}\n      onChange={props.onChange}\n      className='dropdown'\n    >\n      {props.options.map((option) => {\n        return <option key={option}>{option}</option>;\n      })}\n    </select>\n  );\n};\n\nDropdown.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  options: PropTypes.array.isRequired,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport './PizzaBox.scss';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport Button from '../../components/UI/Button/Button';\nimport { crustMetadataMapping } from '../../metadata/crustMetadata';\nimport { sizes } from '../../metadata/sizeMetadata';\nimport { primary, secondary } from '../../components/UI/Button/Button';\nimport { calculatePrice, normalizePizza, getCrust } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* UI box container that holds an pizza and lets user customize various pizza properties.\n   Can add pizza to order and also build your own pizza from here. */\nconst PizzaBox = (props) => {\n  const handleAddToCart = () => {\n    let pizza = { ...props.pizza };\n    pizza.crust = getCrust(pizza.crust);\n    props.addToCart(props.cartId, normalizePizza(pizza), props.quantity);\n    props.resetState();\n  };\n\n  const crustOptions = Object.entries(crustMetadataMapping).map(\n    ([crust, crustMetadata]) => {\n      return (\n        crust +\n        (crustMetadata.additionalDisplay\n          ? ` ${crustMetadata.additionalDisplay}`\n          : '')\n      );\n    }\n  );\n\n  const sizeOptions = sizes;\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  let pizza = { ...props.pizza };\n  pizza.crust = getCrust(pizza.crust);\n  const price = calculatePrice(pizza);\n\n  let pizzaAdd = null;\n  let pizzaName = null;\n  let customize = null;\n  let customizeSecondary = null;\n\n  if (props.buildPizza) {\n    pizzaAdd = (\n      <Button type={primary} onClick={props.handleClickBuild}>\n        Get Started\n      </Button>\n    );\n    pizzaName = 'Build Your Own';\n    customize = <div className='empty-button'></div>;\n  } else {\n    pizzaAdd = (\n      <React.Fragment>\n        <div className='pizza-box__quantity'>\n          <Dropdown\n            onChange={props.handleChangeQuantity}\n            options={quantityOptions}\n            value={props.quantity}\n          />\n        </div>\n        <Button type={primary} onClick={handleAddToCart}>\n          Add to Order\n        </Button>\n      </React.Fragment>\n    );\n    pizzaName = props.pizzaType;\n    customize = (\n      <Button type={secondary} onClick={props.handleClickBuild}>\n        Customize\n      </Button>\n    );\n    customizeSecondary = (\n      <span\n        className='pizza-box__customize link'\n        onClick={props.handleClickBuild}\n      >\n        Customize\n      </span>\n    );\n  }\n\n  return (\n    <div className='pizza-box'>\n      <h3 className='pizza-box__name'>{pizzaName} Pizza</h3>\n      <div className='pizza-box__container'>\n        <div className='pizza-box__details'>\n          {customizeSecondary}\n\n          <h4 className='pizza-box__price'>\n            ${(props.quantity * price).toFixed(2)}\n          </h4>\n          <div className='pizza-box__options'>\n            <div className='pizza-box__crust'>\n              <Dropdown\n                options={crustOptions}\n                onChange={props.handleChangeCrust}\n                value={props.pizza.crust}\n              />\n            </div>\n            <div className='pizza-box__size'>\n              <Dropdown\n                options={sizeOptions}\n                onChange={props.handleChangeSize}\n                value={props.pizza.size}\n              />\n            </div>\n            <div className='pizza-box__add'>{pizzaAdd}</div>\n          </div>\n        </div>\n        <div className='pizza-box__right'>\n          <img\n            className='pizza-box__image'\n            src={props.imageSrc}\n            alt={props.pizzaName}\n          />\n          {customize}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPizzaBox.propTypes = {\n  priceType: PropTypes.string.isRequired,\n  pizzaType: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  pizzaName: PropTypes.string,\n};\n\nexport default PizzaBox;\n","import React, { Component } from 'react';\nimport { HAND_TOSSED } from '../metadata/crustMetadata';\nimport { LARGE } from '../metadata/sizeMetadata';\nimport { toppingMapping } from '../metadata/comboMetadata';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport { addToCart } from '../store/cart/cartActions/cartActions';\nimport { SIZE, CRUST, COMBO_NAME } from '../metadata/pizzaProperties';\nimport { normalizePizza, getCrust } from '../shared/util';\nimport PropTypes from 'prop-types';\nimport PizzaBox from '../components/PizzaBox/PizzaBox';\n\n/* Container for PizzaBox component */\nclass PizzaBoxContainer extends Component {\n  constructor(props) {\n    super(props);\n    const initialState = this.getInitialState();\n    this.state = {\n      ...initialState,\n    };\n  }\n\n  getInitialState = () => {\n    let initialState = {\n      pizza: {\n        priceType: this.props.priceType,\n        [COMBO_NAME]: this.props.pizzaType,\n        [CRUST]: HAND_TOSSED,\n        [SIZE]: LARGE,\n      },\n      quantity: 1,\n    };\n\n    if (toppingMapping[this.props.pizzaType]) {\n      initialState = {\n        ...initialState,\n        pizza: {\n          ...initialState.pizza,\n          ...toppingMapping[this.props.pizzaType],\n        },\n      };\n    }\n\n    return initialState;\n  };\n\n  resetState = () => {\n    this.setState(this.getInitialState());\n  };\n\n  handleChangeQuantity = (event) => {\n    event.persist();\n    this.setState({\n      quantity: parseInt(event.target.value),\n    });\n  };\n\n  handleChangeCrust = (event) => {\n    event.persist();\n\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [CRUST]: event.target.value,\n      },\n    });\n  };\n\n  handleChangeSize = (event) => {\n    event.persist();\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [SIZE]: event.target.value,\n      },\n    });\n  };\n\n  handleClickBuild = () => {\n    let pizza = { ...this.state.pizza };\n    pizza.crust = getCrust(pizza.crust);\n    this.props.initializePizzaBuilder(\n      normalizePizza(pizza),\n      this.state.quantity\n    );\n    this.resetState();\n  };\n\n  render() {\n    return (\n      <PizzaBox\n        handleClickBuild={this.handleClickBuild}\n        handleChangeSize={this.handleChangeSize}\n        handleChangeCrust={this.handleChangeCrust}\n        handleChangeQuantity={this.handleChangeQuantity}\n        resetState={this.resetState}\n        {...this.props}\n        {...this.state}\n      />\n    );\n  }\n}\n\nPizzaBoxContainer.propTypes = {\n  cartId: PropTypes.string,\n  priceType: PropTypes.string.isRequired,\n  pizzaType: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  pizzaName: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  cartId: state.cart.cartId,\n});\nexport default connect(mapStateToProps, { initializePizzaBuilder, addToCart })(\n  PizzaBoxContainer\n);\n","import React from 'react';\nimport './Message.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard message alert to the user component */\nconst Message = (props) => {\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <div className='message'>\n          <h4 style={{ display: 'inline' }}>{props.children} </h4>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default Message;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniPizzaImg from '../../../assets/images/pizza_pepperoni.jpg';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  PEPPERONI_PIZZA,\n  MEAT_LOVER,\n  SUPREME,\n} from '../../../metadata/comboMetadata';\nimport Message from '../../UI/Message/Message';\nimport { Link } from 'react-router-dom';\n\n/* Displays popular pizzas */\nconst Home = (props) => {\n  let message = null;\n  if (props.location.fromCheckout) {\n    message = (\n      <Message>\n        <React.Fragment>\n          Thank you for ordering at PizzaTime! View your{' '}\n          <Link className='link' to='/my-orders' data-test='orders'>\n            orders\n          </Link>\n          .\n        </React.Fragment>\n      </Message>\n    );\n  } else if (props.location.fromSignOut) {\n    message = <Message>You are now signed out!</Message>;\n  } else if (props.location.fromSignUp) {\n    message = <Message>You have successfully created an account!</Message>;\n  }\n\n  return (\n    <React.Fragment>\n      {message}\n      <div className='pizza-grid'>\n        <h1 className='pizza-grid__title'>Popular</h1>\n        <div className='pizza-grid__grid'>\n          <PizzaBoxContainer\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            buildPizza\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={PEPPERONI_PIZZA}\n            priceType={REGULAR}\n            imageSrc={PepperoniPizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={MEAT_LOVER}\n            priceType={COMBO}\n            imageSrc={MeatLoversPizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={SUPREME}\n            priceType={COMBO}\n            imageSrc={SupremePizzaImg}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniLoversPizzaImg from '../../../assets/images/pizza_Pepperoni_Lovers.png';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  MEAT_LOVER,\n  SUPREME,\n  SUPER_SUPREME,\n  PEPPERONI_LOVER,\n} from '../../../metadata/comboMetadata';\n\n/* Displays various types of meat pizzas */\nconst Meats = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Meats</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={MEAT_LOVER}\n          priceType={COMBO}\n          imageSrc={MeatLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={PEPPERONI_LOVER}\n          priceType={COMBO}\n          imageSrc={PepperoniLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={SUPER_SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Meats;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport VeggieLoversPizzaImg from '../../../assets/images/pizza_Veggie_Lovers.png';\nimport UltimateCheeseLoverPizzaImg from '../../../assets/images/pizza_Ultimate_Cheese_Lovers.png';\nimport {\n  REGULAR,\n  COMBO,\n  VEGGIE_LOVER,\n  ULTIMATE_CHEESE_LOVER,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of veggy pizzas */\nconst Veggies = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Veggies</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={VEGGIE_LOVER}\n          priceType={COMBO}\n          imageSrc={VeggieLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={ULTIMATE_CHEESE_LOVER}\n          priceType={COMBO}\n          imageSrc={UltimateCheeseLoverPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Veggies;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport HawaiianChickenPizzaImg from '../../../assets/images/pizza_Hawaiian_Chicken.png';\nimport ChickenBaconParmesanImg from '../../../assets/images/pizza_Chicken_Bacon_Parmesan.png';\nimport BBQChickenPizzaImg from '../../../assets/images/pizza_Backyard_BBQ_Chicken.png';\nimport BuffaloChickenPizzaImg from '../../../assets/images/pizza_Buffalo_Chicken.png';\nimport {\n  REGULAR,\n  COMBO,\n  HAWAIIAN_CHICKEN,\n  CHICKEN_BACON_PARMESAN,\n  BBQ_CHICKEN,\n  BUFFALO_CHICKEN,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of chicken pizza */\nconst Chicken = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Chicken</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={HAWAIIAN_CHICKEN}\n          priceType={COMBO}\n          imageSrc={HawaiianChickenPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={CHICKEN_BACON_PARMESAN}\n          priceType={COMBO}\n          imageSrc={ChickenBaconParmesanImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={BBQ_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BBQChickenPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={BUFFALO_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BuffaloChickenPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chicken;\n","import React, { Component } from 'react';\nimport Cheese from '../../assets/images/cheese_mozz_ML.png';\nimport './PizzaPreview.scss';\nimport { crustMetadataMapping } from '../../metadata/crustMetadata';\nimport { meatImageMapping } from '../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../metadata/veggiesMetadata';\nimport { crustFlavorImageMapping } from '../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image with all selected toppings and crust options */\nclass PizzaPreview extends Component {\n  render() {\n    return (\n      <div\n        className={this.props.small ? 'pizza-preview--small' : 'pizza-preview'}\n      >\n        <img\n          className='pizza-preview__property'\n          src={crustMetadataMapping[this.props.pizza[CRUST]].preview}\n          alt={this.props.pizza[CRUST]}\n        />\n        {this.props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR ? (\n          <img\n            className='pizza-preview__property'\n            src={\n              crustFlavorImageMapping[this.props.pizza[CRUST_FLAVOR]][\n                this.props.pizza[CRUST]\n              ].preview\n            }\n            alt={this.props.pizza[CRUST_FLAVOR]}\n          />\n        ) : null}\n        <img className='pizza-preview__property' src={Cheese} alt='Cheese' />\n        {this.props.pizza[MEATS] &&\n          this.props.pizza[MEATS].map((meat) => {\n            let src = null;\n            if (meat.amount === EXTRA_TOPPING) {\n              src = meatImageMapping[meat.toppingName].previewExtra;\n            } else {\n              src = meatImageMapping[meat.toppingName].preview;\n            }\n\n            let imgClassNames = ['pizza-preview__property'];\n            if (meat.portion === LEFT_HALF) {\n              imgClassNames.push('pizza-preview__property--left');\n            } else if (meat.portion === RIGHT_HALF) {\n              imgClassNames.push('pizza-preview__property--right');\n            }\n            return (\n              <img\n                key={meat.toppingName}\n                className={imgClassNames.join(' ')}\n                src={src}\n                alt={meat.toppingName}\n              />\n            );\n          })}\n        {this.props.pizza[VEGGIES] &&\n          this.props.pizza[VEGGIES].map((veggy) => {\n            let src = null;\n            if (veggy.amount === EXTRA_TOPPING) {\n              src = veggiesImageMapping[veggy.toppingName].previewExtra;\n            } else {\n              src = veggiesImageMapping[veggy.toppingName].preview;\n            }\n\n            let imgClassNames = ['pizza-preview__property'];\n            if (veggy.portion === LEFT_HALF) {\n              imgClassNames.push('pizza-preview__property--left');\n            } else if (veggy.portion === RIGHT_HALF) {\n              imgClassNames.push('pizza-preview__property--right');\n            }\n            return (\n              <img\n                key={veggy.toppingName}\n                className={imgClassNames.join(' ')}\n                src={src}\n                alt={veggy.toppingName}\n              />\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nPizzaPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  small: PropTypes.bool,\n};\n\nexport default PizzaPreview;\n","import React, { Component } from 'react';\nimport './PizzaBuilderPreview.scss';\nimport PizzaPreview from '../../PizzaPreview/PizzaPreview';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image section of the pizza builder */\nclass PizzaBuilderPreview extends Component {\n  shouldComponentUpdate(prevProps) {\n    if (this.props.pizza !== prevProps.pizza) {\n      return true;\n    }\n    return false;\n  }\n  render() {\n    return (\n      <div className='pizza-builder-preview'>\n        <h4 className='builder-section__title'>Preview</h4>\n        <div className='pizza-builder-preview__preview'>\n          <PizzaPreview pizza={this.props.pizza} />\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaBuilderPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default PizzaBuilderPreview;\n","import React from 'react';\nimport './PizzaDescription.scss';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport {\n  SIZE,\n  CRUST,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  COMBO_NAME,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CHEESE } from '../../metadata/cheeseMetadata';\nimport { NO_SAUCE } from '../../metadata/sauceMetadata';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Description of pizza, including size, toppings and other descriptives */\nconst PizzaDescription = (props) => {\n  let sauce = `${props.pizza[SAUCE_AMOUNT]} ${props.pizza[SAUCE]}`;\n  if (props.pizza[SAUCE_AMOUNT] === NO_SAUCE) {\n    sauce = 'No';\n  }\n\n  let cheeseAmount = props.pizza[CHEESE_AMOUNT];\n  if (props.pizza[CHEESE_AMOUNT] === NO_CHEESE) {\n    cheeseAmount = 'No';\n  }\n\n  let crustFlavor = null;\n  if (props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR) {\n    crustFlavor = <span>, {props.pizza[CRUST_FLAVOR]} Crust Flavor</span>;\n  }\n\n  const getToppingDescriptions = (toppings) => {\n    let toppingDescriptions = [];\n    toppings.forEach((topping) => {\n      let toppingDescription = '';\n      if (topping.portion === LEFT_HALF) {\n        toppingDescription += 'Left Half ';\n      } else if (topping.portion === RIGHT_HALF) {\n        toppingDescription += 'Right Half ';\n      }\n\n      if (topping.amount === EXTRA_TOPPING) {\n        toppingDescription += 'Extra ';\n      }\n      toppingDescriptions.push(toppingDescription + topping.toppingName);\n    });\n\n    return toppingDescriptions;\n  };\n\n  let meats = props.pizza[MEATS];\n  let veggies = props.pizza[VEGGIES];\n\n  let toppings = [\n    ...getToppingDescriptions(meats),\n    ...getToppingDescriptions(veggies),\n  ];\n\n  if (toppings.length === 0) {\n    toppings = null;\n  } else {\n    toppings = (\n      <div className='description__toppings'>\n        <h3>Toppings: </h3>\n        <span>{toppings.join(', ')}</span>\n      </div>\n    );\n  }\n\n  const singlePrice = calculatePrice(props.pizza);\n  let overallPrice = (singlePrice * props.quantity).toFixed(2);\n  let quantity = null;\n  let pizzaText = 'Pizza';\n\n  if (props.cart) {\n    overallPrice = (\n      <h2 className='description__price--cart'>${overallPrice}</h2>\n    );\n  } else if (props.order) {\n    overallPrice = (\n      <h3 className='description__price--order'>${overallPrice}</h3>\n    );\n    quantity = `${props.quantity} `;\n    if (props.quantity > 1) {\n      pizzaText = 'Pizzas';\n    }\n  } else {\n    overallPrice = <h2 className='description__price'>${overallPrice}</h2>;\n  }\n\n  return (\n    <div className='description'>\n      <div className='description__title'>\n        <div className='description__pizza'>\n          <h2 className='description__pizza-title'>\n            {quantity} {props.pizza[SIZE]} {props.pizza[CRUST]}{' '}\n            {props.pizza[COMBO_NAME]} {pizzaText}\n          </h2>\n        </div>\n        {overallPrice}\n      </div>\n      <div className='description__details'>\n        <span>{sauce} Sauce, </span>\n        <span>{cheeseAmount} Cheese</span>\n        {crustFlavor}\n        {toppings}\n      </div>\n    </div>\n  );\n};\n\nPizzaDescription.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n  cart: PropTypes.bool,\n  order: PropTypes.bool,\n};\n\nexport default PizzaDescription;\n","import React, { Component } from 'react';\nimport Dropdown from '../../UI/Dropdown/Dropdown';\nimport Button, { primary } from '../../UI/Button/Button';\nimport PizzaDescription from '../../PizzaDescription/PizzaDescription';\nimport './PizzaDetails.scss';\nimport { calculatePrice } from '../../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shows pizza description, as well as options to change quantity and add/save to cart */\nclass PizzaDetails extends Component {\n  state = {\n    quantity: this.props.quantity,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.pizza !== nextProps.pizza ||\n      this.state.quantity !== nextState.quantity\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChangeQuantity = (event) => {\n    this.setState({ quantity: parseInt(event.target.value) });\n  };\n\n  render() {\n    const price = calculatePrice(this.props.pizza, true);\n\n    let save = null;\n    if (this.props.itemId) {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.saveToCart(this.state.quantity)}\n        >\n          Save Changes\n        </Button>\n      );\n    } else {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.addToCart(this.state.quantity)}\n        >\n          Add to Cart\n        </Button>\n      );\n    }\n\n    return (\n      <div className='pizza-details'>\n        <h3 className='builder-title'>My Pizza</h3>\n        <div className='pizza-details__details'>\n          <div className='pizza-details__description'>\n            <PizzaDescription\n              quantity={this.state.quantity}\n              pizza={this.props.pizza}\n            />\n          </div>\n          <div className='pizza-details__options'>\n            <h2 className='pizza-details__price'>\n              ${(price * this.state.quantity).toFixed(2)}\n            </h2>\n            <div className='pizza-details__quantity'>\n              <Dropdown\n                className='item__size'\n                options={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n                value={this.state.quantity}\n                onChange={this.handleChangeQuantity}\n              />\n            </div>\n            <div className='pizza-details__save'>{save}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaDetails.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n};\n\nexport default PizzaDetails;\n","import React, { useEffect } from 'react';\nimport './PizzaBuilderProgress.scss';\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS,\n} from '../../../containers/PizzaBuilderContainer';\nimport PropTypes from 'prop-types';\n\n/* Shows progress of steps in the pizza builder */\nconst PizzaBuilderProgress = (props) => {\n  useEffect(() => {}, [props.stage]);\n  return (\n    <div className='progress'>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === TOPPINGS\n            ? 'progress__button progress__button--toppings progress__button--selected'\n            : 'progress__button progress__button--toppings'\n        }\n        value={TOPPINGS}\n      >\n        Toppings\n      </button>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === CHEESE_SAUCE\n            ? 'progress__button progress__button--cheese-sauce progress__button--selected'\n            : 'progress__button progress__button--cheese-sauce'\n        }\n        value={CHEESE_SAUCE}\n      >\n        Cheese &amp; Sauce\n      </button>\n      <button\n        onClick={props.onClick}\n        className='progress__button progress__button--size-crust'\n        value={SIZE_CRUST}\n      >\n        Size &amp; Crust\n      </button>\n    </div>\n  );\n};\n\nPizzaBuilderProgress.propTypes = {\n  stage: PropTypes.oneOf(['SIZE_CRUST', 'CHEESE_SAUCE', 'TOPPINGS']).isRequired,\n};\n\nexport default PizzaBuilderProgress;\n","import React from 'react';\nimport './ImageOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as images in the pizza builder */\nconst ImageOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {Object.keys(props.imageMapping).map((option) => {\n        const selected = props.itemSelected === option;\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className='option'\n            data-value={option}\n          >\n            {selected ? <FaCheckCircle className='option__checkmark' /> : null}\n            <img\n              className='option__img'\n              src={props.imageMapping[option].icon}\n              alt={option}\n            />\n            <div\n              className={\n                selected\n                  ? 'option__name option__name--selected'\n                  : 'option__name'\n              }\n            >\n              {option} {additionalDisplay}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nImageOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ImageOptions;\n","import React from 'react';\nimport './ButtonOptions.scss';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as buttons in the pizza builder */\nconst ButtonOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {props.selectionOptions.map((option) => {\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className={\n              props.itemSelected === option\n                ? 'button-option button-option--selected'\n                : 'button-option'\n            }\n            data-value={option}\n          >\n            {option} {additionalDisplay}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nButtonOptions.propTypes = {\n  selectionOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ButtonOptions;\n","import React, { Component } from 'react';\nimport {\n  crustTypes,\n  crustMetadataMapping,\n} from '../../../../metadata/crustMetadata';\nimport {\n  crust_flavors,\n  crustFlavorImageMapping,\n} from '../../../../metadata/crustFlavorMetadata';\nimport { sizes } from '../../../../metadata/sizeMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SIZE,\n  CRUST,\n  CRUST_FLAVOR,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with size/crust options */\nclass SizeCrustBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Size</h4>\n          <ButtonOptions\n            selectionOptions={sizes}\n            itemSelected={this.props.pizza[SIZE]}\n            onClick={(e) => this.props.onClick(e, SIZE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust</h4>\n          <ImageOptions\n            selectionMetadata={crustMetadataMapping}\n            selectionOptions={crustTypes}\n            itemSelected={this.props.pizza[CRUST]}\n            imageMapping={crustMetadataMapping}\n            onClick={(e) => this.props.onClick(e, CRUST)}\n          />\n        </div>\n\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust Flavor</h4>\n          <ImageOptions\n            selectionOptions={crust_flavors}\n            itemSelected={this.props.pizza[CRUST_FLAVOR]}\n            imageMapping={crustFlavorImageMapping}\n            onClick={(e) => this.props.onClick(e, CRUST_FLAVOR)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSizeCrustBuilder.proptTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default SizeCrustBuilder;\n","import React, { Component } from 'react';\nimport {\n  cheeseAmounts,\n  cheeseAmountMetadataMapping,\n} from '../../../../metadata/cheeseMetadata';\nimport {\n  sauceImageMapping,\n  sauceAmounts,\n  sauceAmountMetadataMapping,\n} from '../../../../metadata/sauceMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with cheese/sauce options */\nclass CheeseSauceBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Sauce</h2>\n          <ImageOptions\n            itemSelected={this.props.pizza[SAUCE]}\n            imageMapping={sauceImageMapping}\n            onClick={(e) => this.props.onClick(e, SAUCE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Sauce</h2>\n          <ButtonOptions\n            selectionMetadata={sauceAmountMetadataMapping}\n            selectionOptions={sauceAmounts}\n            itemSelected={this.props.pizza[SAUCE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, SAUCE_AMOUNT)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Cheese</h2>\n          <ButtonOptions\n            selectionMetadata={cheeseAmountMetadataMapping}\n            selectionOptions={cheeseAmounts}\n            itemSelected={this.props.pizza[CHEESE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, CHEESE_AMOUNT)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCheeseSauceBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default CheeseSauceBuilder;\n","import React from 'react';\nimport './ToppingOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport {\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Interactable topping options */\n\nconst ToppingOptions = (props) => {\n  const onClick = (event) => {\n    event.stopPropagation();\n    props.onClick(event);\n  };\n\n  const onClickAmount = (event) => {\n    event.stopPropagation();\n    props.onClickAmount(event);\n  };\n\n  const onClickPortion = (event) => {\n    event.stopPropagation();\n    props.onClickPortion(event);\n  };\n\n  return (\n    <div className='builder-list'>\n      {Object.keys(props.imageMapping).map((topping) => {\n        const selection = props.itemsSelected.find(\n          (itemSelected) => itemSelected.toppingName === topping\n        );\n        let checkMark = null;\n        let toppingOptionClasses = ['topping-option'];\n        let amountOptions = null;\n        let portionOptions = null;\n        toppingOptionClasses.push('topping-option--selected');\n        amountOptions = (\n          <div className='topping-option__amount'>\n            <div\n              className={\n                selection && selection.amount === EXTRA_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={EXTRA_TOPPING}\n              onClick={onClickAmount}\n            >\n              Extra\n            </div>\n            <div\n              className={\n                selection && selection.amount === REGULAR_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={REGULAR_TOPPING}\n              onClick={onClickAmount}\n            >\n              Regular\n            </div>\n            <div\n              className={\n                !selection\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-value={topping}\n              onClick={onClick}\n            >\n              None\n            </div>\n          </div>\n        );\n        if (selection) {\n          checkMark = <FaCheckCircle className='topping-option__checkmark' />;\n\n          let wholeSelection = selection.portion === WHOLE;\n          let leftSelection = selection.portion === LEFT_HALF;\n          let rightSelection = selection.portion === RIGHT_HALF;\n          portionOptions = (\n            <div className='topping-option__portion'>\n              <div\n                className={\n                  wholeSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={WHOLE}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    wholeSelection\n                      ? 'portion-option__whole portion-option__whole--selected'\n                      : 'portion-option__whole'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  leftSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={LEFT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    leftSelection\n                      ? 'portion-option__left portion-option__left--selected'\n                      : 'portion-option__left'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  rightSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={RIGHT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    rightSelection\n                      ? 'portion-option__right portion-option__right--selected'\n                      : 'portion-option__right'\n                  }\n                ></div>\n              </div>\n            </div>\n          );\n        }\n\n        return (\n          <div\n            key={topping}\n            onClick={props.onClick}\n            className={toppingOptionClasses.join(' ')}\n            data-value={topping}\n          >\n            <div\n              className='topping-option__img-selection'\n              data-value={topping}\n              onClick={onClick}\n            >\n              {checkMark}\n              <img\n                className='topping-option__img'\n                src={props.imageMapping[topping].icon}\n                alt={topping}\n              />\n            </div>\n            <div className='topping-option__details'>\n              <span className='topping-option__name'>{topping}</span>\n              <div\n                className='topping-option__amount-portion'\n                onClick={(e) => e.stopPropagation()}\n              >\n                {amountOptions}\n                {portionOptions}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToppingOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string,\n};\n\nexport default ToppingOptions;\n","import React, { Component } from 'react';\nimport './OptionsButton.scss';\nimport Button, { tertiary } from '../Button/Button';\nimport PropTypes from 'prop-types';\n\n/* Standard single component with one or more button options */\nclass OptionsButton extends Component {\n  state = {};\n\n  handleButtonClick = (option) => {\n    option.onClick();\n  };\n\n  render() {\n    return (\n      <div className='optionsButton'>\n        {this.props.options.map((option) => {\n          let button = null;\n          if (this.props.selectedOption === option.optionName) {\n            button = (\n              <Button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                type={tertiary}\n              >\n                {option.displayName}\n              </Button>\n            );\n          } else {\n            button = (\n              <button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                className='optionsButton__option'\n              >\n                {option.displayName}\n              </button>\n            );\n          }\n          return button;\n        })}\n      </div>\n    );\n  }\n}\n\nOptionsButton.propTypes = {\n  options: PropTypes.array.isRequired,\n};\n\nexport default OptionsButton;\n","import React, { Component } from 'react';\nimport './ToppingsBuilder.scss';\nimport ToppingOptions from '../../BuilderOptions/ToppingOptions/ToppingOptions';\nimport { meatImageMapping } from '../../../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../../../metadata/veggiesMetadata';\nimport { MEATS, VEGGIES } from '../../../../metadata/pizzaProperties';\nimport OptionsButton from '../../../UI/OptionsButton/OptionsButton';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with topping options */\nclass ToppingsBuilder extends Component {\n  state = {\n    stage: this.props.toppingType || MEATS,\n  };\n\n  handleClickVeggies = () => {\n    this.setState({ stage: VEGGIES });\n  };\n\n  handleClickMeats = () => {\n    this.setState({ stage: MEATS });\n  };\n\n  render() {\n    let toppingsBuilder = null;\n    if (this.state.stage === MEATS) {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, MEATS)}\n            onClickAmount={(e) => this.props.onClickAmount(e, MEATS)}\n            onClickPortion={(e) => this.props.onClickPortion(e, MEATS)}\n            imageMapping={meatImageMapping}\n            itemsSelected={this.props.pizza[MEATS]}\n          />\n        </React.Fragment>\n      );\n    } else {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, VEGGIES)}\n            onClickAmount={(e) => this.props.onClickAmount(e, VEGGIES)}\n            onClickPortion={(e) => this.props.onClickPortion(e, VEGGIES)}\n            imageMapping={veggiesImageMapping}\n            itemsSelected={this.props.pizza[VEGGIES]}\n          />\n        </React.Fragment>\n      );\n    }\n\n    const options = [\n      {\n        optionName: MEATS,\n        displayName: 'Meats',\n        onClick: this.handleClickMeats,\n      },\n      {\n        optionName: VEGGIES,\n        displayName: 'Veggies',\n        onClick: this.handleClickVeggies,\n      },\n    ];\n    return (\n      <div className='builder'>\n        <div className='builder__topping-type'>\n          <OptionsButton selectedOption={this.state.stage} options={options} />\n        </div>\n        <div className='builder__topping'></div>\n        {toppingsBuilder}\n      </div>\n    );\n  }\n}\n\nToppingsBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default ToppingsBuilder;\n","import React from 'react';\nimport './PizzaBuilder.scss';\nimport PizzaBuilderPreview from './PizzaBuilderPreview/PizzaBuilderPreview';\nimport PizzaDetails from './PizzaDetails/PizzaDetails';\nimport PizzaBuilderProgress from './PizzaBuilderProgress/PizzaBuilderProgress';\nimport Modal from '../../components/UI/Modal/Modal';\nimport SizeCrustBuilder from '../../components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder';\nimport CheeseSauceBuilder from '../../components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder';\nimport ToppingsBuilder from '../../components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport PropTypes from 'prop-types';\nimport { normalizePizza } from '../../shared/util';\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS,\n} from '../../containers/PizzaBuilderContainer';\n\n/* All controls for building your own pizza */\nconst PizzaBuilder = (props) => {\n  /* Set provided value on given property on current pizza */\n  const handleClickProperty = (event, property) => {\n    props.setProperty(property, event.currentTarget.dataset.value);\n  };\n\n  /* Toggle given topping on current pizza */\n  const handleClickTopping = (event, property) => {\n    props.toggleTopping(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  const handleClickAmount = (event, property) => {\n    props.setToppingAmount(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  const handleClickPortion = (event, property) => {\n    props.setToppingPortion(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  /* Add current pizza to cart and close pizza builder */\n  const handleAddToCart = (quantity) => {\n    props.addToCart(props.cartId, normalizePizza(props.pizza), quantity);\n    props.handleCloseBuilder();\n  };\n\n  /* Save current pizza to cart and close pizza builder */\n  const handleSaveToCart = (quantity) => {\n    props.saveToCart(\n      props.cartId,\n      normalizePizza(props.pizza),\n      quantity,\n      props.cartQuantity,\n      props.itemId\n    );\n    props.handleCloseBuilder();\n  };\n\n  let builder = null;\n  let back = null;\n  let next = null;\n\n  /* helper function that returns button that moves\n       pizza builder to specified stage */\n  const getActionButton = (stage, buttonName) => {\n    return (\n      <div className='builder-action__step'>\n        <Button type={primary} onClick={() => props.handleClickAction(stage)}>\n          {buttonName}\n        </Button>\n      </div>\n    );\n  };\n\n  /* set SizeCrustBuilder for SIZE_CRUST stage\n       and appopriate next button */\n  if (props.stage === SIZE_CRUST) {\n    builder = (\n      <SizeCrustBuilder pizza={props.pizza} onClick={handleClickProperty} />\n    );\n    next = getActionButton(CHEESE_SAUCE, 'Next');\n  } else if (props.stage === CHEESE_SAUCE) {\n    /* set CheeseSauceBuilder for CHEESE_SAUCE stage\n       and appropriate back/next buttons */\n    builder = (\n      <CheeseSauceBuilder pizza={props.pizza} onClick={handleClickProperty} />\n    );\n    back = getActionButton(SIZE_CRUST, 'Back');\n    next = getActionButton(TOPPINGS, 'Next');\n  } else if (props.stage === TOPPINGS) {\n    /* set ToppingsBuilder for TOPPINGS stage\n       and appropriate back button */\n\n    builder = (\n      <ToppingsBuilder\n        pizza={props.pizza}\n        onClick={handleClickTopping}\n        onClickAmount={handleClickAmount}\n        onClickPortion={handleClickPortion}\n      />\n    );\n    back = getActionButton(CHEESE_SAUCE, 'Back');\n  }\n\n  let totalBuilder = null;\n  if (props.showPizzaBuilder) {\n    totalBuilder = (\n      <div className='totalBuilder'>\n        <div className='totalBuilder__mypizza'>\n          <div className='totalBuilder__details'>\n            <PizzaDetails\n              addToCart={handleAddToCart}\n              saveToCart={handleSaveToCart}\n              pizza={props.pizza}\n              quantity={props.quantity}\n              itemId={props.itemId}\n            />\n          </div>\n          <div className='totalBuilder__preview'>\n            <PizzaBuilderPreview pizza={props.pizza} />\n          </div>\n        </div>\n        <div className='totalBuilder__builder'>\n          <h3 className='builder-title'>Pizza Builder</h3>\n          <div className='builder-progress'>\n            <PizzaBuilderProgress\n              stage={props.stage}\n              onClick={props.handleClickStage}\n            />\n          </div>\n          {builder}\n          <div className='builder-action'>\n            {back}\n            {next}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal show={props.showPizzaBuilder} modalClosed={props.handleCloseBuilder}>\n      {totalBuilder}\n    </Modal>\n  );\n};\n\nPizzaBuilder.propTypes = {\n  itemId: PropTypes.string,\n  pizza: PropTypes.object,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  showPizzaBuilder: PropTypes.bool,\n};\n\nexport default PizzaBuilder;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart, saveToCart } from '../store/cart/cartActions/cartActions';\nimport {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n} from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport PropTypes from 'prop-types';\nimport PizzaBuilder from '../components/PizzaBuilder/PizzaBuilder';\n\n/* Stages that are possible for pizza builder.\n   Set in state. */\nexport const SIZE_CRUST = 'SIZE_CRUST';\nexport const CHEESE_SAUCE = 'CHEESE_SAUCE';\nexport const TOPPINGS = 'TOPPINGS';\n\n/* Main container for entire pizza builder */\nclass PizzaBuilderContainer extends Component {\n  state = {\n    stage: SIZE_CRUST,\n  };\n\n  /* Set current stage of pizza builder based on \n    PizzaBuilderProgres component */\n  handleClickStage = (event) => {\n    this.setState({ stage: event.target.value });\n  };\n\n  /* Set current stage of pizza builder based on\n     Back/Next buttons */\n  handleClickAction = (stage) => {\n    this.setState({ stage: stage });\n  };\n\n  /* Reset to first stage and close pizza builder */\n  handleCloseBuilder = () => {\n    this.setState({ stage: SIZE_CRUST });\n    this.props.closePizzaBuilder();\n  };\n\n  render() {\n    return (\n      <PizzaBuilder\n        stage={this.state.stage}\n        handleClickAction={this.handleClickAction}\n        handleClickStage={this.handleClickStage}\n        handleCloseBuilder={this.handleCloseBuilder}\n        {...this.props}\n      />\n    );\n  }\n}\n\nPizzaBuilderContainer.propTypes = {\n  cartId: PropTypes.string,\n  itemId: PropTypes.string,\n  pizza: PropTypes.object,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  cartQuantity: PropTypes.number,\n  showPizzaBuilder: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  cartId: state.cart.cartId,\n  itemId: state.pizzaBuilder.itemId,\n  pizza: state.pizzaBuilder.pizza,\n  quantity: state.pizzaBuilder.quantity,\n  cartQuantity: state.cart.quantity,\n  showPizzaBuilder: state.pizzaBuilder.showPizzaBuilder,\n});\n\nexport default connect(mapStateToProps, {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n  addToCart,\n  saveToCart,\n})(PizzaBuilderContainer);\n","import React from 'react';\nimport './CartItem.scss';\nimport PizzaDescription from '../../components/PizzaDescription/PizzaDescription';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport PizzaPreview from '../../components/PizzaPreview/PizzaPreview';\nimport { SyncLoader } from 'react-spinners';\nimport { isEqual } from 'lodash';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Single cart item with pizza description, price, quantity and edit/remove options */\nconst CartItem = (props) => {\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  /* Open the pizza builder for editing a pizza */\n  const handleEditItem = () => {\n    props.initializePizzaBuilder(props.pizza, props.quantity, props.itemId);\n  };\n\n  /* Change the quantity of an item in redux store */\n  const handleChangeItemQuantity = (event) => {\n    props.changeItemQuantity(\n      props.cartId,\n      props.itemId,\n      props.pizza,\n      parseInt(event.target.value)\n    );\n  };\n\n  /* Remove item from cart */\n  const handleRemoveItem = () => {\n    props.removeItem(props.cartId, props.itemId, props.pizza);\n  };\n\n  let remove = null;\n  if (!props.checkout) {\n    remove = (\n      <span className='link' onClick={handleRemoveItem}>\n        Remove\n      </span>\n    );\n  }\n\n  let overallPrice = (calculatePrice(props.pizza) * props.quantity).toFixed(2);\n\n  let cartItem = null;\n  if (\n    props.loadingCartItem &&\n    isEqual(props.itemIdBeingChanged, props.itemId)\n  ) {\n    cartItem = (\n      <div className='item__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else {\n    cartItem = (\n      <div className='item'>\n        <div className='item__pizza u-margin-right'>\n          <div className='item__preview'>\n            <PizzaPreview small pizza={props.pizza} />\n          </div>\n          <div className='item__description'>\n            <PizzaDescription\n              cart\n              pizza={props.pizza}\n              quantity={props.quantity}\n            />\n          </div>\n        </div>\n        <div className='item__details'>\n          <div className='item__price'>${overallPrice}</div>\n          <div className='item__quantity'>\n            <Dropdown\n              onChange={handleChangeItemQuantity}\n              options={quantityOptions}\n              value={props.quantity}\n            />\n          </div>\n          <div className='item__actions'>\n            <span className='item__edit link' onClick={handleEditItem}>\n              Edit\n            </span>\n            {remove}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return cartItem;\n};\n\nCartItem.propTypes = {\n  cartId: PropTypes.string,\n  itemIdBeingChanged: PropTypes.string,\n  loadingCartItem: PropTypes.bool,\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  checkout: PropTypes.bool,\n};\n\nexport default CartItem;\n","import React from 'react';\nimport CartItem from '../../components/CartItem/CartItem';\nimport PropTypes from 'prop-types';\n\n/* All cart items to display in cart and order summary pages */\nconst CartItems = (props) => {\n  return props.items.map((item) => {\n    return (\n      <CartItem\n        key={item._id}\n        itemId={item._id}\n        pizza={item.pizza}\n        quantity={item.quantity}\n        changeItemQuantity={props.changeItemQuantity}\n        removeItem={props.removeItem}\n        initializePizzaBuilder={props.initializePizzaBuilder}\n        checkout={props.checkout}\n        loadingCartItem={props.loadingCartItem}\n        itemIdBeingChanged={props.itemIdBeingChanged}\n        cartId={props.cartId}\n      />\n    );\n  });\n};\n\nCartItems.propTypes = {\n  cartId: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n};\n\nexport default CartItems;\n","import React from 'react';\nimport CartItems from '../../components/CartItems/CartItems';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { SyncLoader } from 'react-spinners';\nimport { calculateSubTotal } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shopping cart with all added cart items */\nconst Cart = (props) => {\n  const subTotal = calculateSubTotal(props.items);\n\n  let cart = null;\n  if (props.loadingCart) {\n    cart = (\n      <div className='item-list__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else if (props.items.length > 0) {\n    cart = (\n      <React.Fragment>\n        <CartItems\n          initializePizzaBuilder={props.initializePizzaBuilder}\n          removeItem={props.removeItem}\n          changeItemQuantity={props.changeItemQuantity}\n          items={props.items}\n          loadingCartItem={props.loadingCartItem}\n          itemIdBeingChanged={props.itemIdBeingChanged}\n          cartId={props.cartId}\n        />\n        <div className='item-list__bottom'>\n          <div className='totals'>\n            <div className='totals__line-items'>\n              <div className='totals__line-item'>\n                <h3>Subtotal:</h3> <h3>${subTotal}</h3>\n              </div>\n            </div>\n\n            <Link\n              to={{\n                pathname: props.userId ? '/checkout/order-type' : '/signin',\n                fromCheckout: true,\n              }}\n            >\n              <Button type={primary}>Checkout</Button>\n            </Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    const emptyCartMessage = <h2>Your cart is empty!</h2>;\n    const errorMessage = <h2>Unable to retrieve your cart!</h2>;\n\n    let message = null;\n    if (props.signInError || props.signUpError) {\n      message = errorMessage;\n    } else {\n      message = emptyCartMessage;\n    }\n    cart = <div className='item-list__empty'>{message}</div>;\n  }\n\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <h1 className='item-list__title'>Shopping Cart</h1>\n        {cart}\n      </div>\n    </div>\n  );\n};\n\nCart.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool.isRequired,\n  loadingCartItem: PropTypes.bool.isRequired,\n  itemIdBeingChanged: PropTypes.string,\n  userId: PropTypes.string,\n  cartId: PropTypes.string,\n  signInError: PropTypes.string,\n  signUpError: PropTypes.string,\n};\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport {\n  changeItemQuantity,\n  removeItem,\n} from '../store/cart/cartActions/cartActions';\nimport PropTypes from 'prop-types';\nimport Cart from '../components/Cart/Cart';\n\n/* Shopping cart container with all added cart items */\nclass CartContainer extends Component {\n  render() {\n    return <Cart {...this.props} />;\n  }\n}\n\nCartContainer.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool.isRequired,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  userId: PropTypes.string,\n  cartId: PropTypes.string,\n  signInError: PropTypes.string,\n  signUpError: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  loadingCart: state.cart.loadingCart,\n  loadingCartItem: state.cart.loadingCartItem,\n  itemIdBeingChanged: state.cart.itemIdBeingChanged,\n  userId: state.auth.userId,\n  cartId: state.cart.cartId,\n  signInError: state.auth.signInError,\n  signUpError: state.auth.signUpError,\n});\n\nexport default connect(mapStateToProps, {\n  initializePizzaBuilder,\n  changeItemQuantity,\n  removeItem,\n})(CartContainer);\n","import React from 'react';\nimport './Input.scss';\nimport Dropdown from '../Dropdown/Dropdown';\nimport PropTypes from 'prop-types';\n\n/* Standard input element to be included in forms */\nconst Input = (props) => {\n  let inputElement = null;\n  const inputClasses = ['input__element'];\n  let validationError = null;\n  if (\n    props.invalid &&\n    props.shouldValidate &&\n    props.touched &&\n    props.formSubmitted\n  ) {\n    inputClasses.push('input__invalid');\n    validationError = (\n      <p className='input__error-message'>{props.errorMessage}</p>\n    );\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <Dropdown\n          size={props.elementConfig.size}\n          options={props.elementConfig.options}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n  }\n  return (\n    <div className='input'>\n      <label>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  invalid: PropTypes.bool.isRequired,\n  shouldValidate: PropTypes.object.isRequired,\n  touched: PropTypes.bool,\n  formSubmitted: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  elementConfig: PropTypes.object.isRequired,\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  elementType: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","/* Form validation helper functions */\n\nconst formatPhoneNumber = (digits) => {\n  const cleaned = digits.replace(/\\D/g, '');\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    return `( ${match[1]} ) ${match[2]} - ${match[3]}`;\n  }\n  return digits;\n};\n\nexport const handleInputChange = (form, event, inputId) => {\n  const updatedForm = {\n    ...form,\n  };\n\n  const updatedFormElement = {\n    ...updatedForm[inputId],\n  };\n\n  let trimmedValue = event.target.value.trim();\n\n  if (updatedFormElement.elementType === 'phonenumber') {\n    updatedFormElement.value = formatPhoneNumber(trimmedValue);\n  } else {\n    updatedFormElement.value = trimmedValue;\n  }\n  updatedFormElement.valid = checkValidity(\n    updatedFormElement.value,\n    updatedFormElement.validation\n  );\n  updatedFormElement.touched = true;\n  updatedForm[inputId] = updatedFormElement;\n\n  let formIsValid = true;\n  for (let inputId in updatedForm) {\n    formIsValid = updatedForm[inputId].valid && formIsValid;\n  }\n  return { form: updatedForm, formIsValid: formIsValid };\n};\n\nconst checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d*$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isPhoneNumber) {\n    const pattern = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","import React from 'react';\nimport Button, { primary } from '../Button/Button';\nimport Input from '../Input/Input';\nimport { handleInputChange } from '../../../shared/formValidation.js';\nimport PropTypes from 'prop-types';\n\n/* Standard form component across entire app */\nconst Form = (props) => {\n  const handleChange = (event, inputId) => {\n    const updatedFormData = handleInputChange(props.form, event, inputId);\n    props.updateForm({\n      form: updatedFormData.form,\n      formIsValid: updatedFormData.formIsValid,\n    });\n  };\n\n  const formElementsArray = [];\n  for (let key in props.form) {\n    formElementsArray.push({\n      id: key,\n      config: props.form[key],\n    });\n  }\n\n  let form = null;\n  form = (\n    <React.Fragment>\n      {formElementsArray.map((formElement) => {\n        return (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            shouldValidate={formElement.config.validation}\n            invalid={!formElement.config.valid}\n            touched={formElement.config.touched}\n            formSubmitted={props.formSubmitted}\n            errorMessage={formElement.config.errorMessage}\n            onChange={(e) => handleChange(e, formElement.id)}\n          />\n        );\n      })}\n      <div className='form-component__submit'>\n        <Button\n          type={primary}\n          disabled={props.formSubmitted && !props.formIsValid}\n        >\n          Submit\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <form className='form-component__form' onSubmit={props.onSubmit}>\n      {form}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  form: PropTypes.object.isRequired,\n  formSubmitted: PropTypes.bool.isRequired,\n  formIsValid: PropTypes.bool.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport './SignIn.scss';\nimport Button, { secondary } from '../../components/UI/Button/Button';\nimport { SyncLoader } from 'react-spinners';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Sign in form */\nconst SignIn = (props) => {\n  let form = (\n    <Form\n      {...props}\n      onSubmit={props.handleSubmit}\n      updateForm={props.updateForm}\n    />\n  );\n  if (props.loadingUser) {\n    form = (\n      <div className='spinner'>\n        <SyncLoader />\n      </div>\n    );\n  }\n\n  let errorMessage = null;\n  if (props.error) {\n    if (props.error.status === 500) {\n      errorMessage = 'Internal server error.';\n    } else {\n      errorMessage = props.error.data.message;\n    }\n  }\n\n  let redirect = null;\n  if (props.isAuthenticated) {\n    if (props.location.fromCheckout) {\n      redirect = <Redirect to='/checkout/order-type' />;\n    } else {\n      redirect = <Redirect to='/' />;\n    }\n  }\n\n  return (\n    <div className='form-container'>\n      <div className='form-component'>\n        <h3 className='form-component__title'>\n          Please sign in to your account\n        </h3>\n        {redirect}\n        <div className='form-component__error'>{errorMessage}</div>\n        {form}\n        <div className='signup'>\n          <Link\n            to={{\n              pathname: '/signup',\n              fromCheckout: props.location.fromCheckout,\n            }}\n          >\n            <Button type={secondary}>Sign Up</Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default SignIn;\n","import React, { Component } from 'react';\nimport { signIn, authReset } from '../../store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SignIn from '../../components/SignIn/SignIn';\n\n/* Sign in form container */\nclass SignInContainer extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signIn(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  componentWillUnmount() {\n    if (this.props.error) {\n      this.props.authReset();\n    }\n  }\n\n  render() {\n    return (\n      <SignIn\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nSignInContainer.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingUser: state.auth.loadingUser,\n  error: state.auth.signInError,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { signIn, authReset })(SignInContainer);\n","import React from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport PropTypes from 'prop-types';\n\n/* User sign up form */\nconst SignUp = (props) => {\n  let form = (\n    <Form\n      {...props}\n      onSubmit={props.handleSubmit}\n      updateForm={props.updateForm}\n    />\n  );\n  if (props.loadingUser) {\n    form = (\n      <div className='spinner'>\n        <SyncLoader />\n      </div>\n    );\n  }\n\n  let errorMessage = null;\n  if (props.error) {\n    if (props.error.status === 500) {\n      errorMessage = 'Internal server error.';\n    } else if (props.error.data.message === 'Duplicate field value entered') {\n      errorMessage = 'The email you entered is already taken.';\n    } else {\n      errorMessage = props.error.data.message;\n    }\n  }\n\n  let redirect = null;\n  if (props.isAuthenticated) {\n    if (props.location.fromCheckout) {\n      redirect = (\n        <Redirect\n          to={{ pathname: '/checkout/order-type', fromSignUp: 'true' }}\n        />\n      );\n    } else {\n      redirect = <Redirect to={{ pathname: '/', fromSignUp: 'true' }} />;\n    }\n  }\n\n  return (\n    <div className='form-container'>\n      <div className='form-component'>\n        <h3 className='form-component__title'>Sign up for an account</h3>\n        {redirect}\n        <div className='form-component__error'>{errorMessage}</div>\n        {form}\n      </div>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport { signUp, authReset } from '../../store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SignUp from '../../components/SignUp/SignUp';\n\n/* User sign up form */\nclass SignUpContainer extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signUp(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  componentWillUnmount() {\n    this.props.authReset();\n  }\n\n  render() {\n    return (\n      <SignUp\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nSignUpContainer.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.object,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingUser: state.auth.loadingUser,\n  error: state.auth.signUpError,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { signUp, authReset })(SignUpContainer);\n","import React, { Component } from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { withRouter } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport PropTypes from 'prop-types';\n\n/* Delivery address form */\nclass AddressForm extends Component {\n  constructor(props) {\n    super(props);\n    this.props.validateDeliveryAddressReset();\n  }\n\n  componentDidUpdate() {\n    if (this.props.addressValid) {\n      this.props.history.push('/checkout');\n    }\n  }\n\n  render() {\n    let errorMessage = null;\n    let form = null;\n    if (this.props.loading) {\n      form = (\n        <div className='spinner'>\n          <SyncLoader />\n        </div>\n      );\n    } else {\n      form = (\n        <Form\n          {...this.props}\n          onSubmit={this.props.handleSubmit}\n          updateForm={this.props.updateForm}\n        />\n      );\n    }\n\n    if (this.props.error) {\n      errorMessage = (\n        <div className='form-component__error'>\n          <p>{this.props.error}</p>\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <h4 className='form-component__title'>\n          Please enter your delivery address\n        </h4>\n        {errorMessage}\n        {form}\n      </React.Fragment>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.string,\n  addressValid: PropTypes.bool,\n};\n\nexport default withRouter(AddressForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddressForm from '../components/AddressForm/AddressForm';\nimport {\n  validateDeliveryAddress,\n  validateDeliveryAddressReset,\n} from '../store/checkout/checkoutActions/checkoutActions.js';\nimport withErrorHandler from '../hoc/withErrorHandler';\nimport axios from 'axios';\n\nclass AddressFormContainer extends Component {\n  state = {\n    form: {\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Street Address',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      unit: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Apt/Unit #',\n        },\n        validation: {\n          isNumeric: true,\n        },\n        errorMessage: 'Please enter only the Apt/Unit number',\n        value: '',\n        valid: true,\n      },\n      city: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'City',\n        },\n        value: '',\n        validation: {\n          hasLength: 2,\n          required: true,\n        },\n        valid: false,\n      },\n      state: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'State',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      zipcode: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'ZIP Code',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.validateDeliveryAddress(this.state.form);\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  render() {\n    return (\n      <AddressForm\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nAddressFormContainer.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.string,\n  addressValid: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  addressValid: state.checkout.addressValid,\n  error: state.checkout.addressValidationError,\n  loading: state.checkout.validatingAddress,\n});\n\nexport default connect(mapStateToProps, {\n  validateDeliveryAddress,\n  validateDeliveryAddressReset,\n})(withErrorHandler(AddressFormContainer, axios));\n","import React, { Component } from 'react';\nimport './OrderType.scss';\nimport { MdDirectionsCar, MdStore } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport AddressFormContainer from '../../containers/AddressFormContainer';\nimport Message from '../../components/UI/Message/Message';\nimport PropTypes from 'prop-types';\nimport { clearDeliveryAddress } from '../../store/checkout/checkoutActions/checkoutActions';\n\n/* Options for choosing either carryout or delivery order */\nclass OrderType extends Component {\n  state = {\n    isDelivery: false,\n  };\n\n  handleClick = (event) => {\n    if (event.currentTarget.dataset.type === 'Delivery') {\n      this.setState({ isDelivery: true });\n    } else {\n      this.props.clearDeliveryAddress();\n      this.props.history.push('/checkout');\n    }\n  };\n\n  render() {\n    let message = null;\n    if (this.props.location.fromSignUp) {\n      message = <Message>You have successfully created an account!</Message>;\n    }\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/signin',\n            fromCheckout: true,\n          }}\n        />\n      );\n    }\n\n    let form = null;\n\n    if (this.state.isDelivery) {\n      form = <AddressFormContainer />;\n    }\n\n    let orderTypeClassNames = ['order-type'];\n    let deliveryClassNames = ['order-type__type'];\n    let iconClassNames = ['order-type__icon'];\n    if (this.state.isDelivery) {\n      orderTypeClassNames.push('order-type--extended');\n      deliveryClassNames.push('order-type__type--selected');\n      iconClassNames.push('order-type__icon--selected');\n    }\n\n    return (\n      <React.Fragment>\n        {message}\n        <div className='form-container'>\n          <div className='form-component'>\n            <h4 className='form-component__title'>\n              Please choose an order method\n            </h4>\n            <div className={orderTypeClassNames.join(' ')}>\n              <div\n                onClick={this.handleClick}\n                data-type='Delivery'\n                className={deliveryClassNames.join(' ')}\n              >\n                <div className={iconClassNames.join(' ')}>\n                  <MdDirectionsCar />\n                </div>\n                <span className='order-type__description'>Delivery</span>\n              </div>\n              <div\n                onClick={this.handleClick}\n                data-type='Carryout'\n                className='order-type__type'\n              >\n                <div className='order-type__icon'>\n                  <MdStore />\n                </div>\n                <span className='order-type__description'>Carryout</span>\n              </div>\n            </div>\n            {form}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nOrderType.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { clearDeliveryAddress })(OrderType);\n","import React from 'react';\nimport './DeliveryAddress.scss';\nimport PropTypes from 'prop-types';\n\n/* Displays delivery address in the correct format */\nconst DeliveryAddress = (props) => {\n  let secondaryAddress = null;\n  if (props.deliveryAddress.secondaryAddress) {\n    secondaryAddress = (\n      <h4> Apt/Unit #{props.deliveryAddress.secondaryAddress}</h4>\n    );\n  }\n  return (\n    <div className='address-container'>\n      <h2>Delivery Address:</h2>\n      <div className='address'>\n        <h4>{props.deliveryAddress.streetAddress}</h4>\n        {secondaryAddress}\n        <h4>\n          {props.deliveryAddress.city}, {props.deliveryAddress.state}{' '}\n          {props.deliveryAddress.zipcode}\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nDeliveryAddress.propTypes = {\n  deliveryAddress: PropTypes.objectOf(PropTypes.string),\n};\n\nexport default DeliveryAddress;\n","import React, { Component } from 'react';\nimport './Checkout.scss';\nimport CartItems from '../../components/CartItems/CartItems';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { calculateSubTotal, calculateTax } from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport DeliveryAddress from '../../components/DeliveryAddress/DeliveryAddress';\nimport PropTypes from 'prop-types';\n\n/* Order summary and ability to submit an order */\nclass Checkout extends Component {\n  handleSubmitOrder = (total) => {\n    this.props.submitOrder(\n      total,\n      this.props.items,\n      this.props.deliveryAddress,\n      this.props.cartId\n    );\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.submittingOrder &&\n      !this.props.submittingOrder &&\n      !this.props.submitOrderError\n    ) {\n      this.props.history.push({ pathname: '/', fromCheckout: true });\n      this.props.emptyCart(this.props.cartId);\n    }\n  }\n\n  render() {\n    const subTotal = calculateSubTotal(this.props.items);\n    const tax = calculateTax(subTotal);\n    const total = (+subTotal + +tax).toFixed(2);\n    let deliveryAddress = null;\n    if (this.props.deliveryAddress) {\n      deliveryAddress = (\n        <DeliveryAddress deliveryAddress={this.props.deliveryAddress} />\n      );\n    }\n\n    let submitOrder = null;\n    if (this.props.submittingOrder) {\n      submitOrder = (\n        <Button type={primary}>\n          <SyncLoader color='white' size='10px' />\n        </Button>\n      );\n    } else {\n      submitOrder = (\n        <Button onClick={() => this.handleSubmitOrder(total)} type={primary}>\n          Place Order\n        </Button>\n      );\n    }\n\n    let cart = null;\n    if (this.props.loadingCart) {\n      cart = (\n        <div className='item-list__empty'>\n          <SyncLoader />\n        </div>\n      );\n    } else if (Object.keys(this.props.items).length > 0) {\n      cart = (\n        <React.Fragment>\n          <CartItems\n            initializePizzaBuilder={this.props.initializePizzaBuilder}\n            removeItem={this.props.removeItem}\n            changeItemQuantity={this.props.changeItemQuantity}\n            checkout\n            items={this.props.items}\n            loadingCartItem={this.props.loadingCartItem}\n            itemIdBeingChanged={this.props.itemIdBeingChanged}\n            cartId={this.props.cartId}\n          />\n          <div className='item-list__bottom'>\n            <div className='delivery-address'>{deliveryAddress}</div>\n            <div className='totals'>\n              <div className='totals__line-items'>\n                <div className='totals__line-item'>\n                  <h4>Subtotal:</h4> <h4>${subTotal}</h4>\n                </div>\n                <div className='totals__line-item'>\n                  <h4>Tax:</h4> <h4>${tax}</h4>\n                </div>\n                <div className='totals__line-item'>\n                  <h2>Total:</h2> <h2>${total}</h2>\n                </div>\n              </div>\n\n              {submitOrder}\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      cart = (\n        <div className='item-list__empty'>\n          <h2>Your cart is empty!</h2>\n        </div>\n      );\n    }\n\n    return (\n      <div className='item-list-container'>\n        <div className='item-list'>\n          <h1 className='item-list__title'>Checkout</h1>\n          {cart}\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  submitOrderError: PropTypes.bool,\n  submittingOrder: PropTypes.bool,\n  deliveryAddress: PropTypes.object,\n};\n\nexport default Checkout;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { submitOrder } from '../store/checkout/checkoutActions/checkoutActions';\nimport {\n  emptyCart,\n  changeItemQuantity,\n  removeItem,\n} from '../store/cart/cartActions/cartActions';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport PropTypes from 'prop-types';\nimport Checkout from '../components/Checkout/Checkout';\n\n/* Container for order summary and ability to submit an order */\nconst CheckoutContainer = (props) => {\n  return <Checkout {...props} />;\n};\n\nCheckoutContainer.propTypes = {\n  items: PropTypes.array.isRequired,\n  cartId: PropTypes.string,\n  loadingCart: PropTypes.bool,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  submitOrderError: PropTypes.bool,\n  submittingOrder: PropTypes.bool,\n  deliveryAddress: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  cartId: state.cart.cartId,\n  loadingCart: state.cart.loadingCart,\n  loadingCartItem: state.cart.loadingCartItem,\n  itemIdBeingChanged: state.cart.itemIdBeingChanged,\n  submittingOrder: state.checkout.submittingOrder,\n  deliveryAddress: state.checkout.deliveryAddress,\n  submitOrderError: state.checkout.submitOrderError,\n});\n\nexport default connect(mapStateToProps, {\n  submitOrder,\n  emptyCart,\n  removeItem,\n  initializePizzaBuilder,\n  changeItemQuantity,\n})(CheckoutContainer);\n","import React from 'react';\nimport './Sidebar.scss';\nimport PizzaMenuItems from '../../components/PizzaMenuItems/PizzaMenuItems';\nimport AccountMenuItems from '../../components/AccountMenuItems/AccountMenuItems';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport PropTypes from 'prop-types';\n\n/* Sidebar menu with pizza menu items and account menu items */\nconst Sidebar = (props) => {\n  const handleClickMenuItem = () => {\n    props.closeSidebar();\n  };\n\n  let sidebarContainerClassNames = ['sidebar-container'];\n  let sidebarClassNames = ['sidebar'];\n  if (!props.sidebarOpen) {\n    sidebarClassNames.push('sidebar--closed');\n    sidebarContainerClassNames.push('sidebar-container--closed');\n  }\n\n  return (\n    <div\n      onClick={handleClickMenuItem}\n      className={sidebarContainerClassNames.join(' ')}\n    >\n      <div className={sidebarClassNames.join(' ')}>\n        <div className='sidebar__menu-items'>\n          <PizzaMenuItems vertical />\n        </div>\n        <div className='sidebar__account'>\n          <NavigationItem vertical to='/cart'>\n            Cart\n          </NavigationItem>\n          <AccountMenuItems vertical isAuthenticated={props.isAuthenticated} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeSidebar } from '../store/ui/uiActions/uiActions';\nimport PropTypes from 'prop-types';\nimport Sidebar from '../components/Sidebar/Sidebar';\n\n/* Container for sidebar menu with pizza menu items and account menu items */\nconst SidebarContainer = (props) => {\n  return <Sidebar {...props} />;\n};\n\nSidebarContainer.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  sidebarOpen: state.ui.sidebarOpen,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { closeSidebar })(SidebarContainer);\n","import React from 'react';\nimport PizzaPreview from '../PizzaPreview/PizzaPreview';\nimport PizzaDescription from '../PizzaDescription/PizzaDescription';\nimport PropTypes from 'prop-types';\n\n/* Represents a single submitted order */\nconst Order = (props) => {\n  return (\n    <div className='item item--order'>\n      <div className='item__pizza'>\n        <div className='item__preview'>\n          <PizzaPreview small pizza={props.pizza} />\n        </div>\n        <div className='item__description'>\n          <PizzaDescription\n            order\n            quantity={props.quantity}\n            pizza={props.pizza}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOrder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n};\n\nexport default Order;\n","import React from 'react';\nimport './Orders.scss';\nimport Order from '../../components/Order/Order';\nimport { getReadableDate } from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport DeliveryAddress from '../../components/DeliveryAddress/DeliveryAddress';\nimport PropTypes from 'prop-types';\n\n/* List of all submitted orders */\nconst Orders = (props) => {\n  let orders = null;\n  if (\n    !props.userId ||\n    props.loadingOrders ||\n    props.getOrdersError ||\n    Object.entries(props.orders).length === 0\n  ) {\n    let ordersContent = null;\n    if (props.loadingOrders) {\n      ordersContent = <SyncLoader />;\n    } else if (!props.userId) {\n      ordersContent = <h2>Sign in to see your orders!</h2>;\n    } else if (props.getOrdersError) {\n      ordersContent = <h2>Unable to retrieve your orders!</h2>;\n    } else {\n      ordersContent = <h2>You have no orders yet!</h2>;\n    }\n\n    orders = (\n      <div className='item-list-container'>\n        <div className='item-list'>\n          <div className='item-list__title'>\n            <h1>Orders</h1>\n          </div>\n          <div className='item-list__empty'>{ordersContent}</div>\n        </div>\n      </div>\n    );\n  } else {\n    orders = (\n      <React.Fragment>\n        {props.orders.reverse().map((order) => {\n          let orderType = null;\n\n          if (order.deliveryAddress) {\n            orderType = (\n              <DeliveryAddress deliveryAddress={order.deliveryAddress} />\n            );\n          } else {\n            orderType = <h2>Carryout Order</h2>;\n          }\n          return (\n            <div key={order._id} className='item-list-container'>\n              <div className='item-list item-list--order'>\n                <div className='item-list__title'>\n                  <span className='order__date-address'>\n                    <span className='order__date'>\n                      <h2>Order placed on:&nbsp;</h2>\n                      <h3> {getReadableDate(order.orderDate)}</h3>\n                    </span>\n                    {orderType}\n                  </span>\n\n                  <span className='order__total'>\n                    <h2>Total:&nbsp;</h2>\n                    <h3>${order.total}</h3>\n                  </span>\n                </div>\n\n                {Object.entries(order.items).map(([itemId, item]) => {\n                  return (\n                    <Order\n                      key={itemId}\n                      quantity={item.quantity}\n                      pizza={item.pizza}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  return orders;\n};\n\nOrders.propTypes = {\n  userId: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n  loadingOrders: PropTypes.bool.isRequired,\n  getOrdersError: PropTypes.bool,\n};\n\nexport default Orders;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Orders from '../components/Orders/Orders';\n\n/* Container for showing a list of all submitted orders */\nconst OrdersContainer = (props) => {\n  return <Orders {...props} />;\n};\n\nOrdersContainer.propTypes = {\n  userId: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n  loadingOrders: PropTypes.bool.isRequired,\n  getOrdersError: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userId,\n  orders: state.checkout.orders,\n  loadingOrders: state.checkout.loadingOrders,\n  getOrdersError: state.checkout.getOrdersError,\n});\n\nexport default connect(mapStateToProps, null)(OrdersContainer);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Layout from './components/Layout/Layout/Layout';\nimport Home from './components/PizzaCategories/Home/Home';\nimport Meats from './components/PizzaCategories/Meats/Meats';\nimport Veggies from './components/PizzaCategories/Veggies/Veggies';\nimport Chicken from './components/PizzaCategories/Chicken/Chicken';\nimport PizzaBuilderContainer from './containers/PizzaBuilderContainer';\nimport { Route, Switch } from 'react-router-dom';\nimport CartContainer from './containers/CartContainer';\nimport SignInContainer from './containers/Auth/SignInContainer';\nimport SignUpContainer from './containers/Auth/SignUpContainer';\nimport { authenticateToken } from './store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport OrderType from './components/OrderType/OrderType';\nimport CheckoutContainer from './containers/CheckoutContainer';\nimport SidebarContainer from './containers/SidebarContainer';\nimport OrdersContainer from './containers/OrdersContainer';\n\nexport class App extends Component {\n  componentDidMount() {\n    this.props.authenticateToken();\n  }\n\n  render() {\n    return (\n      <Layout data-test='layout'>\n        <PizzaBuilderContainer data-test='pizzaBuilder' />\n        <SidebarContainer data-test='sidebar' />\n        <Switch>\n          <Route exact path='/checkout' component={CheckoutContainer} />\n          <Route path='/checkout/order-type' component={OrderType} />\n          <Route path='/signin' component={SignInContainer} />\n          <Route path='/signup' component={SignUpContainer} />\n          <Route path='/my-orders' component={OrdersContainer} />\n          <Route path='/cart' component={CartContainer} />\n          <Route path='/' exact component={Home} />\n          <Route path='/meats' exact component={Meats} />\n          <Route path='/veggies' exact component={Veggies} />\n          <Route path='/chicken' exact component={Chicken} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null, { authenticateToken })(App);\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/* Scroll to top of page when it is loaded */\nconst ScrollToTop = ({ history, children }) => {\n  useEffect(() => {\n    history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n  }, [history]);\n  return children;\n};\n\nexport default withRouter(ScrollToTop);\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { Router } from 'react-router-dom';\nimport ScrollToTop from './hoc/ScrollToTop';\n\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory({\n  basename: `${process.env.REACT_APP_BASE_URL}`,\n});\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}