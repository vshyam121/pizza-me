{"version":3,"sources":["assets/images/pizza_supreme.png","assets/images/topping_GreenBellPepper_ML_reg.png","assets/images/pizza_meat_lovers.png","assets/images/alarm-clock.png","assets/images/crust_ht_NoFinish.png","assets/images/icon_crust_ht.png","assets/images/crust_thin_NoFinish.png","assets/images/icon_crust_thin.png","assets/images/crust_pan_NoFinish.png","assets/images/icon_crust_pan.png","assets/images/topping_Pepperoni_ML_reg.png","assets/images/topping_Pepperoni_ML_extra.png","assets/images/icon_topping_Pepperoni.png","assets/images/topping_ItalianSausage_ML_reg.png","assets/images/topping_ItalianSausage_ML_extra.png","assets/images/icon_topping_ItalianSausage.png","assets/images/topping_Ham_ML_reg.png","assets/images/topping_Ham_ML_extra.png","assets/images/icon_topping_Ham.png","assets/images/topping_Bacon_ML_reg.png","assets/images/topping_Bacon_ML_extra.png","assets/images/icon_topping_Bacon.png","assets/images/topping_Chicken_ML_reg.png","assets/images/topping_Chicken_ML_extra.png","assets/images/icon_topping_Chicken.png","assets/images/topping_Beef_ML_reg.png","assets/images/topping_Beef_ML_extra.png","assets/images/icon_topping_Beef.png","assets/images/topping_Pork_ML_reg.png","assets/images/topping_Pork_ML_extra.png","assets/images/icon_topping_Pork.png","assets/images/topping_Mushroom_ML_reg.png","assets/images/topping_Mushroom_ML_extra.png","assets/images/icon_topping_Mushroom.png","assets/images/topping_Spinach_Fresh_ML_reg.png","assets/images/topping_Spinach_Fresh_ML_extra.png","assets/images/icon_topping_Spinach_fresh.png","assets/images/topping_Onion_red_ML_reg.png","assets/images/topping_Onion_red_ML_extra.png","assets/images/icon_topping_Onion_Red.png","assets/images/topping_Olives_black_ML_reg.png","assets/images/topping_Olives_black_ML_extra.png","assets/images/icon_topping_Olive_black.png","assets/images/icon_topping_GreenBellPepper.png","assets/images/topping_BananaPepper_ML_reg.png","assets/images/topping_BananaPepper_ML_extra.png","assets/images/icon_topping_BananaPepper.png","assets/images/topping_Pineapple_ML_reg.png","assets/images/topping_Pineapple_ML_extra.png","assets/images/icon_topping_Pineapple.png","assets/images/topping_Jalepeno_ML_reg.png","assets/images/topping_Jalepeno_ML_extra.png","assets/images/icon_topping_Jalapeno.png","assets/images/topping_Tomato_ML_reg.png","assets/images/topping_Tomato_ML_extra.png","assets/images/icon_topping_Tomato.png","assets/images/icon_sauce_Marinara.png","assets/images/icon_sauce_CreamyGarlicParm.png","assets/images/icon_sauce_BBQ.png","assets/images/icon_sauce_Buffalo.png","assets/images/crust_ht_GarlicButteryBlend.png","assets/images/crust_thin_GarlicButteryBlend.png","assets/images/crust_pan_GarlicButteryBlend.png","assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png","assets/images/crust_ht_ToastedParmesan.png","assets/images/crust_thin_ToastedParmesan.png","assets/images/crust_pan_ToastedParmesan.png","assets/images/icon_finisher_ToastedParm_whole_2017.png","assets/images/icon_finisher_none_whole_2017.png","assets/images/pizza_pepperoni.jpg","assets/images/pizza_Pepperoni_Lovers.png","assets/images/pizza_Veggie_Lovers.png","assets/images/pizza_Ultimate_Cheese_Lovers.png","assets/images/pizza_Hawaiian_Chicken.png","assets/images/pizza_Chicken_Bacon_Parmesan.png","assets/images/pizza_Backyard_BBQ_Chicken.png","assets/images/pizza_Buffalo_Chicken.png","assets/images/cheese_mozz_ML.png","assets/images/pizza_cheese.jpg","store/ui/uiActions/uiActions.js","store/ui/uiActionTypes.js","components/UI/NavigationItem/NavigationItem.js","components/PizzaMenuItems/PizzaMenuItems.js","components/AccountMenuItems/AccountMenuItems.js","components/UI/Button/Button.js","components/UI/DropdownAlert/DropdownAlert.js","components/CartIcon/CartIcon.js","components/Header/Header.js","containers/HeaderContainer.js","components/Layout/Footer/Footer.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler.js","shared/actionErrors.js","shared/axiosAPI.js","components/Layout/Layout/Layout.js","metadata/crustMetadata.js","metadata/sizeMetadata.js","metadata/meatMetadata.js","metadata/veggiesMetadata.js","metadata/pizzaProperties.js","metadata/cheeseMetadata.js","metadata/sauceMetadata.js","metadata/crustFlavorMetadata.js","metadata/comboMetadata.js","store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions.js","store/pizzaBuilder/pizzaBuilderActionTypes.js","shared/secureStorage.js","metadata/priceMappings.js","store/pizzaBuilder/pizzaBuilderReducer/pizzaBuilderReducer.js","store/cart/cartReducer/cartReducer.js","store/cart/cartActionTypes.js","store/checkout/checkoutReducer/checkoutReducer.js","store/checkout/checkoutActionTypes.js","store/auth/authReducer/authReducer.js","store/auth/authActionTypes.js","store/ui/uiReducer/uiReducer.js","store/rootReducer.js","store/store.js","shared/util.js","store/cart/cartActions/cartActions.js","components/UI/Dropdown/Dropdown.js","components/PizzaBox/PizzaBox.js","containers/PizzaBoxContainer.js","components/Messages/OrderSubmissionMessage/OrderSubmissionMessage.js","components/Messages/SignedOutMessage/SignedOutMessage.js","components/Messages/SignedUpMessage/SignedUpMessage.js","components/UI/Message/Message.js","components/PizzaCategories/Home/Home.js","components/PizzaCategories/Meats/Meats.js","components/PizzaCategories/Veggies/Veggies.js","components/PizzaCategories/Chicken/Chicken.js","components/PizzaPreview/PizzaPreview.js","components/PizzaBuilder/PizzaBuilderPreview/PizzaBuilderPreview.js","components/PizzaDescription/PizzaDescription.js","components/PizzaBuilder/PizzaDetails/PizzaDetails.js","components/PizzaBuilder/PizzaBuilderProgress/PizzaBuilderProgress.js","components/PizzaBuilder/BuilderOptions/ImageOptions/ImageOptions.js","components/PizzaBuilder/BuilderOptions/ButtonOptions/ButtonOptions.js","components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder.js","components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder.js","components/PizzaBuilder/BuilderOptions/ToppingOptions/ToppingOptions.js","components/UI/OptionsButton/OptionsButton.js","components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder.js","components/PizzaBuilder/PizzaBuilder.js","containers/PizzaBuilderContainer.js","components/CartItem/CartItem.js","components/CartItems/CartItems.js","components/Cart/Cart.js","containers/CartContainer.js","store/checkout/checkoutActions/checkoutActions.js","store/auth/authActions/authActions.js","components/UI/Input/Input.js","shared/formValidation.js","components/UI/Form/Form.js","components/SignIn/SignIn.js","containers/Auth/SignInContainer.js","containers/Auth/SignOutContainer.js","components/SignUp/SignUp.js","containers/Auth/SignUpContainer.js","components/AddressForm/AddressForm.js","containers/AddressFormContainer.js","components/OrderType/OrderType.js","components/DeliveryAddress/DeliveryAddress.js","components/Checkout/Checkout.js","containers/CheckoutContainer.js","components/Sidebar/Sidebar.js","containers/SidebarContainer.js","components/Order/Order.js","components/Orders/Orders.js","containers/OrdersContainer.js","App.js","hoc/ScrollToTop.js","index.js"],"names":["module","exports","setErroredAction","erroredAction","type","NavigationItem","props","classNames","vertical","push","navigationItemContent","className","join","children","to","onClick","PizzaMenuItems","AccountMenuItems","accountMenuItems","data-test","isAuthenticated","Button","disabled","React","memo","key","alertKey","CartIcon","handleClickItemAddedAlert","history","handleClickCheckout","event","stopPropagation","nextProps","this","quantity","numItemsInCart","itemAdded","numItemsAdded","location","pathname","numItems","fromCheckout","style","height","Component","withRouter","Header","handleClickMenuIcon","toggleSidebar","alt","src","PizzaTimeLogo","position","connect","state","items","cart","auth","userId","Footer","Backdrop","show","Modal","useEffect","document","body","overflow","modalClassNames","error","clicked","modalClosed","withErrorHandler","WrappedComponent","axios","HOComponent","handleModalClosed","setState","requestInterceptor","responseInterceptor","nextState","interceptors","request","use","req","response","res","Promise","reject","eject","excludeActions","message","includes","Fragment","ui","instance","create","baseURL","process","withCredentials","axiosAPI","crustTypes","crustMetadataMapping","preview","HandTossedPreview","icon","HandTossedIcon","ThinNCrispyPreview","ThinNCrispyIcon","OriginalPanPreview","OriginalPanIcon","additionalDisplay","sizes","meatImageMapping","PepperoniPreview","previewExtra","ExtraPepperoniPreview","PepperoniIcon","ItalianSausagePreview","ExtraItalianSausagePreview","ItalianSausageIcon","HamPreview","ExtraHamPreview","HamIcon","BaconPreview","ExtraBaconPreview","BaconIcon","GrilledChickenPreview","ExtraGrilledChickenPreview","GrilledChickenIcon","BeefPreview","ExtraBeefPreview","BeefIcon","PorkPreview","ExtraPorkPreview","PorkIcon","OLIVES","BELL_PEPPERS","veggiesImageMapping","MushroomsPreview","ExtraMushroomsPreview","MushroomsIcon","RoastedSpinachPreview","ExtraRoastedSpinachPreview","RoastedSpinachIcon","RedOnionsPreview","ExtraRedOnionsPreview","RedOnionsIcon","OlivesPreview","ExtraOlivesPreview","OlivesIcon","BellPeppersPreview","ExtraBellPeppersPreview","BellPeppersIcon","BananaPeppersPreview","ExtraBananaPeppersPreview","BananaPeppersIcon","PineapplePreview","ExtraPineapplePreview","PineappleIcon","JalapenoPeppersPreview","ExtraJalapenoPeppersPreview","JalapenoPeppersIcon","RomaTomatoesPreview","ExtraRomaTomatoesPreview","RomaTomatoesIcon","CRUST","SIZE","SAUCE","MEATS","VEGGIES","REGULAR_TOPPING","WHOLE","cheeseAmounts","cheeseAmountMetadataMapping","sauceImageMapping","ClassicMarinaraIcon","CreamyGarlicParmesanIcon","BarbequeIcon","BuffaloIcon","sauceAmounts","sauceAmountMetadataMapping","crust_flavors","crustFlavorImageMapping","NoCrustFlavorIcon","HTGarlicButteryBlendPreview","ThinGarlicButteryBlendPreview","PanGarlicButteryBlendPreview","GarlicButteryBlendIcon","HTToastedParmesanPreview","ThinToastedParmesanPreview","PanToastedParmesanPreview","ToastedParmesanIcon","REGULAR","COMBO","toppingMapping","toppingName","amount","portion","initializePizzaBuilder","pizza","itemId","CryptoJS","require","SECRET_KEY","secureStorage","SecureStorage","localStorage","hash","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","crustPriceMapping","sizePriceMapping","propertyPriceMapping","initialState","showPizzaBuilder","pizzaBuilderReducer","action","priceType","property","value","cartId","loadingCartItem","loadingCart","itemIdBeingChanged","cartReducer","orders","validatingAddress","addressValid","addressValidationError","deliveryAddress","loadingOrders","submittingOrder","submitOrderError","getOrdersError","checkoutReducer","order","signInError","signUpError","loadingUser","authReducer","sidebarOpen","uiReducer","combineReducers","pizzaBuilder","checkout","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","calculatePrice","basePrice","propertyPrices","meatsPrice","veggiesPrice","getToppingsPrice","toFixed","toppingType","combo","toppings","toppingsPrice","forEach","topping","comboIncludesTopping","find","comboTopping","extraToppingPrice","calculateSubTotal","subTotal","item","price","getCrust","crustDisplayValue","match","exec","normalizePizza","getOrCreateLocalCart","emptyCart","pizzaHashMap","localCart","getItem","setItem","getCartDone","getCart","dispatch","get","then","combineCarts","setCart","post","getState","_id","Object","values","addToCart","pizzaHash","uuidv4","itemsArr","addToLocalCart","setCartFromLocalCart","changeCartItemSuccess","changeItemQuantity","quantityPatch","changeCartItemStart","patch","changeCartItemFailed","changeItemQuantityInLocalCart","keys","length","removeItem","removeItemFromLocalCart","saveToLocalCart","currentItem","Dropdown","onChange","options","map","option","PizzaBox","crustOptions","entries","crust","crustMetadata","sizeOptions","pizzaAdd","pizzaName","customize","customizeSecondary","buildPizza","handleClickBuild","handleChangeQuantity","resetState","pizzaType","handleChangeCrust","handleChangeSize","size","imageSrc","PizzaBoxContainer","getInitialState","persist","parseInt","target","OrderSubmission","display","SignedOutMessage","SignedUpMessage","Message","Home","fromSignOut","fromSignUp","CheesePizzaImg","PepperoniPizzaImg","MeatLoversPizzaImg","SupremePizzaImg","Meats","PepperoniLoversPizzaImg","Veggies","VeggieLoversPizzaImg","UltimateCheeseLoverPizzaImg","Chicken","HawaiianChickenPizzaImg","ChickenBaconParmesanImg","BBQChickenPizzaImg","BuffaloChickenPizzaImg","PizzaPreview","small","Cheese","meat","imgClassNames","veggy","PizzaBuilderPreview","prevProps","PizzaDescription","sauce","cheeseAmount","crustFlavor","getToppingDescriptions","toppingDescriptions","toppingDescription","meats","veggies","overallPrice","pizzaText","PizzaDetails","save","saveToCart","PizzaBuilderProgress","stage","TOPPINGS","CHEESE_SAUCE","SIZE_CRUST","ImageOptions","imageMapping","selected","itemSelected","selectionMetadata","data-value","ButtonOptions","selectionOptions","SizeCrustBuilder","e","proptTypes","PropTypes","object","isRequired","CheeseSauceBuilder","ToppingOptions","onClickAmount","onClickPortion","amountOptions","selection","itemsSelected","checkMark","toppingOptionClasses","portionOptions","data-topping","wholeSelection","leftSelection","rightSelection","OptionsButton","handleButtonClick","selectedOption","optionName","displayName","ToppingsBuilder","handleClickVeggies","handleClickMeats","toppingsBuilder","PizzaBuilder","handleClickProperty","setProperty","currentTarget","dataset","builder","back","next","getActionButton","buttonName","handleClickAction","toggleTopping","setToppingAmount","setToppingPortion","totalBuilder","handleCloseBuilder","cartQuantity","handleClickStage","PizzaBuilderContainer","closePizzaBuilder","toppingIndex","findIndex","splice","selectedTopping","put","CartItem","remove","isEqual","CartItems","Cart","emptyCartMessage","errorMessage","CartContainer","submitOrderFailed","validateDeliveryAddressFailed","authReset","authSuccess","authData","user","checkAuthTimeout","expires","signInFailed","signUpFailed","signOut","expirationTime","timeToExpire","Date","getTime","setTimeout","Input","inputElement","inputClasses","validationError","invalid","shouldValidate","touched","formSubmitted","elementType","elementConfig","label","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","isPhoneNumber","Form","handleChange","inputId","updatedFormData","form","updatedForm","updatedFormElement","trimmedValue","digits","replace","formatPhoneNumber","valid","validation","formIsValid","handleInputChange","updateForm","formElementsArray","id","config","formElement","onSubmit","SignIn","handleSubmit","redirect","SignInContainer","email","placeholder","password","preventDefault","signIn","stateUpdate","err","SignOutContainer","SignUp","SignUpContainer","signUp","AddressForm","validateDeliveryAddressReset","loading","AddressFormContainer","street","unit","city","hasLength","zipcode","validateDeliveryAddress","addressForm","params","secondary","candidates","axiosGeolocation","matchCode","analysis","dpv_match_code","streetAddress","secondaryAddress","OrderType","isDelivery","handleClick","clearDeliveryAddress","orderTypeClassNames","deliveryClassNames","iconClassNames","data-type","DeliveryAddress","Checkout","handleSubmitOrder","total","submitOrder","tax","calculateTax","color","orderDate","Sidebar","sidebarContainerClassNames","sidebarClassNames","closeSidebar","Order","Orders","ordersContent","reverse","orderType","givenDate","date","month","getMonth","day","getDate","year","getFullYear","getReadableDate","App","authenticateToken","exact","path","component","CheckoutContainer","OrdersContainer","listen","scrollTo","ReactDOM","render","basename","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,6D,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.5e0634b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza_supreme.d32db457.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_GreenBellPepper_ML_reg.0e00f485.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_meat_lovers.6888d88d.png\";","module.exports = __webpack_public_path__ + \"static/media/alarm-clock.e343a2cb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_NoFinish.3abbb296.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_ht.ef946a28.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_NoFinish.3d23efc8.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_thin.6c415f1e.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_NoFinish.857451fd.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_crust_pan.a639fd58.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_reg.bd65daa5.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pepperoni_ML_extra.1a5dda64.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pepperoni.c8384ebc.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_reg.67e2467d.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_ItalianSausage_ML_extra.c854f9c4.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_ItalianSausage.30f1abc9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_reg.de53578e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Ham_ML_extra.5a14d4e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Ham.f9a4b089.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_reg.9ad0ed0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Bacon_ML_extra.09ab3e70.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Bacon.01d8344a.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_reg.9f9c0251.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Chicken_ML_extra.b8e5a0bf.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Chicken.5ad44911.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_reg.2aa6b6df.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Beef_ML_extra.ed2a2c61.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Beef.3b7c67c7.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_reg.6342108f.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pork_ML_extra.029c5390.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pork.f6ce9e4e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_reg.ac08da62.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Mushroom_ML_extra.4d46fc4f.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Mushroom.13419b0e.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_reg.a1aa56b9.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Spinach_Fresh_ML_extra.70bff6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Spinach_fresh.0f9a3e93.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_reg.56b4f355.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Onion_red_ML_extra.a0e7bd25.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Onion_Red.fc649c44.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_reg.2c37ed8c.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Olives_black_ML_extra.37addb7c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Olive_black.f36bd555.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_GreenBellPepper.52813aeb.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_reg.f86003d4.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_BananaPepper_ML_extra.f22472f1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_BananaPepper.f3bcdf43.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_reg.84001df3.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Pineapple_ML_extra.97e5f278.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Pineapple.25272d60.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_reg.351d9ecd.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Jalepeno_ML_extra.d8ec6a52.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Jalapeno.010847af.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_reg.6d5ebb38.png\";","module.exports = __webpack_public_path__ + \"static/media/topping_Tomato_ML_extra.8efd4042.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_topping_Tomato.45793eeb.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Marinara.85fd0f2c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_CreamyGarlicParm.c6e0d76c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_BBQ.552f71e7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_sauce_Buffalo.75e74963.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_GarlicButteryBlend.3519578d.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_GarlicButteryBlend.cbd8d06b.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_GarlicButteryBlend.eed3a573.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_GarlicButteryBlend_whole_2017.cb6aaecb.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_ht_ToastedParmesan.2d159915.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_thin_ToastedParmesan.936d9f40.png\";","module.exports = __webpack_public_path__ + \"static/media/crust_pan_ToastedParmesan.78b23d6e.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_ToastedParm_whole_2017.222e5fd7.png\";","module.exports = __webpack_public_path__ + \"static/media/icon_finisher_none_whole_2017.b6008bb6.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_pepperoni.50a5d0e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Pepperoni_Lovers.436141dc.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Veggie_Lovers.eb41eca4.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Ultimate_Cheese_Lovers.cf9afb2c.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Hawaiian_Chicken.8799700a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Chicken_Bacon_Parmesan.44137224.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Backyard_BBQ_Chicken.cdffd12a.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_Buffalo_Chicken.332af0a5.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese_mozz_ML.10abdd1f.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_cheese.f7ed334d.jpg\";","import * as actionTypes from '../uiActionTypes';\n\n/* open/close the sidebar menu */\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR,\n  };\n};\n\n/* close the sidebar menu */\nexport const closeSidebar = () => {\n  return {\n    type: actionTypes.CLOSE_SIDEBAR,\n  };\n};\n\n/* set error for withErrorHandler HOC to pickup */\nexport const setErroredAction = (erroredAction) => {\n  return {\n    type: actionTypes.SET_ERRORED_ACTION,\n    erroredAction: erroredAction,\n  };\n};\n","export const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n","import React from 'react';\nimport './NavigationItem.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Standard navigation item that is part of either the header or sidebar menus */\nconst NavigationItem = (props) => {\n  let classNames = ['navigation-item__text'];\n  if (props.vertical) {\n    classNames.push('navigation-item__text--vertical');\n  }\n  let navigationItemContent = null;\n\n  navigationItemContent = (\n    <span className={classNames.join(' ')}>\n      <h3>{props.children}</h3>\n    </span>\n  );\n\n  let navigationItem = null;\n  if (props.to) {\n    navigationItem = (\n      <Link onClick={props.onClick} to={props.to} className='navigation-item'>\n        {navigationItemContent}\n      </Link>\n    );\n  } else {\n    navigationItem = (\n      <span onClick={props.onClick} className='navigation-item'>\n        {navigationItemContent}\n      </span>\n    );\n  }\n\n  return navigationItem;\n};\n\nNavigationItem.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  vertical: PropTypes.bool,\n};\n\nexport default NavigationItem;\n","import React from 'react';\nimport './PizzaMenuItems.scss';\nimport NavigationItem from '../UI/NavigationItem/NavigationItem';\n\n/* Menu items that display links to different categories of pizza */\n\nconst PizzaMenuItems = (props) => {\n  return (\n    <div className='pizza-menu-items'>\n      <NavigationItem {...props} onClick={props.onClick} to='/'>\n        Popular\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/meats'>\n        Meats\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/chicken'>\n        Chicken\n      </NavigationItem>\n      <NavigationItem {...props} onClick={props.onClick} to='/veggies'>\n        Veggies\n      </NavigationItem>\n    </div>\n  );\n};\n\nexport default PizzaMenuItems;\n","import React, { Fragment } from 'react';\nimport NavigationItem from '../UI/NavigationItem/NavigationItem';\nimport PropTypes from 'prop-types';\n\n/* Menu items that deal with account information, namely authentication and orders */\nconst AccountMenuItems = (props) => {\n  let accountMenuItems = (\n    <NavigationItem {...props} to='/signin' data-test='signin'>\n      Sign In\n    </NavigationItem>\n  );\n  if (props.isAuthenticated) {\n    accountMenuItems = (\n      <Fragment>\n        <NavigationItem {...props} to='/my-orders' data-test='my-orders'>\n          My Orders\n        </NavigationItem>\n        <NavigationItem {...props} to='/signout' data-test='signout'>\n          Sign Out\n        </NavigationItem>\n      </Fragment>\n    );\n  }\n  return accountMenuItems;\n};\n\nAccountMenuItems.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nexport default AccountMenuItems;\n","import React from 'react';\nimport './Button.scss';\nimport PropTypes from 'prop-types';\n\nexport const primary = 'button';\nexport const secondary = 'button button--secondary';\nexport const tertiary = 'button button--tertiary';\n\n/* Standard button across entire app */\nconst Button = (props) => {\n  return (\n    <button\n      data-test='button'\n      onClick={props.onClick}\n      disabled={props.disabled}\n      className={props.type}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  type: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n    .isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport './DropdownAlert.scss';\nimport PropTypes from 'prop-types';\n\n/* Dropdown alert disappears automatically in a few seconds */\nconst DropdownAlert = (props) => {\n  return (\n    <div\n      key={props.alertKey}\n      onClick={props.onClick}\n      className='dropdown-menu-alert'\n    >\n      <div className='dropdown-menu-alert__container'>{props.children}</div>\n    </div>\n  );\n};\n\nDropdownAlert.propTypes = {\n  alertKey: PropTypes.string.isRequired,\n  children: PropTypes.array,\n};\n\nexport default React.memo(DropdownAlert);\n","import React, { Component } from 'react';\nimport { MdShoppingCart } from 'react-icons/md';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport DropdownAlert from '../../components/UI/DropdownAlert/DropdownAlert';\nimport PropTypes from 'prop-types';\n\nclass CartIcon extends Component {\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.quantity !== nextProps.quantity) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    let numItemsInCart = null;\n    if (this.props.quantity > 0) {\n      numItemsInCart = (\n        <div\n          data-test='numItems'\n          key={`${this.props.quantity}-num-items`}\n          className='header__cart-items animate-num-items'\n        >\n          {this.props.quantity}\n        </div>\n      );\n    }\n    let itemAdded = null;\n    if (\n      this.props.numItemsAdded > 0 &&\n      this.props.location.pathname !== '/cart' &&\n      this.props.location.pathname !== '/checkout'\n    ) {\n      let numItems = null;\n      if (this.props.numItemsAdded === 1) {\n        numItems = <span>{this.props.numItemsAdded} new item</span>;\n      } else {\n        numItems = <span>{this.props.numItemsAdded} new items</span>;\n      }\n      itemAdded = (\n        <DropdownAlert\n          data-test='itemAdded'\n          onClick={this.handleClickItemAddedAlert}\n          alertKey={`${this.props.quantity}-add-items`}\n        >\n          <h3 className='header__alert-text'>{numItems} added to cart</h3>\n          <Link\n            onClick={this.handleClickCheckout}\n            className='header__checkout'\n            to={{\n              pathname: this.props.isAuthenticated\n                ? '/checkout/order-type'\n                : '/signin',\n              fromCheckout: true,\n            }}\n          >\n            <Button type={primary}>Checkout</Button>\n          </Link>\n        </DropdownAlert>\n      );\n    }\n\n    return (\n      <div style={{ height: '100%' }} data-test='cartIconContainer'>\n        <NavigationItem to='/cart' data-test='navigationItem'>\n          <div className='header__cart header__icon' data-test='cartIcon'>\n            <MdShoppingCart />\n            {numItemsInCart}\n          </div>\n        </NavigationItem>\n        {itemAdded}\n      </div>\n    );\n  }\n}\n\nCartIcon.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default withRouter(CartIcon);\n","import React, { Component } from 'react';\nimport './Header.scss';\nimport PizzaTimeLogo from '../../assets/images/alarm-clock.png';\nimport { MdMenu } from 'react-icons/md';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport { Link, withRouter } from 'react-router-dom';\nimport PizzaMenuItems from '../../components/PizzaMenuItems/PizzaMenuItems';\nimport AccountMenuItems from '../../components/AccountMenuItems/AccountMenuItems';\nimport CartIcon from '../../components/CartIcon/CartIcon';\nimport PropTypes from 'prop-types';\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nclass Header extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.isAuthenticated !== nextProps.isAuthenticated\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClickMenuIcon = () => {\n    this.props.toggleSidebar();\n  };\n\n  handleClickItemAddedAlert = () => {\n    this.props.history.push('/cart');\n  };\n\n  handleClickCheckout = (event) => {\n    event.stopPropagation();\n  };\n\n  render() {\n    return (\n      <header className='header'>\n        <div className='header__main'>\n          <div onClick={this.handleClickMenuIcon} className='header__menu'>\n            <NavigationItem>\n              <div className='header__icon'>\n                <MdMenu />\n              </div>\n            </NavigationItem>\n          </div>\n          <Link to='/' className='header__logo-title'>\n            <img\n              alt='PizzaTime logo'\n              className='header__logo'\n              src={PizzaTimeLogo}\n            />\n            <div className='header__title'>\n              <span>PizzaTime</span>\n            </div>\n          </Link>\n          <div className='header__menu-items'>\n            <PizzaMenuItems />\n          </div>\n        </div>\n        <div className='header__account'>\n          <div className='header__account-actions'>\n            <AccountMenuItems isAuthenticated={this.props.isAuthenticated} />\n          </div>\n          <div style={{ position: 'relative' }}>\n            <CartIcon\n              numItemsAdded={this.props.numItemsAdded}\n              quantity={this.props.quantity}\n            />\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toggleSidebar } from '../store/ui/uiActions/uiActions';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header/Header';\n\n/* Header containing logo, app name, main menu, autentication, orders and cart */\nconst HeaderContainer = (props) => {\n  return <Header {...props} />;\n};\n\nHeaderContainer.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  numItemsAdded: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  quantity: state.cart.quantity,\n  numItemsAdded: state.cart.numItemsAdded,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { toggleSidebar })(\n  withRouter(HeaderContainer)\n);\n","import React from 'react';\nimport './Footer.scss';\nimport { Link } from 'react-router-dom';\n\n/* Footer containing informational links */\nconst Footer = (props) => {\n  return (\n    <footer className='footer'>\n      <div className='footer__links'>\n        <Link to='#'>ABOUT</Link>\n        <Link to='#'>CONTACT US</Link>\n        <Link to='#'>CAREERS</Link>\n        <Link to='#'>PRIVACY POLICY</Link>\n        <Link to='#'>TERMS</Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './Backdrop.scss';\nimport PropTypes from 'prop-types';\n\n/* Greyed out backdrop on top of provided children */\nconst Backdrop = (props) => {\n  return props.show ? <div className='backdrop'>{props.children}</div> : null;\n};\n\nBackdrop.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport './Modal.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport { useEffect } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport PropTypes from 'prop-types';\n\n/* Standard modal across entire app */\nconst Modal = (props) => {\n  useEffect(() => {\n    if (props.show) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  });\n\n  let modalClassNames = ['modal'];\n  if (props.error) {\n    modalClassNames.push('modal--error');\n  }\n  if (!props.show) {\n    modalClassNames.push('modal--closed');\n  }\n  return (\n    <Backdrop show={props.show} clicked={props.modalClosed}>\n      <div className={modalClassNames.join(' ')}>\n        <MdClose className='modal__close' onClick={props.modalClosed} />\n        <div className='modal__children'>{props.children}</div>\n      </div>\n    </Backdrop>\n  );\n};\n\nModal.propTypes = {\n  show: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  error: PropTypes.bool,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Modal from '../components/UI/Modal/Modal';\nimport { connect } from 'react-redux';\nimport { SIGN_IN, SIGN_UP, AUTH_TOKEN } from '../shared/actionErrors';\n\n/* Axios error handler HOC */\nconst withErrorHandler = (WrappedComponent, axios) => {\n  class HOComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.requestInterceptor = null;\n      this.responseInterceptor = null;\n    }\n    state = {\n      error: null,\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      if (!this.state.error && nextState.error) {\n        return false;\n      }\n      return true;\n    }\n\n    componentDidMount() {\n      this.requestInterceptor = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n\n      this.responseInterceptor = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n          return Promise.reject(error);\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.requestInterceptor);\n      axios.interceptors.response.eject(this.responseInterceptor);\n    }\n\n    handleModalClosed = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      //Don't show error modal for certain actions\n      //They have their own error handling\n      let excludeActions = [SIGN_UP, SIGN_IN, AUTH_TOKEN];\n      if (\n        this.state.error &&\n        this.state.error.message !== 'Network Error' &&\n        excludeActions.includes(this.props.erroredAction)\n      ) {\n        return <WrappedComponent {...this.props} />;\n      }\n      let erroredAction = 'perform action';\n      erroredAction = this.props.erroredAction || erroredAction;\n\n      return (\n        <React.Fragment>\n          <Modal\n            error\n            show={this.state.error}\n            modalClosed={this.handleModalClosed}\n          >\n            {this.state.error\n              ? `Unable to ${erroredAction}: ${this.state.error.message}`\n              : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    erroredAction: state.ui.erroredAction,\n  });\n\n  return connect(mapStateToProps, null)(HOComponent);\n};\n\nexport default withErrorHandler;\n","export const SUBMIT_ORDER = 'submit your order';\nexport const GET_ORDERS = 'retrieve your orders';\nexport const ADD_ITEM_TO_CART = 'add item(s) to cart';\nexport const CREATE_CART = 'create cart';\nexport const GET_CART = 'retrieve cart';\nexport const EMPTY_CART = 'empty cart';\nexport const CHANGE_ITEM_QUANTITY = 'change item quantity';\nexport const REMOVE_ITEM = 'remove item';\nexport const SAVE_TO_CART = 'save item to cart';\nexport const SIGN_IN = 'sign in';\nexport const SIGN_UP = 'sign up';\nexport const AUTH_TOKEN = 'authenticate token';\nexport const VALIDATE_DELIVERY_ADDRESS = 'validate delivery address';\n","import axios from 'axios';\n\n//axios.defaults.withCredentials = true;\n\n/* Axios instance used to call firebase api */\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  withCredentials: true,\n});\n\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","import React from 'react';\nimport HeaderContainer from '../../../containers/HeaderContainer';\nimport Footer from '../Footer/Footer';\nimport './Layout.scss';\nimport PropTypes from 'prop-types';\nimport withErrorHandler from '../../../hoc/withErrorHandler';\nimport axiosAPI from '../../../shared/axiosAPI';\n\n/* Overall app layout */\nconst Layout = (props) => {\n  return (\n    <div className='layout' data-test='layout'>\n      <HeaderContainer data-test='header' />\n      <main className='main' data-test='main'>\n        {props.children}\n      </main>\n      <Footer data-test='footer' />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default withErrorHandler(Layout, axiosAPI);\n","import HandTossedPreview from '../assets/images/crust_ht_NoFinish.png';\nimport HandTossedIcon from '../assets/images/icon_crust_ht.png';\nimport ThinNCrispyPreview from '../assets/images/crust_thin_NoFinish.png';\nimport ThinNCrispyIcon from '../assets/images/icon_crust_thin.png';\nimport OriginalPanPreview from '../assets/images/crust_pan_NoFinish.png';\nimport OriginalPanIcon from '../assets/images/icon_crust_pan.png';\n\n/* All metadata related to the display of crust options */\n\nexport const HAND_TOSSED = 'Hand Tossed';\nexport const THIN_N_CRISPY = \"Thin 'N Crispy\";\nexport const ORIGINAL_PAN = 'Original Pan';\n\nexport const crustTypes = [HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN];\n\nexport const crustMetadataMapping = {\n  [HAND_TOSSED]: {\n    preview: HandTossedPreview,\n    icon: HandTossedIcon,\n  },\n  [THIN_N_CRISPY]: {\n    preview: ThinNCrispyPreview,\n    icon: ThinNCrispyIcon,\n  },\n  [ORIGINAL_PAN]: {\n    preview: OriginalPanPreview,\n    icon: OriginalPanIcon,\n    additionalDisplay: '+$2.00',\n  },\n};\n","/* All metadata related to the display of size options */\n\nexport const LARGE = 'Large';\nexport const MEDIUM = 'Medium';\nexport const PERSONAL = 'Personal';\n\nexport const sizes = [LARGE, MEDIUM, PERSONAL];\n","import PepperoniPreview from '../assets/images/topping_Pepperoni_ML_reg.png';\nimport ExtraPepperoniPreview from '../assets/images/topping_Pepperoni_ML_extra.png';\nimport PepperoniIcon from '../assets/images/icon_topping_Pepperoni.png';\nimport ItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_reg.png';\nimport ExtraItalianSausagePreview from '../assets/images/topping_ItalianSausage_ML_extra.png';\nimport ItalianSausageIcon from '../assets/images/icon_topping_ItalianSausage.png';\nimport HamPreview from '../assets/images/topping_Ham_ML_reg.png';\nimport ExtraHamPreview from '../assets/images/topping_Ham_ML_extra.png';\nimport HamIcon from '../assets/images/icon_topping_Ham.png';\nimport BaconPreview from '../assets/images/topping_Bacon_ML_reg.png';\nimport ExtraBaconPreview from '../assets/images/topping_Bacon_ML_extra.png';\nimport BaconIcon from '../assets/images/icon_topping_Bacon.png';\nimport GrilledChickenPreview from '../assets/images/topping_Chicken_ML_reg.png';\nimport ExtraGrilledChickenPreview from '../assets/images/topping_Chicken_ML_extra.png';\nimport GrilledChickenIcon from '../assets/images/icon_topping_Chicken.png';\nimport BeefPreview from '../assets/images/topping_Beef_ML_reg.png';\nimport ExtraBeefPreview from '../assets/images/topping_Beef_ML_extra.png';\nimport BeefIcon from '../assets/images/icon_topping_Beef.png';\nimport PorkPreview from '../assets/images/topping_Pork_ML_reg.png';\nimport ExtraPorkPreview from '../assets/images/topping_Pork_ML_extra.png';\nimport PorkIcon from '../assets/images/icon_topping_Pork.png';\n\n/* All metadata related to the display of meat options */\n\nexport const PEPPERONI = 'Pepperoni';\nexport const ITALIAN_SAUSAGE = 'Italian Sausage';\nexport const HAM = 'Ham';\nexport const BACON = 'Bacon';\nexport const GRILLED_CHICKEN = 'Grilled Chicken';\nexport const BEEF = 'Beef';\nexport const PORK = 'Pork';\n\nexport const meatImageMapping = {\n  [PEPPERONI]: {\n    preview: PepperoniPreview,\n    previewExtra: ExtraPepperoniPreview,\n    icon: PepperoniIcon,\n  },\n  [ITALIAN_SAUSAGE]: {\n    preview: ItalianSausagePreview,\n    previewExtra: ExtraItalianSausagePreview,\n    icon: ItalianSausageIcon,\n  },\n  [HAM]: {\n    preview: HamPreview,\n    previewExtra: ExtraHamPreview,\n    icon: HamIcon,\n  },\n  [BACON]: {\n    preview: BaconPreview,\n    previewExtra: ExtraBaconPreview,\n    icon: BaconIcon,\n  },\n  [GRILLED_CHICKEN]: {\n    preview: GrilledChickenPreview,\n    previewExtra: ExtraGrilledChickenPreview,\n    icon: GrilledChickenIcon,\n  },\n  [BEEF]: {\n    preview: BeefPreview,\n    previewExtra: ExtraBeefPreview,\n    icon: BeefIcon,\n  },\n  [PORK]: {\n    preview: PorkPreview,\n    previewExtra: ExtraPorkPreview,\n    icon: PorkIcon,\n  },\n};\n","import MushroomsPreview from '../assets/images/topping_Mushroom_ML_reg.png';\nimport ExtraMushroomsPreview from '../assets/images/topping_Mushroom_ML_extra.png';\nimport MushroomsIcon from '../assets/images/icon_topping_Mushroom.png';\nimport RoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_reg.png';\nimport ExtraRoastedSpinachPreview from '../assets/images/topping_Spinach_Fresh_ML_extra.png';\nimport RoastedSpinachIcon from '../assets/images/icon_topping_Spinach_fresh.png';\nimport RedOnionsPreview from '../assets/images/topping_Onion_red_ML_reg.png';\nimport ExtraRedOnionsPreview from '../assets/images/topping_Onion_red_ML_extra.png';\nimport RedOnionsIcon from '../assets/images/icon_topping_Onion_Red.png';\nimport OlivesPreview from '../assets/images/topping_Olives_black_ML_reg.png';\nimport ExtraOlivesPreview from '../assets/images/topping_Olives_black_ML_extra.png';\nimport OlivesIcon from '../assets/images/icon_topping_Olive_black.png';\nimport BellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport ExtraBellPeppersPreview from '../assets/images/topping_GreenBellPepper_ML_reg.png';\nimport BellPeppersIcon from '../assets/images/icon_topping_GreenBellPepper.png';\nimport BananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_reg.png';\nimport ExtraBananaPeppersPreview from '../assets/images/topping_BananaPepper_ML_extra.png';\nimport BananaPeppersIcon from '../assets/images/icon_topping_BananaPepper.png';\nimport PineapplePreview from '../assets/images/topping_Pineapple_ML_reg.png';\nimport ExtraPineapplePreview from '../assets/images/topping_Pineapple_ML_extra.png';\nimport PineappleIcon from '../assets/images/icon_topping_Pineapple.png';\nimport JalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_reg.png';\nimport ExtraJalapenoPeppersPreview from '../assets/images/topping_Jalepeno_ML_extra.png';\nimport JalapenoPeppersIcon from '../assets/images/icon_topping_Jalapeno.png';\nimport RomaTomatoesPreview from '../assets/images/topping_Tomato_ML_reg.png';\nimport ExtraRomaTomatoesPreview from '../assets/images/topping_Tomato_ML_extra.png';\nimport RomaTomatoesIcon from '../assets/images/icon_topping_Tomato.png';\n\n/* All metadata related to the display of veggy options */\n\nexport const MUSHROOMS = 'Mushrooms';\nexport const ROASTED_SPINACH = 'Roasted Spinach';\nexport const RED_ONIONS = 'Red Onions';\nexport const OLIVES = 'Mediterranean Black Olives';\nexport const BELL_PEPPERS = 'Green Bell Peppers';\nexport const BANANA_PEPPERS = 'Banana Peppers';\nexport const PINEAPPLE = 'Pineapple';\nexport const JALAPENO_PEPPERS = 'Jalapeno Peppers';\nexport const ROMA_TOMATOES = 'Roma Tomatoes';\n\nexport const veggiesImageMapping = {\n  [MUSHROOMS]: {\n    preview: MushroomsPreview,\n    previewExtra: ExtraMushroomsPreview,\n    icon: MushroomsIcon,\n  },\n  [ROASTED_SPINACH]: {\n    preview: RoastedSpinachPreview,\n    previewExtra: ExtraRoastedSpinachPreview,\n    icon: RoastedSpinachIcon,\n  },\n  [RED_ONIONS]: {\n    preview: RedOnionsPreview,\n    previewExtra: ExtraRedOnionsPreview,\n    icon: RedOnionsIcon,\n  },\n  [OLIVES]: {\n    preview: OlivesPreview,\n    previewExtra: ExtraOlivesPreview,\n    icon: OlivesIcon,\n  },\n  [BELL_PEPPERS]: {\n    preview: BellPeppersPreview,\n    previewExtra: ExtraBellPeppersPreview,\n    icon: BellPeppersIcon,\n  },\n  [BANANA_PEPPERS]: {\n    preview: BananaPeppersPreview,\n    previewExtra: ExtraBananaPeppersPreview,\n    icon: BananaPeppersIcon,\n  },\n  [PINEAPPLE]: {\n    preview: PineapplePreview,\n    previewExtra: ExtraPineapplePreview,\n    icon: PineappleIcon,\n  },\n  [JALAPENO_PEPPERS]: {\n    preview: JalapenoPeppersPreview,\n    previewExtra: ExtraJalapenoPeppersPreview,\n    icon: JalapenoPeppersIcon,\n  },\n  [ROMA_TOMATOES]: {\n    preview: RomaTomatoesPreview,\n    previewExtra: ExtraRomaTomatoesPreview,\n    icon: RomaTomatoesIcon,\n  },\n};\n","/* Standard key names used to store data in app */\nexport const CRUST = 'crust';\nexport const SIZE = 'size';\nexport const SAUCE = 'sauce';\nexport const SAUCE_AMOUNT = 'sauceAmount';\nexport const CHEESE_AMOUNT = 'cheeseAmount';\nexport const CRUST_FLAVOR = 'crustFlavor';\nexport const MEATS = 'meats';\nexport const VEGGIES = 'veggies';\nexport const COMBO_NAME = 'comboName';\n\n/* Standard value names used for topping related data */\nexport const EXTRA_TOPPING = 'Extra Topping';\nexport const REGULAR_TOPPING = 'Regular Topping';\nexport const WHOLE = 'Whole';\nexport const LEFT_HALF = 'Left Half';\nexport const RIGHT_HALF = 'Right Half';\n","/* All metadata related to the displaying of cheese options */\n\nexport const REGULAR_CHEESE = 'Regular';\nexport const EXTRA_CHEESE = 'Extra';\nexport const LIGHT_CHEESE = 'Light';\nexport const NO_CHEESE = 'None';\n\nexport const cheeseAmounts = [\n  EXTRA_CHEESE,\n  REGULAR_CHEESE,\n  LIGHT_CHEESE,\n  NO_CHEESE,\n];\n\nexport const cheeseAmountMetadataMapping = {\n  [EXTRA_CHEESE]: {\n    additionalDisplay: '+$1.00',\n  },\n};\n","import ClassicMarinaraIcon from '../assets/images/icon_sauce_Marinara.png';\nimport CreamyGarlicParmesanIcon from '../assets/images/icon_sauce_CreamyGarlicParm.png';\nimport BarbequeIcon from '../assets/images/icon_sauce_BBQ.png';\nimport BuffaloIcon from '../assets/images/icon_sauce_Buffalo.png';\n\n/* All metadata related to the display of sauce options */\n\nexport const CLASSIC_MARINARA = 'Classic Marinara';\nexport const CREAMY_GARLIC_PARMESAN = 'Creamy Garlic Parmesan';\nexport const BARBECUE = 'Barbeque';\nexport const BUFFALO = 'Buffalo';\n\nexport const sauceImageMapping = {\n  [CLASSIC_MARINARA]: {\n    icon: ClassicMarinaraIcon,\n  },\n  [CREAMY_GARLIC_PARMESAN]: {\n    icon: CreamyGarlicParmesanIcon,\n  },\n  [BARBECUE]: {\n    icon: BarbequeIcon,\n  },\n  [BUFFALO]: {\n    icon: BuffaloIcon,\n  },\n};\n\nexport const REGULAR_SAUCE = 'Regular';\nexport const EXTRA_SAUCE = 'Extra';\nexport const LIGHT_SAUCE = 'Light';\nexport const NO_SAUCE = 'None';\n\nexport const sauceAmounts = [EXTRA_SAUCE, REGULAR_SAUCE, LIGHT_SAUCE, NO_SAUCE];\n\nexport const sauceAmountMetadataMapping = {\n  [EXTRA_SAUCE]: {\n    additionalDisplay: '+$1.00',\n  },\n};\n","import HTGarlicButteryBlendPreview from '../assets/images/crust_ht_GarlicButteryBlend.png';\nimport ThinGarlicButteryBlendPreview from '../assets/images/crust_thin_GarlicButteryBlend.png';\nimport PanGarlicButteryBlendPreview from '../assets/images/crust_pan_GarlicButteryBlend.png';\nimport GarlicButteryBlendIcon from '../assets/images/icon_finisher_GarlicButteryBlend_whole_2017.png';\nimport HTToastedParmesanPreview from '../assets/images/crust_ht_ToastedParmesan.png';\nimport ThinToastedParmesanPreview from '../assets/images/crust_thin_ToastedParmesan.png';\nimport PanToastedParmesanPreview from '../assets/images/crust_pan_ToastedParmesan.png';\nimport ToastedParmesanIcon from '../assets/images/icon_finisher_ToastedParm_whole_2017.png';\nimport NoCrustFlavorIcon from '../assets/images/icon_finisher_none_whole_2017.png';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\n\n/* All metadata related to the display of crust flavor options */\n\nexport const NO_CRUST_FLAVOR = 'No Crust Flavor';\nexport const GARLIC_BUTTERY_BLEND = 'Garlic Buttery Blend';\nexport const TOASTED_PARMESAN = 'Toasted Parmesan';\n\nexport const crust_flavors = [\n  NO_CRUST_FLAVOR,\n  GARLIC_BUTTERY_BLEND,\n  TOASTED_PARMESAN,\n];\n\nexport const crustFlavorImageMapping = {\n  [NO_CRUST_FLAVOR]: {\n    icon: NoCrustFlavorIcon,\n  },\n  [GARLIC_BUTTERY_BLEND]: {\n    [HAND_TOSSED]: {\n      preview: HTGarlicButteryBlendPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinGarlicButteryBlendPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanGarlicButteryBlendPreview,\n    },\n    icon: GarlicButteryBlendIcon,\n  },\n  [TOASTED_PARMESAN]: {\n    [HAND_TOSSED]: {\n      preview: HTToastedParmesanPreview,\n    },\n    [THIN_N_CRISPY]: {\n      preview: ThinToastedParmesanPreview,\n    },\n    [ORIGINAL_PAN]: {\n      preview: PanToastedParmesanPreview,\n    },\n    icon: ToastedParmesanIcon,\n  },\n};\n","import {\n  HAM,\n  PORK,\n  BEEF,\n  ITALIAN_SAUSAGE,\n  BACON,\n  PEPPERONI,\n  GRILLED_CHICKEN,\n} from './meatMetadata';\nimport {\n  MUSHROOMS,\n  BELL_PEPPERS,\n  RED_ONIONS,\n  OLIVES,\n  ROMA_TOMATOES,\n  BANANA_PEPPERS,\n  PINEAPPLE,\n} from './veggiesMetadata';\nimport {\n  MEATS,\n  VEGGIES,\n  CHEESE_AMOUNT,\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  SAUCE,\n  CRUST_FLAVOR,\n} from './pizzaProperties';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { BUFFALO, BARBECUE } from './sauceMetadata';\nimport { TOASTED_PARMESAN } from './crustFlavorMetadata';\n\n/* Holds various combo related display metadata used in multiple components */\n\nexport const CHEESE = 'Cheese';\nexport const PEPPERONI_PIZZA = 'Pepperoni';\nexport const MEAT_LOVER = \"Meat Lover's\";\nexport const SUPREME = 'Supreme';\nexport const PEPPERONI_LOVER = \"Pepperoni Lover's\";\nexport const SUPER_SUPREME = 'Super Supreme';\nexport const VEGGIE_LOVER = \"Veggie Lover's\";\nexport const ULTIMATE_CHEESE_LOVER = \"Ultimate Cheese Lover's\";\nexport const BUFFALO_CHICKEN = 'Buffalo Chicken';\nexport const BBQ_CHICKEN = 'BBQ Chicken';\nexport const HAWAIIAN_CHICKEN = 'Hawaiian Chicken';\nexport const CHICKEN_BACON_PARMESAN = 'Chicken Bacon Parmesan';\n\nexport const REGULAR = 'Regular';\nexport const COMBO = 'Combo';\n\nexport const toppingMapping = {\n  [CHEESE]: {\n    [MEATS]: [],\n    [VEGGIES]: [],\n  },\n  [PEPPERONI_PIZZA]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [MEAT_LOVER]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ITALIAN_SAUSAGE, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [PEPPERONI_LOVER]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: EXTRA_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [],\n  },\n  [SUPREME]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [SUPER_SUPREME]: {\n    [MEATS]: [\n      { toppingName: PEPPERONI, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PORK, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BEEF, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ITALIAN_SAUSAGE, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: OLIVES, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [VEGGIE_LOVER]: {\n    [MEATS]: [],\n    [VEGGIES]: [\n      { toppingName: OLIVES, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: ROMA_TOMATOES, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: MUSHROOMS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [ULTIMATE_CHEESE_LOVER]: {\n    [CHEESE_AMOUNT]: EXTRA_CHEESE,\n    [MEATS]: [],\n    [VEGGIES]: [],\n  },\n  [BUFFALO_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: BANANA_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [SAUCE]: BUFFALO,\n  },\n  [BBQ_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: RED_ONIONS, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [SAUCE]: BARBECUE,\n  },\n  [HAWAIIAN_CHICKEN]: {\n    [MEATS]: [\n      { toppingName: HAM, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: BELL_PEPPERS, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: PINEAPPLE, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n  },\n  [CHICKEN_BACON_PARMESAN]: {\n    [MEATS]: [\n      { toppingName: BACON, amount: REGULAR_TOPPING, portion: WHOLE },\n      { toppingName: GRILLED_CHICKEN, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [VEGGIES]: [\n      { toppingName: ROMA_TOMATOES, amount: REGULAR_TOPPING, portion: WHOLE },\n    ],\n    [CRUST_FLAVOR]: TOASTED_PARMESAN,\n  },\n};\n","import * as actionTypes from '../pizzaBuilderActionTypes';\nimport { REGULAR_TOPPING, WHOLE } from '../../../metadata/pizzaProperties';\n\n/* Initialize pizza builder with properties of given pizza */\nexport const initializePizzaBuilder = (pizza, quantity, itemId) => {\n  return {\n    type: actionTypes.INIT_PIZZA_BUILDER,\n    pizza: pizza,\n    quantity: quantity,\n    itemId: itemId,\n  };\n};\n\nexport const closePizzaBuilder = () => {\n  return {\n    type: actionTypes.CLOSE_PIZZA_BUILDER,\n  };\n};\n\n/* Dynamically set a pizza property value */\nexport const setProperty = (property, value) => {\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: value,\n  };\n};\n\n/* Select/deselect a topping */\nexport const toggleTopping = (pizza, property, value) => {\n  let toppings = [...pizza[property]];\n\n  const toppingIndex = toppings.findIndex(\n    (topping) => topping.toppingName === value\n  );\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: value,\n      amount: REGULAR_TOPPING,\n      portion: WHOLE,\n    });\n  } else {\n    toppings.splice(toppingIndex, 1);\n  }\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n\n/* Set the topping amount, whether regular/extra */\nexport const setToppingAmount = (pizza, property, topping, value) => {\n  let toppings = [...pizza[property]];\n  const toppingIndex = toppings.findIndex(\n    (selectedTopping) => selectedTopping.toppingName === topping\n  );\n\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: topping,\n      amount: value,\n      portion: WHOLE,\n    });\n  } else {\n    toppings[toppingIndex] = {\n      ...toppings[toppingIndex],\n      amount: value,\n    };\n  }\n\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n\n/* Set the topping portion, whether left/right/whole */\nexport const setToppingPortion = (pizza, property, topping, value) => {\n  let toppings = [...pizza[property]];\n  const toppingIndex = toppings.findIndex(\n    (selectedTopping) => selectedTopping.toppingName === topping\n  );\n\n  if (toppingIndex < 0) {\n    toppings.push({\n      toppingName: topping,\n      amount: REGULAR_TOPPING,\n      portion: value,\n    });\n  } else {\n    toppings[toppingIndex] = {\n      ...toppings[toppingIndex],\n      portion: value,\n    };\n  }\n  return {\n    type: actionTypes.SET_PROPERTY,\n    property: property,\n    value: toppings,\n  };\n};\n","export const INIT_PIZZA_BUILDER = 'INIT_PIZZA_BUILDER';\nexport const CLOSE_PIZZA_BUILDER = 'CLOSE_PIZZA_BUILDER';\nexport const SET_PROPERTY = 'SET_PROPERTY';\n","import SecureStorage from 'secure-web-storage';\nconst CryptoJS = require('crypto-js');\n\nconst SECRET_KEY = process.env.REACT_APP_SECURE_WEB_STORAGE_SECRET_KEY;\n\n/* decrypt and encrypt data to/from local storage using the provided secret key */\nexport const secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n\n    data = data.toString();\n\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n\n    data = data.toString(CryptoJS.enc.Utf8);\n\n    return data;\n  },\n});\n","import { LARGE, MEDIUM, PERSONAL } from './sizeMetadata';\nimport { HAND_TOSSED, THIN_N_CRISPY, ORIGINAL_PAN } from './crustMetadata';\nimport { REGULAR, COMBO } from './comboMetadata';\nimport { EXTRA_CHEESE } from './cheeseMetadata';\nimport { EXTRA_SAUCE } from './sauceMetadata';\n\n/* Holds price mappings for various pizza properties */\nexport const crustPriceMapping = {\n  [LARGE]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [MEDIUM]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n  [PERSONAL]: {\n    [HAND_TOSSED]: 0.0,\n    [THIN_N_CRISPY]: 0.0,\n    [ORIGINAL_PAN]: 2.0,\n  },\n};\n\nexport const sizePriceMapping = {\n  [LARGE]: {\n    [REGULAR]: 13.99,\n    [COMBO]: 18.99,\n  },\n  [MEDIUM]: {\n    [REGULAR]: 11.99,\n    [COMBO]: 15.99,\n  },\n  [PERSONAL]: {\n    [REGULAR]: 9.99,\n    [COMBO]: 11.99,\n  },\n};\n\nexport const propertyPriceMapping = {\n  [EXTRA_SAUCE]: 1.0,\n  [EXTRA_CHEESE]: 1.0,\n};\n\nexport const toppingPrice = 1.5;\nexport const extraToppingPrice = 2.5;\n","import * as actionTypes from '../pizzaBuilderActionTypes';\nimport {\n  CLASSIC_MARINARA,\n  REGULAR_SAUCE,\n} from '../../../metadata/sauceMetadata';\nimport { HAND_TOSSED } from '../../../metadata/crustMetadata';\nimport { LARGE } from '../../../metadata/sizeMetadata';\nimport { REGULAR_CHEESE } from '../../../metadata/cheeseMetadata';\nimport { NO_CRUST_FLAVOR } from '../../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  SIZE,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n} from '../../../metadata/pizzaProperties';\nimport { REGULAR } from '../../../metadata/comboMetadata';\n\nexport const initialState = {\n  showPizzaBuilder: false,\n  itemId: null,\n  pizza: {\n    [CHEESE_AMOUNT]: REGULAR_CHEESE,\n    [COMBO_NAME]: null,\n    [CRUST]: HAND_TOSSED,\n    [CRUST_FLAVOR]: NO_CRUST_FLAVOR,\n    [MEATS]: [],\n    [VEGGIES]: [],\n    [SAUCE]: CLASSIC_MARINARA,\n    [SAUCE_AMOUNT]: REGULAR_SAUCE,\n    [SIZE]: LARGE,\n    priceType: REGULAR,\n  },\n};\n\nconst pizzaBuilderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //initialize and display pizza builder with given pizza and quantity\n    case actionTypes.INIT_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: true,\n        itemId: action.itemId,\n        pizza: {\n          [CHEESE_AMOUNT]: action.pizza[CHEESE_AMOUNT]\n            ? action.pizza[CHEESE_AMOUNT]\n            : REGULAR_CHEESE,\n          [COMBO_NAME]: action.pizza[COMBO_NAME]\n            ? action.pizza[COMBO_NAME]\n            : null,\n          [CRUST]: action.pizza[CRUST],\n          [CRUST_FLAVOR]: action.pizza[CRUST_FLAVOR]\n            ? action.pizza[CRUST_FLAVOR]\n            : NO_CRUST_FLAVOR,\n          [MEATS]: action.pizza[MEATS],\n          [VEGGIES]: action.pizza[VEGGIES],\n          [SAUCE]: action.pizza[SAUCE] ? action.pizza[SAUCE] : CLASSIC_MARINARA,\n          [SAUCE_AMOUNT]: action.pizza[SAUCE_AMOUNT]\n            ? action.pizza[SAUCE_AMOUNT]\n            : REGULAR_SAUCE,\n          [SIZE]: action.pizza[SIZE],\n          priceType: action.pizza.priceType,\n        },\n        quantity: action.quantity,\n      };\n    //close the pizza builder\n    case actionTypes.CLOSE_PIZZA_BUILDER:\n      return {\n        ...state,\n        showPizzaBuilder: false,\n      };\n    //dynamically set a pizza property\n    case actionTypes.SET_PROPERTY:\n      return {\n        ...state,\n        pizza: {\n          ...state.pizza,\n          [action.property]: action.value,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pizzaBuilderReducer;\n","import * as actionTypes from '../cartActionTypes';\n\nexport const initialState = {\n  cartId: null,\n\n  //Array of cart items\n  //Each item contains a pizza object and item quantity\n  items: [],\n\n  //Cart quantity\n  quantity: 0,\n\n  //Number of items just added. For item add notification.\n  numItemsAdded: 0,\n\n  //Loading true when changing a cart item. i.e. update or remove\n  loadingCartItem: false,\n\n  //Loading when getting the cart\n  loadingCart: true,\n\n  //Item id of item being changed to know which item to show loading sign\n  itemIdBeingChanged: null,\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Add item to cart, update pizza to item id hashmap and quantity\n    case actionTypes.ADD_TO_CART:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        numItemsAdded: action.numItemsAdded,\n      };\n    //Done loading cart\n    case actionTypes.GET_CART_DONE:\n      return {\n        ...state,\n        loadingCart: false,\n      };\n    //Set cart items\n    case actionTypes.SET_CART:\n      return {\n        ...state,\n        cartId: action.cartId,\n        items: action.items,\n        quantity: action.quantity,\n      };\n    //Change item quantity\n    case actionTypes.CHANGE_CART_ITEM_SUCCESS:\n      return {\n        ...state,\n        items: action.items,\n        quantity: action.quantity,\n        loadingCartItem: false,\n      };\n    //Set loading before changing cart item\n    case actionTypes.CHANGE_CART_ITEM_START:\n      return {\n        ...state,\n        loadingCartItem: true,\n        itemIdBeingChanged: action.itemIdBeingChanged,\n      };\n    //Failed to change cart item, done loading\n    case actionTypes.CHANGE_CART_ITEM_FAILED:\n      return {\n        ...state,\n        loadingCartItem: false,\n        itemIdBeingChanged: null,\n      };\n    //Empty cart and all metadata\n    case actionTypes.EMPTY_CART:\n      return {\n        ...state,\n        items: [],\n        quantity: 0,\n        numItemsAdded: 0,\n      };\n    //Clear cart after signing out\n    case actionTypes.SIGN_OUT_CART:\n      return {\n        ...state,\n        cartId: null,\n        items: [],\n        quantity: 0,\n        numItemsAdded: 0,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","export const CREATE_CART = 'CREATE_CART';\nexport const GET_CART_START = 'GET_CART_START';\nexport const GET_CART_DONE = 'GET_CART_DONE';\nexport const SIGN_OUT_CART = 'SIGNOUT_CART';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const SET_CART = 'SET_CART';\nexport const CHANGE_ITEM_QUANTITY = 'CHANGE_ITEM_QUANTITY';\nexport const INCREASE_ITEM_QUANTITY = 'INCREASE_ITEM_QUANTITY';\nexport const CHANGE_CART_ITEM_START = 'CHANGE_CART_ITEM_START';\nexport const REMOVE_ITEM_SUCCESS = 'REMOVE_ITEM_SUCCESS';\nexport const CHANGE_CART_ITEM_FAILED = 'CHANGE_CART_ITEM_FAILED';\nexport const CHANGE_CART_ITEM_SUCCESS = 'CHANGE_CART_ITEM_SUCCESS';\nexport const SAVE_TO_CART = 'SAVE_TO_CART';\nexport const EMPTY_CART = 'EMPTY_CART';\nexport const SET_ERRORED_ACTION = 'ERRORED_ACTION';\n","import * as actionTypes from '../checkoutActionTypes';\n\nexport const initialState = {\n  orders: [],\n  validatingAddress: false,\n  addressValid: false,\n  addressValidationError: null,\n  deliveryAddress: null,\n  loadingOrders: true,\n  submittingOrder: false,\n  submitOrderError: false,\n  getOrdersError: false,\n};\n\nconst checkoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Set loading for submit order\n    case actionTypes.SUBMIT_ORDER_START:\n      return {\n        ...state,\n        submittingOrder: true,\n        submitOrderError: false,\n      };\n    //Add submitted order to list of orders\n    case actionTypes.SUBMIT_ORDER_SUCCESS:\n      const orders = [...state.orders, action.order];\n      return {\n        ...state,\n        orders: orders,\n        submittingOrder: false,\n      };\n    //Finish loading when submit order failed\n    case actionTypes.SUBMIT_ORDER_FAILED:\n      return {\n        ...state,\n        submittingOrder: false,\n        submitOrderError: true,\n      };\n    //Successfully got orders, set orders\n    case actionTypes.GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        loadingOrders: false,\n        orders: action.orders,\n      };\n    //Finish loading when getting orders failed\n    case actionTypes.GET_ORDERS_FAILED:\n      return {\n        ...state,\n        loadingOrders: false,\n        getOrdersError: true,\n      };\n    //Successfully validated address, stop loading and set address\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_SUCCESS:\n      return {\n        ...state,\n        addressValid: true,\n        addressValidationError: null,\n        validatingAddress: false,\n        deliveryAddress: action.deliveryAddress,\n      };\n    //Finish loading when validating adddress failed\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_FAILED:\n      return {\n        ...state,\n        addressValid: false,\n        addressValidationError: action.error,\n        validatingAddress: false,\n      };\n    //Set loading\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_START:\n      return {\n        ...state,\n        validatingAddress: true,\n        addressValidationError: null,\n      };\n    //Reset all address validation properties\n    case actionTypes.VALIDATE_DELIVERY_ADDRESS_RESET:\n      return {\n        ...state,\n        validatingAddress: false,\n        addressValid: false,\n        addressValidationError: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default checkoutReducer;\n","export const SUBMIT_ORDER_START = 'SUBMIT_ORDER_START';\nexport const SUBMIT_ORDER_SUCCESS = 'SUBMIT_ORDER_SUCCESS';\nexport const SUBMIT_ORDER_FAILED = 'SUBMIT_ORDER_FAILED';\nexport const GET_ORDERS = 'GET_ORDERS';\nexport const GET_ORDERS_START = 'GET_ORDERS_START';\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS';\nexport const GET_ORDERS_FAILED = 'GET_ORDERS_FAILED';\nexport const CLEAR_DELIVERY_ADDRESS = 'CLEAR_DELIVERY_ADDRESS';\nexport const VALIDATE_DELIVERY_ADDRESS_START =\n  'VALIDATE_DELIVERY_ADDRESS_START';\nexport const VALIDATE_DELIVERY_ADDRESS_SUCCESS =\n  'VALIDATE_DELIVERY_ADDRESS_SUCCESS';\nexport const VALIDATE_DELIVERY_ADDRESS_FAILED =\n  'VALIDATE_DELIVERY_ADDRESS_FAILED';\nexport const VALIDATE_DELIVERY_ADDRESS_RESET =\n  'VALIDATE_DELIVERY_ADDRESS_RESET';\nexport const SET_ERRORED_ACTION = 'SET_ERRORED_ACTION';\n","import * as actionTypes from '../authActionTypes';\n\nexport const initialState = {\n  userId: null,\n  signInError: null,\n  signUpError: null,\n  loadingUser: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //Set loading to true and reset error\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        signInError: null,\n        signUpError: null,\n        loadingUser: true,\n      };\n    case actionTypes.AUTH_TOKEN_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n      };\n    //Reset auth errors\n    case actionTypes.AUTH_RESET:\n      return {\n        ...state,\n        signInError: null,\n        signUpError: null,\n      };\n    //Successfully authenticated\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        loadingUser: false,\n        userId: action.userId,\n        signInError: null,\n      };\n    //Set error and reset loading when sign in failed\n    case actionTypes.SIGN_IN_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n        signInError: action.error,\n      };\n    //Set error and reset loading when sign up failed\n    case actionTypes.SIGN_UP_FAILED:\n      return {\n        ...state,\n        loadingUser: false,\n        signUpError: action.error,\n      };\n    //Reset user data on signout\n    case actionTypes.AUTH_SIGNOUT:\n      return {\n        ...state,\n        userId: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_TOKEN_FAILED = 'AUTH_TOKEN_FAILED';\nexport const SIGN_IN_FAILED = 'SIGN_IN_FAILED';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const AUTH_SIGNOUT = 'AUTH_SIGNOUT';\nexport const AUTH_RESET = 'AUTH_RESET';\n","import * as actionTypes from '../uiActionTypes';\n\nexport const initialState = {\n  sidebarOpen: false,\n  erroredAction: null,\n};\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // open/close sidebar\n    case actionTypes.TOGGLE_SIDEBAR:\n      let sidebarOpen = state.sidebarOpen;\n      return {\n        ...state,\n        sidebarOpen: !sidebarOpen,\n      };\n    //close sidebar\n    case actionTypes.CLOSE_SIDEBAR:\n      return {\n        ...state,\n        sidebarOpen: false,\n      };\n    //set action that produced the error\n    case actionTypes.SET_ERRORED_ACTION:\n      return {\n        ...state,\n        erroredAction: action.erroredAction,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default uiReducer;\n","import { combineReducers } from 'redux';\nimport pizzaBuilderReducer from './pizzaBuilder/pizzaBuilderReducer/pizzaBuilderReducer';\nimport cartReducer from './cart/cartReducer/cartReducer';\nimport checkoutReducer from './checkout/checkoutReducer/checkoutReducer';\nimport authReducer from './auth/authReducer/authReducer';\nimport uiReducer from './ui/uiReducer/uiReducer';\n\nexport default combineReducers({\n  pizzaBuilder: pizzaBuilderReducer,\n  cart: cartReducer,\n  checkout: checkoutReducer,\n  auth: authReducer,\n  ui: uiReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nexport const middleware = [thunk];\n\nconst initialState = {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  SIZE,\n  CRUST,\n  MEATS,\n  VEGGIES,\n  COMBO_NAME,\n  CHEESE_AMOUNT,\n  SAUCE_AMOUNT,\n  EXTRA_TOPPING,\n  CRUST_FLAVOR,\n  SAUCE,\n} from '../metadata/pizzaProperties';\nimport { COMBO, toppingMapping } from '../metadata/comboMetadata';\nimport {\n  sizePriceMapping,\n  crustPriceMapping,\n  toppingPrice,\n  extraToppingPrice,\n  propertyPriceMapping,\n} from '../metadata/priceMappings';\nimport checkPropTypes from 'check-prop-types';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from '../store/rootReducer';\nimport { middleware } from '../store/store';\nimport { CLASSIC_MARINARA, REGULAR_SAUCE } from '../metadata/sauceMetadata';\nimport { REGULAR_CHEESE } from '../metadata/cheeseMetadata';\nimport { NO_CRUST_FLAVOR } from '../metadata/crustFlavorMetadata';\nimport { secureStorage } from '../shared/secureStorage';\n\n/* Utility functions used across multiple components/containers */\n\n/* calculate price of a pizza, given its size, crust, toppings and various other properties */\nexport const calculatePrice = (pizza) => {\n  const basePrice =\n    sizePriceMapping[pizza[SIZE]][pizza.priceType] +\n    crustPriceMapping[pizza[SIZE]][pizza[CRUST]];\n\n  let propertyPrices = propertyPriceMapping[pizza[SAUCE_AMOUNT]] || 0;\n  propertyPrices += propertyPriceMapping[pizza[CHEESE_AMOUNT]] || 0;\n\n  let meatsPrice = 0;\n  let veggiesPrice = 0;\n\n  if (pizza.priceType !== COMBO) {\n    meatsPrice += getToppingsPrice(pizza, MEATS, false);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, false);\n  } else {\n    meatsPrice += getToppingsPrice(pizza, MEATS, true);\n    veggiesPrice += getToppingsPrice(pizza, VEGGIES, true);\n  }\n\n  return (basePrice + meatsPrice + veggiesPrice + propertyPrices).toFixed(2);\n};\n\n/* Get price of only the toppings */\nconst getToppingsPrice = (pizza, toppingType, combo) => {\n  let toppings = pizza[toppingType];\n  let toppingsPrice = 0;\n  toppings &&\n    toppings.forEach((topping) => {\n      const comboIncludesTopping =\n        combo &&\n        toppingMapping[pizza[COMBO_NAME]][toppingType].find(\n          (comboTopping) => comboTopping === topping.topping\n        );\n\n      if (!comboIncludesTopping || !combo) {\n        if (topping.amount === EXTRA_TOPPING) {\n          toppingsPrice += extraToppingPrice;\n        } else {\n          toppingsPrice += toppingPrice;\n        }\n      } else if (comboIncludesTopping && topping.amount === EXTRA_TOPPING) {\n        toppingsPrice += extraToppingPrice - toppingPrice;\n      }\n    });\n\n  return toppingsPrice;\n};\n\n/* Calculate the sum of the price of all pizzas in cart before tax */\nexport const calculateSubTotal = (items) => {\n  let subTotal = 0;\n  items.forEach((item) => {\n    const price = calculatePrice(item.pizza);\n    subTotal += price * item.quantity;\n  });\n  return subTotal.toFixed(2);\n};\n\n/* Calculate the tax */\nexport const calculateTax = (subTotal) => {\n  return (subTotal * 0.1).toFixed(2);\n};\n\n/* Get only crust value from crust display value which includes price */\nexport const getCrust = (crustDisplayValue) => {\n  const regexp = /(.*) (\\+\\$.*)/g;\n  const match = regexp.exec(crustDisplayValue);\n  return match ? match[1] : crustDisplayValue;\n};\n\n/* Get display date */\nexport const getReadableDate = (givenDate) => {\n  const monthArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const date = new Date(givenDate);\n  const month = monthArray[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return `${month} ${day}, ${year}`;\n};\n\n/* Find an element by data-test attribute for unit tests */\nexport const findByTestAttr = (component, attr) => {\n  const wrapper = component.find(`[data-test=\"${attr}\"]`);\n  return wrapper;\n};\n\n/* Find an element by element type for unit tests */\nexport const findByElementType = (component, elementType) => {\n  const wrapper = component.find(`${elementType}`);\n  return wrapper;\n};\n\n/* Validate prop types for a component */\nexport const checkProps = (component, expectedProps) => {\n  const propsErr = checkPropTypes(\n    component.propTypes,\n    expectedProps,\n    'props',\n    component.name\n  );\n  return propsErr;\n};\n\n/* Create a test store for unit tests */\nexport const testStore = (initialState) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n  );\n  return store;\n};\n\n/* Normalize the pizza object before adding to cart.\n   Important for making sure hashes of two different \n   pizzas with the same attributes are equal */\nexport const normalizePizza = (pizza) => {\n  //If coming from pizza box, some attributes won't be set\n  if (!pizza[SAUCE]) {\n    pizza[SAUCE] = CLASSIC_MARINARA;\n  }\n  if (!pizza[SAUCE_AMOUNT]) {\n    pizza[SAUCE_AMOUNT] = REGULAR_SAUCE;\n  }\n  if (!pizza[CHEESE_AMOUNT]) {\n    pizza[CHEESE_AMOUNT] = REGULAR_CHEESE;\n  }\n  if (!pizza[CRUST_FLAVOR]) {\n    pizza[CRUST_FLAVOR] = NO_CRUST_FLAVOR;\n  }\n\n  return {\n    [CHEESE_AMOUNT]: pizza[CHEESE_AMOUNT],\n    [COMBO_NAME]: pizza[COMBO_NAME],\n    [CRUST]: pizza[CRUST],\n    [CRUST_FLAVOR]: pizza[CRUST_FLAVOR],\n    priceType: pizza.priceType,\n    [MEATS]: pizza[MEATS],\n    [SAUCE]: pizza[SAUCE],\n    [SAUCE_AMOUNT]: pizza[SAUCE_AMOUNT],\n    [SIZE]: pizza[SIZE],\n    [VEGGIES]: pizza[VEGGIES],\n  };\n};\n\nexport const getOrCreateLocalCart = () => {\n  const emptyCart = { items: {}, pizzaHashMap: {}, quantity: 0 };\n  let localCart = null;\n  try {\n    localCart = secureStorage.getItem('cart');\n  } catch (error) {\n    secureStorage.setItem('cart', emptyCart);\n    localCart = emptyCart;\n  }\n\n  if (!localCart) {\n    secureStorage.setItem('cart', emptyCart);\n    localCart = emptyCart;\n  }\n  return localCart;\n};\n","import * as actionTypes from '../cartActionTypes';\nimport axios from '../../../shared/axiosAPI';\nimport { v4 as uuidv4 } from 'uuid';\nimport hash from 'object-hash';\nimport { secureStorage } from '../../../shared/secureStorage';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\nimport { getOrCreateLocalCart } from '../../../shared/util';\n\n/* Set cart in redux store from cart in local storage */\nexport const getCartFromLocalStorage = () => {\n  return (dispatch) => {\n    let localCart = secureStorage.getItem('cart');\n    if (localCart.quantity > 0) {\n      dispatch(setCartFromLocalCart(localCart));\n    }\n    dispatch(getCartDone());\n  };\n};\n\nexport const createCart = () => {\n  return (dispatch) => {\n    return axios\n      .post('/carts')\n      .then((res) => {\n        dispatch(setCart(res.data.cart));\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.CREATE_CART));\n      });\n  };\n};\n\nexport const getCartDone = () => {\n  return {\n    type: actionTypes.GET_CART_DONE,\n  };\n};\n\nexport const getCart = () => {\n  return (dispatch) => {\n    return axios\n      .get('/carts')\n      .then((res) => {\n        if (res.data.cart) {\n          dispatch(getCartDone());\n          //Get cart from secure local storage\n          let localCart = getOrCreateLocalCart();\n\n          //If items in local cart, combine local cart with backend cart\n          if (localCart && localCart.quantity > 0) {\n            dispatch(combineCarts(res.data.cart));\n          } else {\n            dispatch(setCart(res.data.cart));\n          }\n        } else {\n          dispatch(createCart());\n        }\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.GET_CART));\n        dispatch(getCartDone());\n      });\n  };\n};\n\n/* Combine local cart with backend cart */\nexport const combineCarts = (cart) => {\n  return (dispatch, getState) => {\n    const localCart = getOrCreateLocalCart();\n\n    const cartId = cart._id;\n    return axios\n      .post(`/carts/${cartId}/items`, Object.values(localCart.items))\n      .then((res) => {\n        //Dispatch to update state with combined cart\n        dispatch({\n          type: actionTypes.ADD_TO_CART,\n          items: res.data.cart.items,\n          quantity: res.data.cart.quantity,\n          numItemsAdded: res.data.cart.quantity - localCart.quantity,\n        });\n\n        //Empty the local cart\n        const emptyCart = { items: {}, quantity: 0, pizzaHashMap: {} };\n        secureStorage.setItem('cart', emptyCart);\n      });\n  };\n};\n\n/* Just clear cart items from redux store only. \n   Different from empty cart which empties cart in backend as well */\nexport const signOutCart = () => {\n  return {\n    type: actionTypes.SIGN_OUT_CART,\n  };\n};\n\n/* If user not signed in, add to local storage cart */\nconst addToLocalCart = (item) => {\n  return (dispatch) => {\n    //Get local cart\n    let localCart = getOrCreateLocalCart();\n\n    //Hash of pizza to be added\n    let pizzaHash = hash(item.pizza);\n\n    //Local pizza hash map\n    let pizzaHashMap = localCart.pizzaHashMap;\n    let items = localCart.items;\n\n    //If pizza to be added has hash in hash map\n    if (pizzaHash in pizzaHashMap) {\n      //Update quantity of that item\n      items[pizzaHashMap[pizzaHash]].quantity += item.quantity;\n    }\n    //Otherwise, add new item to local cart\n    else {\n      const itemId = uuidv4();\n      pizzaHashMap[pizzaHash] = itemId;\n      item = { _id: itemId, ...item };\n      items[itemId] = item;\n    }\n\n    let itemsArr = Object.values(items);\n    localCart.quantity += item.quantity;\n\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to update state\n    dispatch({\n      type: actionTypes.ADD_TO_CART,\n      items: itemsArr,\n      quantity: localCart.quantity,\n      numItemsAdded: item.quantity,\n    });\n  };\n};\n\n/* Add to cart, either new item or increase quantity for already existing item */\nexport const addToCart = (cartId, pizza, quantity) => {\n  return (dispatch) => {\n    const item = { pizza, quantity };\n    if (cartId) {\n      axios\n        .post(`/carts/${cartId}/items`, [item])\n        .then((res) => {\n          dispatch({\n            type: actionTypes.ADD_TO_CART,\n            items: res.data.cart.items,\n            quantity: res.data.cart.quantity,\n            numItemsAdded: quantity,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.ADD_ITEM_TO_CART));\n        });\n    } else {\n      dispatch(addToLocalCart(item));\n    }\n  };\n};\n\n/* Set cart items and metadata in redux store */\nexport const setCart = (cart) => {\n  return {\n    type: actionTypes.SET_CART,\n    cartId: cart._id,\n    items: cart.items,\n    quantity: cart.quantity,\n  };\n};\n\n/* Set cart items and metadata in redux store */\nexport const setCartFromLocalCart = (localCart) => {\n  return {\n    type: actionTypes.SET_CART,\n    items: Object.values(localCart.items),\n    quantity: localCart.quantity,\n  };\n};\n\nexport const changeCartItemSuccess = (items, quantity) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_SUCCESS,\n    items: items,\n    quantity: quantity,\n  };\n};\n\n/* Set new item quantity and update total quantity */\nexport const changeItemQuantity = (cartId, itemId, pizza, quantity) => {\n  return (dispatch) => {\n    const quantityPatch = { quantity: quantity };\n\n    dispatch(changeCartItemStart(itemId));\n\n    //if user signed in, PUT call to change item quantity in backend cart\n    if (cartId) {\n      axios\n        .patch(`/carts/${cartId}/items/${itemId}`, quantityPatch)\n        .then((res) => {\n          const cart = res.data.cart;\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.CHANGE_ITEM_QUANTITY));\n          dispatch(changeCartItemFailed());\n        });\n    }\n    //if user not signed in, change item quantity in local storage cart\n    else {\n      dispatch(changeItemQuantityInLocalCart(itemId, quantity));\n    }\n  };\n};\n\n/* If user not signed in, change item quantity in local storage cart */\nconst changeItemQuantityInLocalCart = (itemId, quantity) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      dispatch(\n        changeCartItemSuccess(\n          Object.values(localCart.items),\n          localCart.quantity\n        )\n      );\n      return;\n    }\n\n    let items = localCart.items;\n\n    //Update total cart quantity\n    localCart.quantity -= items[itemId].quantity;\n    localCart.quantity += quantity;\n\n    //Update item quantity\n    items[itemId].quantity = quantity;\n\n    //Set back in local storage\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to update cart state\n    dispatch(changeCartItemSuccess(Object.values(items), localCart.quantity));\n  };\n};\n\n/* To set loading in UI when making change to a cart item */\nconst changeCartItemStart = (itemId) => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_START,\n    itemIdBeingChanged: itemId,\n  };\n};\n\n/* To stop loading cart item in UI if changing cart item failed */\nconst changeCartItemFailed = () => {\n  return {\n    type: actionTypes.CHANGE_CART_ITEM_FAILED,\n  };\n};\n\n/* Remove item from cart in backend if user signed in or from cart in local storage if not */\nexport const removeItem = (cartId, itemId, pizza) => {\n  return (dispatch) => {\n    dispatch(changeCartItemStart(itemId));\n\n    //If user signed in, DELETE call to remove item from backend cart\n    if (cartId) {\n      axios\n        .delete(`/carts/${cartId}/items/${itemId}`)\n        .then((res) => {\n          const cart = res.data.cart;\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionErrors.REMOVE_ITEM));\n        });\n    } else {\n      dispatch(removeItemFromLocalCart(itemId, pizza));\n    }\n  };\n};\n\n/* If user not signed in, remove item from local storage cart */\nconst removeItemFromLocalCart = (itemId, pizza) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      dispatch(setCartFromLocalCart(localCart));\n      return;\n    }\n\n    //Get new cart quantity\n    localCart.quantity -= localCart.items[itemId].quantity;\n\n    //Remove from items\n    delete localCart.items[itemId];\n    delete localCart.pizzaHashMap[hash(pizza)];\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to set cart state\n    dispatch(\n      changeCartItemSuccess(Object.values(localCart.items), localCart.quantity)\n    );\n  };\n};\n\nexport const emptyCart = (cartId) => {\n  return (dispatch) => {\n    //If user signed in, PUT call to empty backend cart\n    if (cartId) {\n      let emptyCart = {\n        items: [],\n      };\n      axios\n        .put(`/carts/${cartId}`, emptyCart)\n        .then(() => {\n          dispatch({\n            type: actionTypes.EMPTY_CART,\n          });\n        })\n        .catch(() => {\n          dispatch(setErroredAction(actionErrors.EMPTY_CART));\n        });\n    }\n    //If user not signed in, empty local storage cart\n    else {\n      let emptyCart = { items: {}, pizzaHashMap: {}, quantity: 0 };\n      secureStorage.setItem('cart', emptyCart);\n      dispatch({\n        type: actionTypes.EMPTY_CART,\n      });\n    }\n  };\n};\n\n/* Save item to cart in backend if user signed in or in local storage if not */\nexport const saveToCart = (cartId, pizza, quantity, cartQuantity, itemId) => {\n  return (dispatch) => {\n    const item = { pizza: pizza, quantity: quantity };\n    dispatch(changeCartItemStart(itemId));\n\n    //If user signed in, PUT call to make change to backend cart\n    if (cartId) {\n      axios\n        .put(`/carts/${cartId}/items/${itemId}`, item)\n        .then((res) => {\n          const cart = res.data.cart;\n          //Dispatch to set cart state\n          dispatch(changeCartItemSuccess(cart.items, cart.quantity));\n        })\n        .catch(() => {\n          dispatch(changeCartItemFailed());\n          dispatch(setErroredAction(actionErrors.SAVE_TO_CART));\n        });\n    }\n    //if user not signed in, make change to local storage cart\n    else {\n      dispatch(saveToLocalCart(itemId, item));\n    }\n  };\n};\n\n/* If user not signed in, make change to local storage cart */\nconst saveToLocalCart = (itemId, item) => {\n  return (dispatch) => {\n    let localCart = getOrCreateLocalCart();\n\n    //If for some reason cart has been deleted from local storage,\n    //reset cart\n    if (Object.keys(localCart.items).length === 0) {\n      localCart.items = { [itemId]: { _id: itemId, ...item } };\n      localCart.pizzaHashMap[hash(item.pizza)] = itemId;\n      localCart.quantity = item.quantity;\n      secureStorage.setItem('cart', localCart);\n      dispatch(\n        changeCartItemSuccess(\n          Object.values(localCart.items),\n          localCart.quantity\n        )\n      );\n      return;\n    }\n\n    //Local cart items\n    let items = localCart.items;\n\n    //Local pizza hash map\n    let pizzaHashMap = localCart.pizzaHashMap;\n\n    //Hash of pizza to be saved\n    let pizzaHash = hash(item.pizza);\n\n    //Item that needs to be updated\n    let currentItem = items[itemId];\n\n    localCart.quantity += item.quantity - items[itemId].quantity;\n\n    //If hash of pizza to be saved is in hash map\n    if (pizzaHash in pizzaHashMap) {\n      //If matching hash item's id doesn't match\n      if (pizzaHashMap[pizzaHash] !== itemId) {\n        //Then update matching hash item's quantity\n        items[pizzaHashMap[pizzaHash]].quantity += item.quantity;\n\n        delete pizzaHashMap[items[itemId].pizza];\n\n        //And delete the old item\n        delete items[itemId];\n      } else {\n        currentItem.quantity = item.quantity;\n      }\n    } else {\n      delete pizzaHashMap[hash(currentItem.pizza)];\n      items[itemId] = { _id: itemId, ...item };\n      pizzaHashMap[pizzaHash] = itemId;\n    }\n\n    //Save back to local storage\n    secureStorage.setItem('cart', localCart);\n\n    //Dispatch to set cart state\n    dispatch(changeCartItemSuccess(Object.values(items), localCart.quantity));\n  };\n};\n","import React from 'react';\nimport './Dropdown.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard dropdown selectors across entire app */\nconst Dropdown = (props) => {\n  return (\n    <select\n      value={props.value ? props.value : 1}\n      onChange={props.onChange}\n      className='dropdown'\n    >\n      {props.options.map((option) => {\n        return <option key={option}>{option}</option>;\n      })}\n    </select>\n  );\n};\n\nDropdown.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  options: PropTypes.array.isRequired,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport './PizzaBox.scss';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport Button from '../../components/UI/Button/Button';\nimport { crustMetadataMapping } from '../../metadata/crustMetadata';\nimport { sizes } from '../../metadata/sizeMetadata';\nimport { primary, secondary } from '../../components/UI/Button/Button';\nimport { calculatePrice, normalizePizza, getCrust } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* UI box container that holds an pizza and lets user customize various pizza properties.\n   Can add pizza to order and also build your own pizza from here. */\nconst PizzaBox = (props) => {\n  const handleAddToCart = () => {\n    let pizza = { ...props.pizza };\n    pizza.crust = getCrust(pizza.crust);\n    props.addToCart(props.cartId, normalizePizza(pizza), props.quantity);\n    props.resetState();\n  };\n\n  const crustOptions = Object.entries(crustMetadataMapping).map(\n    ([crust, crustMetadata]) => {\n      return (\n        crust +\n        (crustMetadata.additionalDisplay\n          ? ` ${crustMetadata.additionalDisplay}`\n          : '')\n      );\n    }\n  );\n\n  const sizeOptions = sizes;\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  let pizza = { ...props.pizza };\n  pizza.crust = getCrust(pizza.crust);\n  const price = calculatePrice(pizza);\n\n  let pizzaAdd = null;\n  let pizzaName = null;\n  let customize = null;\n  let customizeSecondary = null;\n\n  if (props.buildPizza) {\n    pizzaAdd = (\n      <Button type={primary} onClick={props.handleClickBuild}>\n        Get Started\n      </Button>\n    );\n    pizzaName = 'Build Your Own';\n    customize = <div className='empty-button'></div>;\n  } else {\n    pizzaAdd = (\n      <React.Fragment>\n        <div className='pizza-box__quantity'>\n          <Dropdown\n            onChange={props.handleChangeQuantity}\n            options={quantityOptions}\n            value={props.quantity}\n          />\n        </div>\n        <Button type={primary} onClick={handleAddToCart}>\n          Add to Order\n        </Button>\n      </React.Fragment>\n    );\n    pizzaName = props.pizzaType;\n    customize = (\n      <Button type={secondary} onClick={props.handleClickBuild}>\n        Customize\n      </Button>\n    );\n    customizeSecondary = (\n      <span\n        className='pizza-box__customize link'\n        onClick={props.handleClickBuild}\n      >\n        Customize\n      </span>\n    );\n  }\n\n  return (\n    <div className='pizza-box'>\n      <h3 className='pizza-box__name'>{pizzaName} Pizza</h3>\n      <div className='pizza-box__container'>\n        <div className='pizza-box__details'>\n          {customizeSecondary}\n\n          <h4 className='pizza-box__price'>\n            ${(props.quantity * price).toFixed(2)}\n          </h4>\n          <div className='pizza-box__options'>\n            <div className='pizza-box__crust'>\n              <Dropdown\n                options={crustOptions}\n                onChange={props.handleChangeCrust}\n                value={props.pizza.crust}\n              />\n            </div>\n            <div className='pizza-box__size'>\n              <Dropdown\n                options={sizeOptions}\n                onChange={props.handleChangeSize}\n                value={props.pizza.size}\n              />\n            </div>\n            <div className='pizza-box__add'>{pizzaAdd}</div>\n          </div>\n        </div>\n        <div className='pizza-box__right'>\n          <img\n            className='pizza-box__image'\n            src={props.imageSrc}\n            alt={props.pizzaName}\n          />\n          {customize}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPizzaBox.propTypes = {\n  priceType: PropTypes.string.isRequired,\n  pizzaType: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  pizzaName: PropTypes.string,\n};\n\nexport default PizzaBox;\n","import React, { Component } from 'react';\nimport { HAND_TOSSED } from '../metadata/crustMetadata';\nimport { LARGE } from '../metadata/sizeMetadata';\nimport { toppingMapping } from '../metadata/comboMetadata';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport { addToCart } from '../store/cart/cartActions/cartActions';\nimport { SIZE, CRUST, COMBO_NAME } from '../metadata/pizzaProperties';\nimport { normalizePizza, getCrust } from '../shared/util';\nimport PropTypes from 'prop-types';\nimport PizzaBox from '../components/PizzaBox/PizzaBox';\n\n/* Container for PizzaBox component */\nclass PizzaBoxContainer extends Component {\n  constructor(props) {\n    super(props);\n    const initialState = this.getInitialState();\n    this.state = {\n      ...initialState,\n    };\n  }\n\n  getInitialState = () => {\n    let initialState = {\n      pizza: {\n        priceType: this.props.priceType,\n        [COMBO_NAME]: this.props.pizzaType,\n        [CRUST]: HAND_TOSSED,\n        [SIZE]: LARGE,\n      },\n      quantity: 1,\n    };\n\n    if (toppingMapping[this.props.pizzaType]) {\n      initialState = {\n        ...initialState,\n        pizza: {\n          ...initialState.pizza,\n          ...toppingMapping[this.props.pizzaType],\n        },\n      };\n    }\n\n    return initialState;\n  };\n\n  resetState = () => {\n    this.setState(this.getInitialState());\n  };\n\n  handleChangeQuantity = (event) => {\n    event.persist();\n    this.setState({\n      quantity: parseInt(event.target.value),\n    });\n  };\n\n  handleChangeCrust = (event) => {\n    event.persist();\n\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [CRUST]: event.target.value,\n      },\n    });\n  };\n\n  handleChangeSize = (event) => {\n    event.persist();\n    this.setState({\n      pizza: {\n        ...this.state.pizza,\n        [SIZE]: event.target.value,\n      },\n    });\n  };\n\n  handleClickBuild = () => {\n    let pizza = { ...this.state.pizza };\n    pizza.crust = getCrust(pizza.crust);\n    this.props.initializePizzaBuilder(\n      normalizePizza(pizza),\n      this.state.quantity\n    );\n    this.resetState();\n  };\n\n  render() {\n    return (\n      <PizzaBox\n        handleClickBuild={this.handleClickBuild}\n        handleChangeSize={this.handleChangeSize}\n        handleChangeCrust={this.handleChangeCrust}\n        handleChangeQuantity={this.handleChangeQuantity}\n        resetState={this.resetState}\n        {...this.props}\n        {...this.state}\n      />\n    );\n  }\n}\n\nPizzaBoxContainer.propTypes = {\n  cartId: PropTypes.string,\n  priceType: PropTypes.string.isRequired,\n  pizzaType: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  pizzaName: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  cartId: state.cart.cartId,\n});\nexport default connect(mapStateToProps, { initializePizzaBuilder, addToCart })(\n  PizzaBoxContainer\n);\n","import React from 'react';\nimport './OrderSubmissionMessage.scss';\nimport { Link } from 'react-router-dom';\n\n/* A thank you message to be displayed after successfully submitting an order */\nconst OrderSubmission = () => {\n  return (\n    <div className='order-submission' data-test='order-submission'>\n      <h3\n        style={{ display: 'inline' }}\n        className='order-submission__thanks'\n        data-test='thanks'\n      >\n        Thank you for ordering at PizzaTime! View your{' '}\n        <Link\n          className='order-submission__orders'\n          to='/my-orders'\n          data-test='orders'\n        >\n          orders\n        </Link>\n      </h3>\n    </div>\n  );\n};\n\nexport default OrderSubmission;\n","import React from 'react';\n\n/* A confirmation message to be displayed after successfully signing out */\nconst SignedOutMessage = () => {\n  return (\n    <div className='signed-out' data-test='signed-out'>\n      <h3 style={{ display: 'inline' }}>You have signed out!</h3>\n    </div>\n  );\n};\n\nexport default SignedOutMessage;\n","import React from 'react';\n\n/* A confirmation message to be displayed after successfully signing out */\nconst SignedUpMessage = () => {\n  return (\n    <div className='signed-up' data-test='signed-up'>\n      <h3 style={{ display: 'inline' }}>\n        You have successfully created an account!\n      </h3>\n    </div>\n  );\n};\n\nexport default SignedUpMessage;\n","import React from 'react';\nimport './Message.scss';\nimport PropTypes from 'prop-types';\n\n/* Standard message alert to the user component */\nconst Message = (props) => {\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <div className='message'>{props.children}</div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default Message;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniPizzaImg from '../../../assets/images/pizza_pepperoni.jpg';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  PEPPERONI_PIZZA,\n  MEAT_LOVER,\n  SUPREME,\n} from '../../../metadata/comboMetadata';\nimport OrderSubmission from '../../Messages/OrderSubmissionMessage/OrderSubmissionMessage';\nimport SignedOutMessage from '../../Messages/SignedOutMessage/SignedOutMessage';\nimport SignedUpMessage from '../../Messages/SignedUpMessage/SignedUpMessage';\nimport Message from '../../UI/Message/Message';\n\n/* Displays popular pizzas */\nconst Home = (props) => {\n  let message = null;\n  if (props.location.fromCheckout) {\n    message = (\n      <Message>\n        <OrderSubmission />\n      </Message>\n    );\n  } else if (props.location.fromSignOut) {\n    message = (\n      <Message>\n        <SignedOutMessage />\n      </Message>\n    );\n  } else if (props.location.fromSignUp) {\n    message = (\n      <Message>\n        <SignedUpMessage />\n      </Message>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {message}\n      <div className='pizza-grid'>\n        <h1 className='pizza-grid__title'>Popular</h1>\n        <div className='pizza-grid__grid'>\n          <PizzaBoxContainer\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            buildPizza\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={CHEESE}\n            priceType={REGULAR}\n            imageSrc={CheesePizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={PEPPERONI_PIZZA}\n            priceType={REGULAR}\n            imageSrc={PepperoniPizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={MEAT_LOVER}\n            priceType={COMBO}\n            imageSrc={MeatLoversPizzaImg}\n          />\n          <PizzaBoxContainer\n            pizzaType={SUPREME}\n            priceType={COMBO}\n            imageSrc={SupremePizzaImg}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport PepperoniLoversPizzaImg from '../../../assets/images/pizza_Pepperoni_Lovers.png';\nimport MeatLoversPizzaImg from '../../../assets/images/pizza_meat_lovers.png';\nimport SupremePizzaImg from '../../../assets/images/pizza_supreme.png';\nimport { REGULAR, COMBO } from '../../../metadata/comboMetadata';\nimport {\n  CHEESE,\n  MEAT_LOVER,\n  SUPREME,\n  SUPER_SUPREME,\n  PEPPERONI_LOVER,\n} from '../../../metadata/comboMetadata';\n\n/* Displays various types of meat pizzas */\nconst Meats = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Meats</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={MEAT_LOVER}\n          priceType={COMBO}\n          imageSrc={MeatLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={PEPPERONI_LOVER}\n          priceType={COMBO}\n          imageSrc={PepperoniLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={SUPER_SUPREME}\n          priceType={COMBO}\n          imageSrc={SupremePizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Meats;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport VeggieLoversPizzaImg from '../../../assets/images/pizza_Veggie_Lovers.png';\nimport UltimateCheeseLoverPizzaImg from '../../../assets/images/pizza_Ultimate_Cheese_Lovers.png';\nimport {\n  REGULAR,\n  COMBO,\n  VEGGIE_LOVER,\n  ULTIMATE_CHEESE_LOVER,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of veggy pizzas */\nconst Veggies = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Veggies</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={VEGGIE_LOVER}\n          priceType={COMBO}\n          imageSrc={VeggieLoversPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={ULTIMATE_CHEESE_LOVER}\n          priceType={COMBO}\n          imageSrc={UltimateCheeseLoverPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Veggies;\n","import React from 'react';\nimport PizzaBoxContainer from '../../../containers/PizzaBoxContainer';\nimport CheesePizzaImg from '../../../assets/images/pizza_cheese.jpg';\nimport HawaiianChickenPizzaImg from '../../../assets/images/pizza_Hawaiian_Chicken.png';\nimport ChickenBaconParmesanImg from '../../../assets/images/pizza_Chicken_Bacon_Parmesan.png';\nimport BBQChickenPizzaImg from '../../../assets/images/pizza_Backyard_BBQ_Chicken.png';\nimport BuffaloChickenPizzaImg from '../../../assets/images/pizza_Buffalo_Chicken.png';\nimport {\n  REGULAR,\n  COMBO,\n  HAWAIIAN_CHICKEN,\n  CHICKEN_BACON_PARMESAN,\n  BBQ_CHICKEN,\n  BUFFALO_CHICKEN,\n} from '../../../metadata/comboMetadata';\nimport { CHEESE } from '../../../metadata/comboMetadata';\n\n/* Displays various types of chicken pizza */\nconst Chicken = () => {\n  return (\n    <div className='pizza-grid'>\n      <h1 className='pizza-grid__title'>Chicken</h1>\n      <div className='pizza-grid__grid'>\n        <PizzaBoxContainer\n          pizzaType={CHEESE}\n          priceType={REGULAR}\n          buildPizza\n          imageSrc={CheesePizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={HAWAIIAN_CHICKEN}\n          priceType={COMBO}\n          imageSrc={HawaiianChickenPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={CHICKEN_BACON_PARMESAN}\n          priceType={COMBO}\n          imageSrc={ChickenBaconParmesanImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={BBQ_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BBQChickenPizzaImg}\n        />\n        <PizzaBoxContainer\n          pizzaType={BUFFALO_CHICKEN}\n          priceType={COMBO}\n          imageSrc={BuffaloChickenPizzaImg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chicken;\n","import React, { Component } from 'react';\nimport Cheese from '../../assets/images/cheese_mozz_ML.png';\nimport './PizzaPreview.scss';\nimport { crustMetadataMapping } from '../../metadata/crustMetadata';\nimport { meatImageMapping } from '../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../metadata/veggiesMetadata';\nimport { crustFlavorImageMapping } from '../../metadata/crustFlavorMetadata';\nimport {\n  CRUST,\n  CRUST_FLAVOR,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image with all selected toppings and crust options */\nclass PizzaPreview extends Component {\n  render() {\n    return (\n      <div\n        className={this.props.small ? 'pizza-preview--small' : 'pizza-preview'}\n      >\n        <img\n          className='pizza-preview__property'\n          src={crustMetadataMapping[this.props.pizza[CRUST]].preview}\n          alt={this.props.pizza[CRUST]}\n        />\n        {this.props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR ? (\n          <img\n            className='pizza-preview__property'\n            src={\n              crustFlavorImageMapping[this.props.pizza[CRUST_FLAVOR]][\n                this.props.pizza[CRUST]\n              ].preview\n            }\n            alt={this.props.pizza[CRUST_FLAVOR]}\n          />\n        ) : null}\n        <img className='pizza-preview__property' src={Cheese} alt='Cheese' />\n        {this.props.pizza[MEATS] &&\n          this.props.pizza[MEATS].map((meat) => {\n            let src = null;\n            if (meat.amount === EXTRA_TOPPING) {\n              src = meatImageMapping[meat.toppingName].previewExtra;\n            } else {\n              src = meatImageMapping[meat.toppingName].preview;\n            }\n\n            let imgClassNames = ['pizza-preview__property'];\n            if (meat.portion === LEFT_HALF) {\n              imgClassNames.push('pizza-preview__property--left');\n            } else if (meat.portion === RIGHT_HALF) {\n              imgClassNames.push('pizza-preview__property--right');\n            }\n            return (\n              <img\n                key={meat.toppingName}\n                className={imgClassNames.join(' ')}\n                src={src}\n                alt={meat.toppingName}\n              />\n            );\n          })}\n        {this.props.pizza[VEGGIES] &&\n          this.props.pizza[VEGGIES].map((veggy) => {\n            let src = null;\n            if (veggy.amount === EXTRA_TOPPING) {\n              src = veggiesImageMapping[veggy.toppingName].previewExtra;\n            } else {\n              src = veggiesImageMapping[veggy.toppingName].preview;\n            }\n\n            let imgClassNames = ['pizza-preview__property'];\n            if (veggy.portion === LEFT_HALF) {\n              imgClassNames.push('pizza-preview__property--left');\n            } else if (veggy.portion === RIGHT_HALF) {\n              imgClassNames.push('pizza-preview__property--right');\n            }\n            return (\n              <img\n                key={veggy.toppingName}\n                className={imgClassNames.join(' ')}\n                src={src}\n                alt={veggy.toppingName}\n              />\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nPizzaPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  small: PropTypes.bool,\n};\n\nexport default PizzaPreview;\n","import React, { Component } from 'react';\nimport './PizzaBuilderPreview.scss';\nimport PizzaPreview from '../../PizzaPreview/PizzaPreview';\nimport PropTypes from 'prop-types';\n\n/* Pizza preview image section of the pizza builder */\nclass PizzaBuilderPreview extends Component {\n  shouldComponentUpdate(prevProps) {\n    if (this.props.pizza !== prevProps.pizza) {\n      return true;\n    }\n    return false;\n  }\n  render() {\n    return (\n      <div className='pizza-builder-preview'>\n        <h4 className='builder-section__title'>Preview</h4>\n        <div className='pizza-builder-preview__preview'>\n          <PizzaPreview pizza={this.props.pizza} />\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaBuilderPreview.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default PizzaBuilderPreview;\n","import React from 'react';\nimport './PizzaDescription.scss';\nimport { NO_CRUST_FLAVOR } from '../../metadata/crustFlavorMetadata';\nimport {\n  SIZE,\n  CRUST,\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n  CRUST_FLAVOR,\n  COMBO_NAME,\n  MEATS,\n  VEGGIES,\n  EXTRA_TOPPING,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../metadata/pizzaProperties';\nimport { NO_CHEESE } from '../../metadata/cheeseMetadata';\nimport { NO_SAUCE } from '../../metadata/sauceMetadata';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Description of pizza, including size, toppings and other descriptives */\nconst PizzaDescription = (props) => {\n  let sauce = `${props.pizza[SAUCE_AMOUNT]} ${props.pizza[SAUCE]}`;\n  if (props.pizza[SAUCE_AMOUNT] === NO_SAUCE) {\n    sauce = 'No';\n  }\n\n  let cheeseAmount = props.pizza[CHEESE_AMOUNT];\n  if (props.pizza[CHEESE_AMOUNT] === NO_CHEESE) {\n    cheeseAmount = 'No';\n  }\n\n  let crustFlavor = null;\n  if (props.pizza[CRUST_FLAVOR] !== NO_CRUST_FLAVOR) {\n    crustFlavor = <span>, {props.pizza[CRUST_FLAVOR]} Crust Flavor</span>;\n  }\n\n  const getToppingDescriptions = (toppings) => {\n    let toppingDescriptions = [];\n    toppings.forEach((topping) => {\n      let toppingDescription = '';\n      if (topping.portion === LEFT_HALF) {\n        toppingDescription += 'Left Half ';\n      } else if (topping.portion === RIGHT_HALF) {\n        toppingDescription += 'Right Half ';\n      }\n\n      if (topping.amount === EXTRA_TOPPING) {\n        toppingDescription += 'Extra ';\n      }\n      toppingDescriptions.push(toppingDescription + topping.toppingName);\n    });\n\n    return toppingDescriptions;\n  };\n\n  let meats = props.pizza[MEATS];\n  let veggies = props.pizza[VEGGIES];\n\n  let toppings = [\n    ...getToppingDescriptions(meats),\n    ...getToppingDescriptions(veggies),\n  ];\n\n  if (toppings.length === 0) {\n    toppings = null;\n  } else {\n    toppings = (\n      <div className='description__toppings'>\n        <h3>Toppings: </h3>\n        <span>{toppings.join(', ')}</span>\n      </div>\n    );\n  }\n\n  const singlePrice = calculatePrice(props.pizza);\n  let overallPrice = (singlePrice * props.quantity).toFixed(2);\n  let quantity = null;\n  let pizzaText = 'Pizza';\n\n  if (props.cart) {\n    overallPrice = (\n      <h2 className='description__price--cart'>${overallPrice}</h2>\n    );\n  } else if (props.order) {\n    overallPrice = (\n      <h3 className='description__price--order'>${overallPrice}</h3>\n    );\n    quantity = `${props.quantity} `;\n    if (props.quantity > 1) {\n      pizzaText = 'Pizzas';\n    }\n  } else {\n    overallPrice = <h2 className='description__price'>${overallPrice}</h2>;\n  }\n\n  return (\n    <div className='description'>\n      <div className='description__title'>\n        <div className='description__pizza'>\n          <h2 className='description__pizza-title'>\n            {quantity} {props.pizza[SIZE]} {props.pizza[CRUST]}{' '}\n            {props.pizza[COMBO_NAME]} {pizzaText}\n          </h2>\n        </div>\n        {overallPrice}\n      </div>\n      <div className='description__details'>\n        <span>{sauce} Sauce, </span>\n        <span>{cheeseAmount} Cheese</span>\n        {crustFlavor}\n        {toppings}\n      </div>\n    </div>\n  );\n};\n\nPizzaDescription.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n  cart: PropTypes.bool,\n  order: PropTypes.bool,\n};\n\nexport default PizzaDescription;\n","import React, { Component } from 'react';\nimport Dropdown from '../../UI/Dropdown/Dropdown';\nimport Button, { primary } from '../../UI/Button/Button';\nimport PizzaDescription from '../../PizzaDescription/PizzaDescription';\nimport './PizzaDetails.scss';\nimport { calculatePrice } from '../../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shows pizza description, as well as options to change quantity and add/save to cart */\nclass PizzaDetails extends Component {\n  state = {\n    quantity: this.props.quantity,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.quantity !== nextProps.quantity ||\n      this.props.pizza !== nextProps.pizza ||\n      this.state.quantity !== nextState.quantity\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChangeQuantity = (event) => {\n    this.setState({ quantity: parseInt(event.target.value) });\n  };\n\n  render() {\n    const price = calculatePrice(this.props.pizza, true);\n\n    let save = null;\n    if (this.props.itemId) {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.saveToCart(this.state.quantity)}\n        >\n          Save Changes\n        </Button>\n      );\n    } else {\n      save = (\n        <Button\n          type={primary}\n          onClick={() => this.props.addToCart(this.state.quantity)}\n        >\n          Add to Cart\n        </Button>\n      );\n    }\n\n    return (\n      <div className='pizza-details'>\n        <h3 className='builder-title'>My Pizza</h3>\n        <div className='pizza-details__details'>\n          <div className='pizza-details__description'>\n            <PizzaDescription\n              quantity={this.state.quantity}\n              pizza={this.props.pizza}\n            />\n          </div>\n          <div className='pizza-details__options'>\n            <h2 className='pizza-details__price'>\n              ${(price * this.state.quantity).toFixed(2)}\n            </h2>\n            <div className='pizza-details__quantity'>\n              <Dropdown\n                className='item__size'\n                options={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n                value={this.state.quantity}\n                onChange={this.handleChangeQuantity}\n              />\n            </div>\n            <div className='pizza-details__save'>{save}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPizzaDetails.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n};\n\nexport default PizzaDetails;\n","import React, { useEffect } from 'react';\nimport './PizzaBuilderProgress.scss';\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS,\n} from '../../../containers/PizzaBuilderContainer';\nimport PropTypes from 'prop-types';\n\n/* Shows progress of steps in the pizza builder */\nconst PizzaBuilderProgress = (props) => {\n  useEffect(() => {}, [props.stage]);\n  return (\n    <div className='progress'>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === TOPPINGS\n            ? 'progress__button progress__button--toppings progress__button--selected'\n            : 'progress__button progress__button--toppings'\n        }\n        value={TOPPINGS}\n      >\n        Toppings\n      </button>\n      <button\n        onClick={props.onClick}\n        className={\n          props.stage === CHEESE_SAUCE\n            ? 'progress__button progress__button--cheese-sauce progress__button--selected'\n            : 'progress__button progress__button--cheese-sauce'\n        }\n        value={CHEESE_SAUCE}\n      >\n        Cheese &amp; Sauce\n      </button>\n      <button\n        onClick={props.onClick}\n        className='progress__button progress__button--size-crust'\n        value={SIZE_CRUST}\n      >\n        Size &amp; Crust\n      </button>\n    </div>\n  );\n};\n\nPizzaBuilderProgress.propTypes = {\n  stage: PropTypes.oneOf(['SIZE_CRUST', 'CHEESE_SAUCE', 'TOPPINGS']).isRequired,\n};\n\nexport default PizzaBuilderProgress;\n","import React from 'react';\nimport './ImageOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as images in the pizza builder */\nconst ImageOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {Object.keys(props.imageMapping).map((option) => {\n        const selected = props.itemSelected === option;\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className='option'\n            data-value={option}\n          >\n            {selected ? <FaCheckCircle className='option__checkmark' /> : null}\n            <img\n              className='option__img'\n              src={props.imageMapping[option].icon}\n              alt={option}\n            />\n            <div\n              className={\n                selected\n                  ? 'option__name option__name--selected'\n                  : 'option__name'\n              }\n            >\n              {option} {additionalDisplay}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nImageOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ImageOptions;\n","import React from 'react';\nimport './ButtonOptions.scss';\nimport PropTypes from 'prop-types';\n\n/* Interactable options to be displayed as buttons in the pizza builder */\nconst ButtonOptions = (props) => {\n  return (\n    <div className='builder-options'>\n      {props.selectionOptions.map((option) => {\n        let additionalDisplay = null;\n        if (props.selectionMetadata && props.selectionMetadata[option]) {\n          additionalDisplay = props.selectionMetadata[option].additionalDisplay;\n        }\n        return (\n          <div\n            key={option}\n            onClick={props.onClick}\n            className={\n              props.itemSelected === option\n                ? 'button-option button-option--selected'\n                : 'button-option'\n            }\n            data-value={option}\n          >\n            {option} {additionalDisplay}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nButtonOptions.propTypes = {\n  selectionOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemSelected: PropTypes.string.isRequired,\n  selectionMetadata: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default ButtonOptions;\n","import React, { Component } from 'react';\nimport {\n  crustTypes,\n  crustMetadataMapping,\n} from '../../../../metadata/crustMetadata';\nimport {\n  crust_flavors,\n  crustFlavorImageMapping,\n} from '../../../../metadata/crustFlavorMetadata';\nimport { sizes } from '../../../../metadata/sizeMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SIZE,\n  CRUST,\n  CRUST_FLAVOR,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with size/crust options */\nclass SizeCrustBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Size</h4>\n          <ButtonOptions\n            selectionOptions={sizes}\n            itemSelected={this.props.pizza[SIZE]}\n            onClick={(e) => this.props.onClick(e, SIZE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust</h4>\n          <ImageOptions\n            selectionMetadata={crustMetadataMapping}\n            selectionOptions={crustTypes}\n            itemSelected={this.props.pizza[CRUST]}\n            imageMapping={crustMetadataMapping}\n            onClick={(e) => this.props.onClick(e, CRUST)}\n          />\n        </div>\n\n        <div className='builder-section'>\n          <h4 className='builder-section__title'>Crust Flavor</h4>\n          <ImageOptions\n            selectionOptions={crust_flavors}\n            itemSelected={this.props.pizza[CRUST_FLAVOR]}\n            imageMapping={crustFlavorImageMapping}\n            onClick={(e) => this.props.onClick(e, CRUST_FLAVOR)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSizeCrustBuilder.proptTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default SizeCrustBuilder;\n","import React, { Component } from 'react';\nimport {\n  cheeseAmounts,\n  cheeseAmountMetadataMapping,\n} from '../../../../metadata/cheeseMetadata';\nimport {\n  sauceImageMapping,\n  sauceAmounts,\n  sauceAmountMetadataMapping,\n} from '../../../../metadata/sauceMetadata';\nimport ImageOptions from '../../BuilderOptions/ImageOptions/ImageOptions';\nimport ButtonOptions from '../../BuilderOptions/ButtonOptions/ButtonOptions';\nimport {\n  SAUCE,\n  SAUCE_AMOUNT,\n  CHEESE_AMOUNT,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with cheese/sauce options */\nclass CheeseSauceBuilder extends Component {\n  render() {\n    return (\n      <div className='builder'>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Sauce</h2>\n          <ImageOptions\n            itemSelected={this.props.pizza[SAUCE]}\n            imageMapping={sauceImageMapping}\n            onClick={(e) => this.props.onClick(e, SAUCE)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Sauce</h2>\n          <ButtonOptions\n            selectionMetadata={sauceAmountMetadataMapping}\n            selectionOptions={sauceAmounts}\n            itemSelected={this.props.pizza[SAUCE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, SAUCE_AMOUNT)}\n          />\n        </div>\n        <div className='builder-section'>\n          <h2 className='builder-section__title'>Amount of Cheese</h2>\n          <ButtonOptions\n            selectionMetadata={cheeseAmountMetadataMapping}\n            selectionOptions={cheeseAmounts}\n            itemSelected={this.props.pizza[CHEESE_AMOUNT]}\n            onClick={(e) => this.props.onClick(e, CHEESE_AMOUNT)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCheeseSauceBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default CheeseSauceBuilder;\n","import React from 'react';\nimport './ToppingOptions.scss';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport {\n  EXTRA_TOPPING,\n  REGULAR_TOPPING,\n  WHOLE,\n  LEFT_HALF,\n  RIGHT_HALF,\n} from '../../../../metadata/pizzaProperties';\nimport PropTypes from 'prop-types';\n\n/* Interactable topping options */\n\nconst ToppingOptions = (props) => {\n  const onClick = (event) => {\n    event.stopPropagation();\n    props.onClick(event);\n  };\n\n  const onClickAmount = (event) => {\n    event.stopPropagation();\n    props.onClickAmount(event);\n  };\n\n  const onClickPortion = (event) => {\n    event.stopPropagation();\n    props.onClickPortion(event);\n  };\n\n  return (\n    <div className='builder-list'>\n      {Object.keys(props.imageMapping).map((topping) => {\n        const selection = props.itemsSelected.find(\n          (itemSelected) => itemSelected.toppingName === topping\n        );\n        let checkMark = null;\n        let toppingOptionClasses = ['topping-option'];\n        let amountOptions = null;\n        let portionOptions = null;\n        toppingOptionClasses.push('topping-option--selected');\n        amountOptions = (\n          <div className='topping-option__amount'>\n            <div\n              className={\n                selection && selection.amount === EXTRA_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={EXTRA_TOPPING}\n              onClick={onClickAmount}\n            >\n              Extra\n            </div>\n            <div\n              className={\n                selection && selection.amount === REGULAR_TOPPING\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-topping={topping}\n              data-value={REGULAR_TOPPING}\n              onClick={onClickAmount}\n            >\n              Regular\n            </div>\n            <div\n              className={\n                !selection\n                  ? 'amount-option amount-option--selected'\n                  : 'amount-option'\n              }\n              data-value={topping}\n              onClick={onClick}\n            >\n              None\n            </div>\n          </div>\n        );\n        if (selection) {\n          checkMark = <FaCheckCircle className='topping-option__checkmark' />;\n\n          let wholeSelection = selection.portion === WHOLE;\n          let leftSelection = selection.portion === LEFT_HALF;\n          let rightSelection = selection.portion === RIGHT_HALF;\n          portionOptions = (\n            <div className='topping-option__portion'>\n              <div\n                className={\n                  wholeSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={WHOLE}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    wholeSelection\n                      ? 'portion-option__whole portion-option__whole--selected'\n                      : 'portion-option__whole'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  leftSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={LEFT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    leftSelection\n                      ? 'portion-option__left portion-option__left--selected'\n                      : 'portion-option__left'\n                  }\n                ></div>\n              </div>\n              <div\n                className={\n                  rightSelection\n                    ? 'portion-option portion-option--selected'\n                    : 'portion-option'\n                }\n                data-topping={topping}\n                data-value={RIGHT_HALF}\n                onClick={onClickPortion}\n              >\n                <div\n                  className={\n                    rightSelection\n                      ? 'portion-option__right portion-option__right--selected'\n                      : 'portion-option__right'\n                  }\n                ></div>\n              </div>\n            </div>\n          );\n        }\n\n        return (\n          <div\n            key={topping}\n            onClick={props.onClick}\n            className={toppingOptionClasses.join(' ')}\n            data-value={topping}\n          >\n            <div\n              className='topping-option__img-selection'\n              data-value={topping}\n              onClick={onClick}\n            >\n              {checkMark}\n              <img\n                className='topping-option__img'\n                src={props.imageMapping[topping].icon}\n                alt={topping}\n              />\n            </div>\n            <div className='topping-option__details'>\n              <span className='topping-option__name'>{topping}</span>\n              <div\n                className='topping-option__amount-portion'\n                onClick={(e) => e.stopPropagation()}\n              >\n                {amountOptions}\n                {portionOptions}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToppingOptions.propTypes = {\n  imageMapping: PropTypes.objectOf(PropTypes.object).isRequired,\n  itemSelected: PropTypes.string,\n};\n\nexport default ToppingOptions;\n","import React, { Component } from 'react';\nimport './OptionsButton.scss';\nimport Button, { tertiary } from '../Button/Button';\nimport PropTypes from 'prop-types';\n\n/* Standard single component with one or more button options */\nclass OptionsButton extends Component {\n  state = {};\n\n  handleButtonClick = (option) => {\n    option.onClick();\n  };\n\n  render() {\n    return (\n      <div className='optionsButton'>\n        {this.props.options.map((option) => {\n          let button = null;\n          if (this.props.selectedOption === option.optionName) {\n            button = (\n              <Button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                type={tertiary}\n              >\n                {option.displayName}\n              </Button>\n            );\n          } else {\n            button = (\n              <button\n                key={option.optionName}\n                onClick={() => this.handleButtonClick(option)}\n                className='optionsButton__option'\n              >\n                {option.displayName}\n              </button>\n            );\n          }\n          return button;\n        })}\n      </div>\n    );\n  }\n}\n\nOptionsButton.propTypes = {\n  options: PropTypes.array.isRequired,\n};\n\nexport default OptionsButton;\n","import React, { Component } from 'react';\nimport './ToppingsBuilder.scss';\nimport ToppingOptions from '../../BuilderOptions/ToppingOptions/ToppingOptions';\nimport { meatImageMapping } from '../../../../metadata/meatMetadata';\nimport { veggiesImageMapping } from '../../../../metadata/veggiesMetadata';\nimport { MEATS, VEGGIES } from '../../../../metadata/pizzaProperties';\nimport OptionsButton from '../../../UI/OptionsButton/OptionsButton';\nimport PropTypes from 'prop-types';\n\n/* Pizza builder section with topping options */\nclass ToppingsBuilder extends Component {\n  state = {\n    stage: this.props.toppingType || MEATS,\n  };\n\n  handleClickVeggies = () => {\n    this.setState({ stage: VEGGIES });\n  };\n\n  handleClickMeats = () => {\n    this.setState({ stage: MEATS });\n  };\n\n  render() {\n    let toppingsBuilder = null;\n    if (this.state.stage === MEATS) {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, MEATS)}\n            onClickAmount={(e) => this.props.onClickAmount(e, MEATS)}\n            onClickPortion={(e) => this.props.onClickPortion(e, MEATS)}\n            imageMapping={meatImageMapping}\n            itemsSelected={this.props.pizza[MEATS]}\n          />\n        </React.Fragment>\n      );\n    } else {\n      toppingsBuilder = (\n        <React.Fragment>\n          <ToppingOptions\n            onClick={(e) => this.props.onClick(e, VEGGIES)}\n            onClickAmount={(e) => this.props.onClickAmount(e, VEGGIES)}\n            onClickPortion={(e) => this.props.onClickPortion(e, VEGGIES)}\n            imageMapping={veggiesImageMapping}\n            itemsSelected={this.props.pizza[VEGGIES]}\n          />\n        </React.Fragment>\n      );\n    }\n\n    const options = [\n      {\n        optionName: MEATS,\n        displayName: 'Meats',\n        onClick: this.handleClickMeats,\n      },\n      {\n        optionName: VEGGIES,\n        displayName: 'Veggies',\n        onClick: this.handleClickVeggies,\n      },\n    ];\n    return (\n      <div className='builder'>\n        <div className='builder__topping-type'>\n          <OptionsButton selectedOption={this.state.stage} options={options} />\n        </div>\n        <div className='builder__topping'></div>\n        {toppingsBuilder}\n      </div>\n    );\n  }\n}\n\nToppingsBuilder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n};\n\nexport default ToppingsBuilder;\n","import React from 'react';\nimport './PizzaBuilder.scss';\nimport PizzaBuilderPreview from './PizzaBuilderPreview/PizzaBuilderPreview';\nimport PizzaDetails from './PizzaDetails/PizzaDetails';\nimport PizzaBuilderProgress from './PizzaBuilderProgress/PizzaBuilderProgress';\nimport Modal from '../../components/UI/Modal/Modal';\nimport SizeCrustBuilder from '../../components/PizzaBuilder/Builders/SizeCrustBuilder/SizeCrustBuilder';\nimport CheeseSauceBuilder from '../../components/PizzaBuilder/Builders/CheeseSauceBuilder/CheeseSauceBuilder';\nimport ToppingsBuilder from '../../components/PizzaBuilder/Builders/ToppingsBuilder/ToppingsBuilder';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport PropTypes from 'prop-types';\nimport { normalizePizza } from '../../shared/util';\nimport {\n  SIZE_CRUST,\n  CHEESE_SAUCE,\n  TOPPINGS,\n} from '../../containers/PizzaBuilderContainer';\n\n/* All controls for building your own pizza */\nconst PizzaBuilder = (props) => {\n  /* Set provided value on given property on current pizza */\n  const handleClickProperty = (event, property) => {\n    props.setProperty(property, event.currentTarget.dataset.value);\n  };\n\n  /* Toggle given topping on current pizza */\n  const handleClickTopping = (event, property) => {\n    props.toggleTopping(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  const handleClickAmount = (event, property) => {\n    props.setToppingAmount(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  const handleClickPortion = (event, property) => {\n    props.setToppingPortion(\n      props.pizza,\n      property,\n      event.currentTarget.dataset.topping,\n      event.currentTarget.dataset.value\n    );\n  };\n\n  /* Add current pizza to cart and close pizza builder */\n  const handleAddToCart = (quantity) => {\n    props.addToCart(props.cartId, normalizePizza(props.pizza), quantity);\n    props.handleCloseBuilder();\n  };\n\n  /* Save current pizza to cart and close pizza builder */\n  const handleSaveToCart = (quantity) => {\n    props.saveToCart(\n      props.cartId,\n      normalizePizza(props.pizza),\n      quantity,\n      props.cartQuantity,\n      props.itemId\n    );\n    props.handleCloseBuilder();\n  };\n\n  let builder = null;\n  let back = null;\n  let next = null;\n\n  /* helper function that returns button that moves\n       pizza builder to specified stage */\n  const getActionButton = (stage, buttonName) => {\n    return (\n      <div className='builder-action__step'>\n        <Button type={primary} onClick={() => props.handleClickAction(stage)}>\n          {buttonName}\n        </Button>\n      </div>\n    );\n  };\n\n  /* set SizeCrustBuilder for SIZE_CRUST stage\n       and appopriate next button */\n  if (props.stage === SIZE_CRUST) {\n    builder = (\n      <SizeCrustBuilder pizza={props.pizza} onClick={handleClickProperty} />\n    );\n    next = getActionButton(CHEESE_SAUCE, 'Next');\n  } else if (props.stage === CHEESE_SAUCE) {\n    /* set CheeseSauceBuilder for CHEESE_SAUCE stage\n       and appropriate back/next buttons */\n    builder = (\n      <CheeseSauceBuilder pizza={props.pizza} onClick={handleClickProperty} />\n    );\n    back = getActionButton(SIZE_CRUST, 'Back');\n    next = getActionButton(TOPPINGS, 'Next');\n  } else if (props.stage === TOPPINGS) {\n    /* set ToppingsBuilder for TOPPINGS stage\n       and appropriate back button */\n\n    builder = (\n      <ToppingsBuilder\n        pizza={props.pizza}\n        onClick={handleClickTopping}\n        onClickAmount={handleClickAmount}\n        onClickPortion={handleClickPortion}\n      />\n    );\n    back = getActionButton(CHEESE_SAUCE, 'Back');\n  }\n\n  let totalBuilder = null;\n  if (props.showPizzaBuilder) {\n    totalBuilder = (\n      <div className='totalBuilder'>\n        <div className='totalBuilder__mypizza'>\n          <div className='totalBuilder__details'>\n            <PizzaDetails\n              addToCart={handleAddToCart}\n              saveToCart={handleSaveToCart}\n              pizza={props.pizza}\n              quantity={props.quantity}\n              itemId={props.itemId}\n            />\n          </div>\n          <div className='totalBuilder__preview'>\n            <PizzaBuilderPreview pizza={props.pizza} />\n          </div>\n        </div>\n        <div className='totalBuilder__builder'>\n          <h3 className='builder-title'>Pizza Builder</h3>\n          <div className='builder-progress'>\n            <PizzaBuilderProgress\n              stage={props.stage}\n              onClick={props.handleClickStage}\n            />\n          </div>\n          {builder}\n          <div className='builder-action'>\n            {back}\n            {next}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal show={props.showPizzaBuilder} modalClosed={props.handleCloseBuilder}>\n      {totalBuilder}\n    </Modal>\n  );\n};\n\nPizzaBuilder.propTypes = {\n  itemId: PropTypes.string,\n  pizza: PropTypes.object,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  showPizzaBuilder: PropTypes.bool,\n};\n\nexport default PizzaBuilder;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart, saveToCart } from '../store/cart/cartActions/cartActions';\nimport {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n} from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport PropTypes from 'prop-types';\nimport PizzaBuilder from '../components/PizzaBuilder/PizzaBuilder';\n\n/* Stages that are possible for pizza builder.\n   Set in state. */\nexport const SIZE_CRUST = 'SIZE_CRUST';\nexport const CHEESE_SAUCE = 'CHEESE_SAUCE';\nexport const TOPPINGS = 'TOPPINGS';\n\n/* Main container for entire pizza builder */\nclass PizzaBuilderContainer extends Component {\n  state = {\n    stage: SIZE_CRUST,\n  };\n\n  /* Set current stage of pizza builder based on \n    PizzaBuilderProgres component */\n  handleClickStage = (event) => {\n    this.setState({ stage: event.target.value });\n  };\n\n  /* Set current stage of pizza builder based on\n     Back/Next buttons */\n  handleClickAction = (stage) => {\n    this.setState({ stage: stage });\n  };\n\n  /* Reset to first stage and close pizza builder */\n  handleCloseBuilder = () => {\n    this.setState({ stage: SIZE_CRUST });\n    this.props.closePizzaBuilder();\n  };\n\n  render() {\n    return (\n      <PizzaBuilder\n        stage={this.state.stage}\n        handleClickAction={this.handleClickAction}\n        handleClickStage={this.handleClickStage}\n        handleCloseBuilder={this.handleCloseBuilder}\n        {...this.props}\n      />\n    );\n  }\n}\n\nPizzaBuilderContainer.propTypes = {\n  cartId: PropTypes.string,\n  itemId: PropTypes.string,\n  pizza: PropTypes.object,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  cartQuantity: PropTypes.number,\n  showPizzaBuilder: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  cartId: state.cart.cartId,\n  itemId: state.pizzaBuilder.itemId,\n  pizza: state.pizzaBuilder.pizza,\n  quantity: state.pizzaBuilder.quantity,\n  cartQuantity: state.cart.quantity,\n  showPizzaBuilder: state.pizzaBuilder.showPizzaBuilder,\n});\n\nexport default connect(mapStateToProps, {\n  closePizzaBuilder,\n  setProperty,\n  toggleTopping,\n  setToppingAmount,\n  setToppingPortion,\n  addToCart,\n  saveToCart,\n})(PizzaBuilderContainer);\n","import React from 'react';\nimport './CartItem.scss';\nimport PizzaDescription from '../../components/PizzaDescription/PizzaDescription';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport PizzaPreview from '../../components/PizzaPreview/PizzaPreview';\nimport { SyncLoader } from 'react-spinners';\nimport { isEqual } from 'lodash';\nimport { calculatePrice } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Single cart item with pizza description, price, quantity and edit/remove options */\nconst CartItem = (props) => {\n  const quantityOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  /* Open the pizza builder for editing a pizza */\n  const handleEditItem = () => {\n    props.initializePizzaBuilder(props.pizza, props.quantity, props.itemId);\n  };\n\n  /* Change the quantity of an item in redux store */\n  const handleChangeItemQuantity = (event) => {\n    props.changeItemQuantity(\n      props.cartId,\n      props.itemId,\n      props.pizza,\n      parseInt(event.target.value)\n    );\n  };\n\n  /* Remove item from cart */\n  const handleRemoveItem = () => {\n    props.removeItem(props.cartId, props.itemId, props.pizza);\n  };\n\n  let remove = null;\n  if (!props.checkout) {\n    remove = (\n      <span className='link' onClick={handleRemoveItem}>\n        Remove\n      </span>\n    );\n  }\n\n  let overallPrice = (calculatePrice(props.pizza) * props.quantity).toFixed(2);\n\n  let cartItem = null;\n  if (\n    props.loadingCartItem &&\n    isEqual(props.itemIdBeingChanged, props.itemId)\n  ) {\n    cartItem = (\n      <div className='item__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else {\n    cartItem = (\n      <div className='item'>\n        <div className='item__pizza u-margin-right'>\n          <div className='item__preview'>\n            <PizzaPreview small pizza={props.pizza} />\n          </div>\n          <div className='item__description'>\n            <PizzaDescription\n              cart\n              pizza={props.pizza}\n              quantity={props.quantity}\n            />\n          </div>\n        </div>\n        <div className='item__details'>\n          <div className='item__price'>${overallPrice}</div>\n          <div className='item__quantity'>\n            <Dropdown\n              onChange={handleChangeItemQuantity}\n              options={quantityOptions}\n              value={props.quantity}\n            />\n          </div>\n          <div className='item__actions'>\n            <span className='item__edit link' onClick={handleEditItem}>\n              Edit\n            </span>\n            {remove}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return cartItem;\n};\n\nCartItem.propTypes = {\n  cartId: PropTypes.string,\n  itemIdBeingChanged: PropTypes.string,\n  loadingCartItem: PropTypes.bool,\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  checkout: PropTypes.bool,\n};\n\nexport default CartItem;\n","import React from 'react';\nimport CartItem from '../../components/CartItem/CartItem';\nimport PropTypes from 'prop-types';\n\n/* All cart items to display in cart and order summary pages */\nconst CartItems = (props) => {\n  return props.items.map((item) => {\n    return (\n      <CartItem\n        key={item._id}\n        itemId={item._id}\n        pizza={item.pizza}\n        quantity={item.quantity}\n        changeItemQuantity={props.changeItemQuantity}\n        removeItem={props.removeItem}\n        initializePizzaBuilder={props.initializePizzaBuilder}\n        checkout={props.checkout}\n        loadingCartItem={props.loadingCartItem}\n        itemIdBeingChanged={props.itemIdBeingChanged}\n        cartId={props.cartId}\n      />\n    );\n  });\n};\n\nCartItems.propTypes = {\n  cartId: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n};\n\nexport default CartItems;\n","import React from 'react';\nimport CartItems from '../../components/CartItems/CartItems';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { SyncLoader } from 'react-spinners';\nimport { calculateSubTotal } from '../../shared/util';\nimport PropTypes from 'prop-types';\n\n/* Shopping cart with all added cart items */\nconst Cart = (props) => {\n  const subTotal = calculateSubTotal(props.items);\n\n  let cart = null;\n  if (props.loadingCart) {\n    cart = (\n      <div className='item-list__empty'>\n        <SyncLoader />\n      </div>\n    );\n  } else if (props.items.length > 0) {\n    cart = (\n      <React.Fragment>\n        <CartItems\n          initializePizzaBuilder={props.initializePizzaBuilder}\n          removeItem={props.removeItem}\n          changeItemQuantity={props.changeItemQuantity}\n          items={props.items}\n          loadingCartItem={props.loadingCartItem}\n          itemIdBeingChanged={props.itemIdBeingChanged}\n          cartId={props.cartId}\n        />\n        <div className='item-list__bottom'>\n          <div className='totals'>\n            <div className='totals__line-items'>\n              <div className='totals__line-item'>\n                <h3>Subtotal:</h3> <h3>${subTotal}</h3>\n              </div>\n            </div>\n\n            <Link\n              to={{\n                pathname: props.userId ? '/checkout/order-type' : '/signin',\n                fromCheckout: true,\n              }}\n            >\n              <Button type={primary}>Checkout</Button>\n            </Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    const emptyCartMessage = <h2>Your cart is empty!</h2>;\n    const errorMessage = <h2>Unable to retrieve your cart!</h2>;\n\n    let message = null;\n    if (props.signInError || props.signUpError) {\n      message = errorMessage;\n    } else {\n      message = emptyCartMessage;\n    }\n    cart = <div className='item-list__empty'>{message}</div>;\n  }\n\n  return (\n    <div className='item-list-container'>\n      <div className='item-list'>\n        <h1 className='item-list__title'>Shopping Cart</h1>\n        {cart}\n      </div>\n    </div>\n  );\n};\n\nCart.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool.isRequired,\n  loadingCartItem: PropTypes.bool.isRequired,\n  itemIdBeingChanged: PropTypes.string,\n  userId: PropTypes.string,\n  cartId: PropTypes.string,\n  signInError: PropTypes.string,\n  signUpError: PropTypes.string,\n};\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport {\n  changeItemQuantity,\n  removeItem,\n} from '../store/cart/cartActions/cartActions';\nimport PropTypes from 'prop-types';\nimport Cart from '../components/Cart/Cart';\n\n/* Shopping cart container with all added cart items */\nclass CartContainer extends Component {\n  render() {\n    return <Cart {...this.props} />;\n  }\n}\n\nCartContainer.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool.isRequired,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  userId: PropTypes.string,\n  cartId: PropTypes.string,\n  signInError: PropTypes.string,\n  signUpError: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  loadingCart: state.cart.loadingCart,\n  loadingCartItem: state.cart.loadingCartItem,\n  itemIdBeingChanged: state.cart.itemIdBeingChanged,\n  userId: state.auth.userId,\n  cartId: state.cart.cartId,\n  signInError: state.auth.signInError,\n  signUpError: state.auth.signUpError,\n});\n\nexport default connect(mapStateToProps, {\n  initializePizzaBuilder,\n  changeItemQuantity,\n  removeItem,\n})(CartContainer);\n","import * as actionTypes from '../checkoutActionTypes';\nimport axios from '../../../shared/axiosAPI';\nimport axiosGeolocation from 'axios';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\n\n/* To set loading in UI when starting to submit order */\nexport const submitOrderStart = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_START,\n  };\n};\n\n/* Submit an order for a user */\nexport const submitOrder = (total, items, deliveryAddress, cartId) => {\n  return (dispatch) => {\n    dispatch(submitOrderStart());\n    let order = {\n      orderDate: new Date(),\n      total: total,\n    };\n\n    if (deliveryAddress) {\n      order = { ...order, deliveryAddress: deliveryAddress };\n    }\n    axios\n      .post('/orders', order)\n      .then((res) => {\n        dispatch({\n          type: actionTypes.SUBMIT_ORDER_SUCCESS,\n          order: res.data.order,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.SUBMIT_ORDER));\n        dispatch(submitOrderFailed());\n      });\n  };\n};\n\n/* Stop loading in UI when submitting order failed */\nexport const submitOrderFailed = () => {\n  return {\n    type: actionTypes.SUBMIT_ORDER_FAILED,\n  };\n};\n\nexport const clearDeliveryAddress = () => {\n  return {\n    type: actionTypes.CLEAR_DELIVERY_ADDRESS,\n  };\n};\n/* Reset all address validation properties */\nexport const validateDeliveryAddressReset = () => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_RESET,\n  };\n};\n\nexport const validateDeliveryAddressStart = () => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_START,\n  };\n};\n\n/* Call smarty streets geolocation api to validate delivery address */\nexport const validateDeliveryAddress = (addressForm) => {\n  return (dispatch) => {\n    let params = {\n      key: process.env.REACT_APP_SMARTY_STREETS_KEY,\n      street: addressForm.street.value,\n      secondary: addressForm.unit.value,\n      city: addressForm.city.value,\n      state: addressForm.state.value,\n      zipcode: addressForm.zipcode.value,\n      candidates: 1,\n    };\n\n    axiosGeolocation\n      .get(process.env.REACT_APP_SMARTY_STREETS_BASE_URL, {\n        params: params,\n      })\n      .then((res) => {\n        const matchCode = res.data[0].analysis.dpv_match_code;\n        if (matchCode === 'Y') {\n          dispatch({\n            type: actionTypes.VALIDATE_DELIVERY_ADDRESS_SUCCESS,\n            deliveryAddress: {\n              streetAddress: addressForm.street.value,\n              secondaryAddress: addressForm.unit.value,\n              city: addressForm.city.value,\n              state: addressForm.state.value,\n              zipcode: addressForm.zipcode.value,\n            },\n          });\n        } else if (matchCode === 'S' || matchCode === 'D') {\n          dispatch(\n            validateDeliveryAddressFailed(\n              'Missing or incorrect secondary address (apt/unit)'\n            )\n          );\n        } else {\n          dispatch(\n            validateDeliveryAddressFailed('The address you entered is invalid')\n          );\n        }\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.VALIDATE_DELIVERY_ADDRESS));\n        dispatch(validateDeliveryAddressFailed());\n      });\n  };\n};\n\nexport const validateDeliveryAddressFailed = (error) => {\n  return {\n    type: actionTypes.VALIDATE_DELIVERY_ADDRESS_FAILED,\n    error: error,\n  };\n};\n\n/* To finish loading in UI after getting orders failed */\nconst getOrdersFailed = () => {\n  return {\n    type: actionTypes.GET_ORDERS_FAILED,\n  };\n};\n\n/* Get all past orders for a particular user */\nexport const getOrders = () => {\n  return (dispatch) => {\n    return axios\n      .get('/orders')\n      .then((res) => {\n        dispatch({\n          type: actionTypes.GET_ORDERS_SUCCESS,\n          orders: res.data.orders,\n        });\n      })\n      .catch(() => {\n        dispatch(setErroredAction(actionErrors.GET_ORDERS));\n        dispatch(getOrdersFailed());\n      });\n  };\n};\n","import * as actionTypes from '../authActionTypes';\nimport {\n  signOutCart,\n  getCartFromLocalStorage,\n  getCart,\n} from '../../cart/cartActions/cartActions';\nimport { getOrders } from '../../checkout/checkoutActions/checkoutActions';\nimport axios from '../../../shared/axiosAPI';\nimport { setErroredAction } from '../../ui/uiActions/uiActions';\nimport * as actionErrors from '../../../shared/actionErrors';\nimport { getOrCreateLocalCart } from '../../../shared/util';\n\n/* To show loading in UI when authentication action has started */\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\n/* Reset auth error after unmounting an auth component */\nexport const authReset = () => {\n  return {\n    type: actionTypes.AUTH_RESET,\n  };\n};\n\n/* Failed to initialize app */\nexport const authTokenFailed = () => {\n  return {\n    type: actionTypes.AUTH_TOKEN_FAILED,\n  };\n};\n\n/* Successfully authenticated user and received token/userid */\nexport const authSuccess = (authData) => {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.AUTH_SUCCESS, userId: authData.user._id });\n\n    //Get cart for this user\n    dispatch(getCart());\n\n    //Set automatic sign out\n    dispatch(checkAuthTimeout(authData.expires));\n\n    //Get orders for this user\n    dispatch(getOrders(authData.user._id));\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signInFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_IN_FAILED,\n    error: error,\n  };\n};\n\n/* Set error to be displayed in UI when authentication has failed */\nexport const signUpFailed = (error) => {\n  return {\n    type: actionTypes.SIGN_UP_FAILED,\n    error: error,\n  };\n};\n\n/* Clear user data and cart on sign out */\nexport const signOut = () => {\n  return (dispatch) => {\n    return axios.post('/auth/signout', {}).then(() => {\n      dispatch(signOutCart());\n\n      dispatch({\n        type: actionTypes.AUTH_SIGNOUT,\n      });\n    });\n  };\n};\n\n/* Sign out user when expiration time has been reached */\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    //Calculate time to expire based on exact time of expiration\n    let timeToExpire = expirationTime - new Date().getTime();\n\n    //Dispatch sign out action in time to expire\n    setTimeout(() => {\n      dispatch(signOut());\n    }, timeToExpire);\n  };\n};\n\n/* Sign in user with email/password.\n   Also get user's cart and orders once successfully signed in */\nexport const signIn = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n    };\n    return axios\n      .post('/auth/signin', authData)\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionErrors.SIGN_IN));\n        if (err.response) {\n          dispatch(signInFailed(err.response.data.error));\n        } else {\n          dispatch(signInFailed(null));\n        }\n      });\n  };\n};\n\n/* Sign up user with email/password */\nexport const signUp = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n    };\n    return axios\n      .post('/auth/signup', authData)\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(setErroredAction(actionErrors.SIGN_UP));\n        if (err.response) {\n          dispatch(signUpFailed(err.response.data.error));\n        } else {\n          dispatch(signUpFailed(null));\n        }\n      });\n  };\n};\n\n/* Initialize application upon app load */\nexport const authenticateToken = () => {\n  return (dispatch) => {\n    getOrCreateLocalCart();\n\n    dispatch(authStart());\n\n    return axios\n      .get('/auth/me')\n      .then((res) => {\n        //Successful authentication, get user's data here\n        dispatch(authSuccess(res.data));\n      })\n      .catch(() => {\n        //If an error with api, then get cart from secure local storage\n        dispatch(getCartFromLocalStorage());\n        dispatch(authTokenFailed());\n        dispatch(setErroredAction(actionErrors.AUTH_TOKEN));\n      });\n  };\n};\n","import React from 'react';\nimport './Input.scss';\nimport Dropdown from '../Dropdown/Dropdown';\nimport PropTypes from 'prop-types';\n\n/* Standard input element to be included in forms */\nconst Input = (props) => {\n  let inputElement = null;\n  const inputClasses = ['input__element'];\n  let validationError = null;\n  if (\n    props.invalid &&\n    props.shouldValidate &&\n    props.touched &&\n    props.formSubmitted\n  ) {\n    inputClasses.push('input__invalid');\n    validationError = (\n      <p className='input__error-message'>{props.errorMessage}</p>\n    );\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <Dropdown\n          size={props.elementConfig.size}\n          options={props.elementConfig.options}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      );\n  }\n  return (\n    <div className='input'>\n      <label>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  invalid: PropTypes.bool.isRequired,\n  shouldValidate: PropTypes.object.isRequired,\n  touched: PropTypes.bool,\n  formSubmitted: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  elementConfig: PropTypes.object.isRequired,\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  elementType: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","/* Form validation helper functions */\n\nconst formatPhoneNumber = (digits) => {\n  const cleaned = digits.replace(/\\D/g, '');\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    return `( ${match[1]} ) ${match[2]} - ${match[3]}`;\n  }\n  return digits;\n};\n\nexport const handleInputChange = (form, event, inputId) => {\n  const updatedForm = {\n    ...form,\n  };\n\n  const updatedFormElement = {\n    ...updatedForm[inputId],\n  };\n\n  let trimmedValue = event.target.value.trim();\n\n  if (updatedFormElement.elementType === 'phonenumber') {\n    updatedFormElement.value = formatPhoneNumber(trimmedValue);\n  } else {\n    updatedFormElement.value = trimmedValue;\n  }\n  updatedFormElement.valid = checkValidity(\n    updatedFormElement.value,\n    updatedFormElement.validation\n  );\n  updatedFormElement.touched = true;\n  updatedForm[inputId] = updatedFormElement;\n\n  let formIsValid = true;\n  for (let inputId in updatedForm) {\n    formIsValid = updatedForm[inputId].valid && formIsValid;\n  }\n  return { form: updatedForm, formIsValid: formIsValid };\n};\n\nconst checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d*$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isPhoneNumber) {\n    const pattern = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","import React from 'react';\nimport Button, { primary } from '../Button/Button';\nimport Input from '../Input/Input';\nimport { handleInputChange } from '../../../shared/formValidation.js';\nimport PropTypes from 'prop-types';\n\n/* Standard form component across entire app */\nconst Form = (props) => {\n  const handleChange = (event, inputId) => {\n    const updatedFormData = handleInputChange(props.form, event, inputId);\n    props.updateForm({\n      form: updatedFormData.form,\n      formIsValid: updatedFormData.formIsValid,\n    });\n  };\n\n  const formElementsArray = [];\n  for (let key in props.form) {\n    formElementsArray.push({\n      id: key,\n      config: props.form[key],\n    });\n  }\n\n  let form = null;\n  form = (\n    <React.Fragment>\n      {formElementsArray.map((formElement) => {\n        return (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            shouldValidate={formElement.config.validation}\n            invalid={!formElement.config.valid}\n            touched={formElement.config.touched}\n            formSubmitted={props.formSubmitted}\n            errorMessage={formElement.config.errorMessage}\n            onChange={(e) => handleChange(e, formElement.id)}\n          />\n        );\n      })}\n      <div className='form-component__submit'>\n        <Button\n          type={primary}\n          disabled={props.formSubmitted && !props.formIsValid}\n        >\n          Submit\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <form className='form-component__form' onSubmit={props.onSubmit}>\n      {form}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  form: PropTypes.object.isRequired,\n  formSubmitted: PropTypes.bool.isRequired,\n  formIsValid: PropTypes.bool.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport './SignIn.scss';\nimport Button, { secondary } from '../../components/UI/Button/Button';\nimport { SyncLoader } from 'react-spinners';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Sign in form */\nconst SignIn = (props) => {\n  let form = (\n    <Form\n      {...props}\n      onSubmit={props.handleSubmit}\n      updateForm={props.updateForm}\n    />\n  );\n  if (props.loadingUser) {\n    form = (\n      <div className='spinner'>\n        <SyncLoader />\n      </div>\n    );\n  }\n\n  let errorMessage = null;\n  if (props.error) {\n    errorMessage = (\n      <div className='form-component__error'>\n        <p>{props.error}</p>\n      </div>\n    );\n  }\n\n  let redirect = null;\n  if (props.isAuthenticated) {\n    if (props.location.fromCheckout) {\n      redirect = <Redirect to='/checkout/order-type' />;\n    } else {\n      redirect = <Redirect to='/' />;\n    }\n  }\n\n  return (\n    <div className='form-container'>\n      <div className='form-component'>\n        <h3 className='form-component__title'>\n          Please sign in to your account\n        </h3>\n        {redirect}\n        {errorMessage}\n        {form}\n        <div className='signup'>\n          <Link\n            to={{\n              pathname: '/signup',\n              fromCheckout: props.location.fromCheckout,\n            }}\n          >\n            <Button type={secondary}>Sign Up</Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.string,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default SignIn;\n","import React, { Component } from 'react';\nimport { signIn, authReset } from '../../store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SignIn from '../../components/SignIn/SignIn';\n\n/* Sign in form container */\nclass SignInContainer extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signIn(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  componentWillUnmount() {\n    if (this.props.error) {\n      this.props.authReset();\n    }\n  }\n\n  render() {\n    return (\n      <SignIn\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nSignInContainer.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.string,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingUser: state.auth.loadingUser,\n  error: state.auth.signInError,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { signIn, authReset })(SignInContainer);\n","import React, { Component } from 'react';\nimport { signOut } from '../../store/auth/authActions/authActions';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n/* Signs current user out */\nclass SignOutContainer extends Component {\n  componentDidMount() {\n    this.props.signOut();\n  }\n\n  render() {\n    return (\n      <Redirect\n        to={{\n          pathname: '/',\n          fromSignOut: true,\n        }}\n      />\n    );\n  }\n}\n\nexport default connect(null, { signOut })(SignOutContainer);\n","import React from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport PropTypes from 'prop-types';\n\n/* User sign up form */\nconst SignUp = (props) => {\n  let form = (\n    <Form\n      {...props}\n      onSubmit={props.handleSubmit}\n      updateForm={props.updateForm}\n    />\n  );\n  if (props.loadingUser) {\n    form = (\n      <div className='spinner'>\n        <SyncLoader />\n      </div>\n    );\n  }\n\n  let errorMessage = null;\n  if (props.error) {\n    errorMessage = (\n      <div className='form-component__error'>\n        <p>\n          {props.error === 'Duplicate field value entered'\n            ? 'The email you entered is already taken'\n            : props.error}\n        </p>\n      </div>\n    );\n  }\n\n  let redirect = null;\n  if (props.isAuthenticated) {\n    if (props.location.fromCheckout) {\n      redirect = (\n        <Redirect\n          to={{ pathname: '/checkout/order-type', fromSignUp: 'true' }}\n        />\n      );\n    } else {\n      redirect = <Redirect to={{ pathname: '/', fromSignUp: 'true' }} />;\n    }\n  }\n\n  return (\n    <div className='form-container'>\n      <div className='form-component'>\n        <h3 className='form-component__title'>Sign up for an account</h3>\n        {redirect}\n        {errorMessage}\n        {form}\n      </div>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.string,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport { signUp, authReset } from '../../store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SignUp from '../../components/SignUp/SignUp';\n\n/* User sign up form */\nclass SignUpContainer extends Component {\n  state = {\n    form: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Email',\n        },\n        value: '',\n        errorMessage: 'Please enter a valid email address',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '',\n        errorMessage: 'Password has to be at least 6 characters long',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.signUp(\n        this.state.form.email.value,\n        this.state.form.password.value\n      );\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  componentWillUnmount() {\n    this.props.authReset();\n  }\n\n  render() {\n    return (\n      <SignUp\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nSignUpContainer.propTypes = {\n  loadingUser: PropTypes.bool,\n  error: PropTypes.string,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingUser: state.auth.loadingUser,\n  error: state.auth.signUpError,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { signUp, authReset })(SignUpContainer);\n","import React, { Component } from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { withRouter } from 'react-router-dom';\nimport Form from '../../components/UI/Form/Form';\nimport PropTypes from 'prop-types';\n\n/* Delivery address form */\nclass AddressForm extends Component {\n  constructor(props) {\n    super(props);\n    this.props.validateDeliveryAddressReset();\n  }\n\n  componentDidUpdate() {\n    if (this.props.addressValid) {\n      this.props.history.push('/checkout');\n    }\n  }\n\n  render() {\n    let errorMessage = null;\n    let form = null;\n    if (this.props.loading) {\n      form = (\n        <div className='spinner'>\n          <SyncLoader />\n        </div>\n      );\n    } else {\n      form = (\n        <Form\n          {...this.props}\n          onSubmit={this.props.handleSubmit}\n          updateForm={this.props.updateForm}\n        />\n      );\n    }\n\n    if (this.props.error) {\n      errorMessage = (\n        <div className='form-component__error'>\n          <p>{this.props.error}</p>\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <h4 className='form-component__title'>\n          Please enter your delivery address\n        </h4>\n        {errorMessage}\n        {form}\n      </React.Fragment>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.string,\n  addressValid: PropTypes.bool,\n};\n\nexport default withRouter(AddressForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddressForm from '../components/AddressForm/AddressForm';\nimport {\n  validateDeliveryAddress,\n  validateDeliveryAddressReset,\n} from '../store/checkout/checkoutActions/checkoutActions.js';\nimport withErrorHandler from '../hoc/withErrorHandler';\nimport axios from 'axios';\n\nclass AddressFormContainer extends Component {\n  state = {\n    form: {\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Street Address',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      unit: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'Apt/Unit #',\n        },\n        validation: {\n          isNumeric: true,\n        },\n        errorMessage: 'Please enter only the Apt/Unit number',\n        value: '',\n        valid: true,\n      },\n      city: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'City',\n        },\n        value: '',\n        validation: {\n          hasLength: 2,\n          required: true,\n        },\n        valid: false,\n      },\n      state: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'State',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n      zipcode: {\n        elementType: 'input',\n        elementConfig: {\n          placeholder: 'ZIP Code',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n      },\n    },\n    formIsValid: false,\n    formSubmitted: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ formSubmitted: true });\n    if (this.state.formIsValid) {\n      this.props.validateDeliveryAddress(this.state.form);\n    }\n  };\n\n  updateForm = (stateUpdate) => {\n    this.setState(stateUpdate);\n  };\n\n  render() {\n    return (\n      <AddressForm\n        {...this.state}\n        {...this.props}\n        handleSubmit={this.handleSubmit}\n        updateForm={this.updateForm}\n      />\n    );\n  }\n}\n\nAddressFormContainer.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.string,\n  addressValid: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  addressValid: state.checkout.addressValid,\n  error: state.checkout.addressValidationError,\n  loading: state.checkout.validatingAddress,\n});\n\nexport default connect(mapStateToProps, {\n  validateDeliveryAddress,\n  validateDeliveryAddressReset,\n})(withErrorHandler(AddressFormContainer, axios));\n","import React, { Component } from 'react';\nimport './OrderType.scss';\nimport { MdDirectionsCar, MdStore } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport AddressFormContainer from '../../containers/AddressFormContainer';\nimport Message from '../../components/UI/Message/Message';\nimport SignedUpMessage from '../../components/Messages/SignedUpMessage/SignedUpMessage';\nimport PropTypes from 'prop-types';\nimport { clearDeliveryAddress } from '../../store/checkout/checkoutActions/checkoutActions';\n\n/* Options for choosing either carryout or delivery order */\nclass OrderType extends Component {\n  state = {\n    isDelivery: false,\n  };\n\n  handleClick = (event) => {\n    if (event.currentTarget.dataset.type === 'Delivery') {\n      this.setState({ isDelivery: true });\n    } else {\n      this.props.clearDeliveryAddress();\n      this.props.history.push('/checkout');\n    }\n  };\n\n  render() {\n    let message = null;\n    if (this.props.location.fromSignUp) {\n      message = (\n        <Message>\n          <SignedUpMessage />\n        </Message>\n      );\n    }\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/signin',\n            fromCheckout: true,\n          }}\n        />\n      );\n    }\n\n    let form = null;\n\n    if (this.state.isDelivery) {\n      form = <AddressFormContainer />;\n    }\n\n    let orderTypeClassNames = ['order-type'];\n    let deliveryClassNames = ['order-type__type'];\n    let iconClassNames = ['order-type__icon'];\n    if (this.state.isDelivery) {\n      orderTypeClassNames.push('order-type--extended');\n      deliveryClassNames.push('order-type__type--selected');\n      iconClassNames.push('order-type__icon--selected');\n    }\n\n    return (\n      <React.Fragment>\n        {message}\n        <div className='form-container'>\n          <div className='form-component'>\n            <h4 className='form-component__title'>\n              Please choose an order method\n            </h4>\n            <div className={orderTypeClassNames.join(' ')}>\n              <div\n                onClick={this.handleClick}\n                data-type='Delivery'\n                className={deliveryClassNames.join(' ')}\n              >\n                <div className={iconClassNames.join(' ')}>\n                  <MdDirectionsCar />\n                </div>\n                <span className='order-type__description'>Delivery</span>\n              </div>\n              <div\n                onClick={this.handleClick}\n                data-type='Carryout'\n                className='order-type__type'\n              >\n                <div className='order-type__icon'>\n                  <MdStore />\n                </div>\n                <span className='order-type__description'>Carryout</span>\n              </div>\n            </div>\n            {form}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nOrderType.propTypes = {\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { clearDeliveryAddress })(OrderType);\n","import React from 'react';\nimport './DeliveryAddress.scss';\nimport PropTypes from 'prop-types';\n\n/* Displays delivery address in the correct format */\nconst DeliveryAddress = (props) => {\n  let secondaryAddress = null;\n  if (props.deliveryAddress.secondaryAddress) {\n    secondaryAddress = (\n      <h4> Apt/Unit #{props.deliveryAddress.secondaryAddress}</h4>\n    );\n  }\n  return (\n    <div className='address-container'>\n      <h2>Delivery Address:</h2>\n      <div className='address'>\n        <h4>{props.deliveryAddress.streetAddress}</h4>\n        {secondaryAddress}\n        <h4>\n          {props.deliveryAddress.city}, {props.deliveryAddress.state}{' '}\n          {props.deliveryAddress.zipcode}\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nDeliveryAddress.propTypes = {\n  deliveryAddress: PropTypes.objectOf(PropTypes.string),\n};\n\nexport default DeliveryAddress;\n","import React, { Component } from 'react';\nimport './Checkout.scss';\nimport CartItems from '../../components/CartItems/CartItems';\nimport Button, { primary } from '../../components/UI/Button/Button';\nimport { calculateSubTotal, calculateTax } from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport DeliveryAddress from '../../components/DeliveryAddress/DeliveryAddress';\nimport PropTypes from 'prop-types';\n\n/* Order summary and ability to submit an order */\nclass Checkout extends Component {\n  handleSubmitOrder = (total) => {\n    this.props.submitOrder(\n      total,\n      this.props.items,\n      this.props.deliveryAddress,\n      this.props.cartId\n    );\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.submittingOrder &&\n      !this.props.submittingOrder &&\n      !this.props.submitOrderError\n    ) {\n      this.props.history.push({ pathname: '/', fromCheckout: true });\n      this.props.emptyCart(this.props.cartId);\n    }\n  }\n\n  render() {\n    const subTotal = calculateSubTotal(this.props.items);\n    const tax = calculateTax(subTotal);\n    const total = (+subTotal + +tax).toFixed(2);\n    let deliveryAddress = null;\n    if (this.props.deliveryAddress) {\n      deliveryAddress = (\n        <DeliveryAddress deliveryAddress={this.props.deliveryAddress} />\n      );\n    }\n\n    let submitOrder = null;\n    if (this.props.submittingOrder) {\n      submitOrder = (\n        <Button type={primary}>\n          <SyncLoader color='white' size='10px' />\n        </Button>\n      );\n    } else {\n      submitOrder = (\n        <Button onClick={() => this.handleSubmitOrder(total)} type={primary}>\n          Place Order\n        </Button>\n      );\n    }\n\n    let cart = null;\n    if (this.props.loadingCart) {\n      cart = (\n        <div className='item-list__empty'>\n          <SyncLoader />\n        </div>\n      );\n    } else if (Object.keys(this.props.items).length > 0) {\n      cart = (\n        <React.Fragment>\n          <CartItems\n            initializePizzaBuilder={this.props.initializePizzaBuilder}\n            removeItem={this.props.removeItem}\n            changeItemQuantity={this.props.changeItemQuantity}\n            checkout\n            items={this.props.items}\n            loadingCartItem={this.props.loadingCartItem}\n            itemIdBeingChanged={this.props.itemIdBeingChanged}\n            cartId={this.props.cartId}\n          />\n          <div className='item-list__bottom'>\n            <div className='delivery-address'>{deliveryAddress}</div>\n            <div className='totals'>\n              <div className='totals__line-items'>\n                <div className='totals__line-item'>\n                  <h4>Subtotal:</h4> <h4>${subTotal}</h4>\n                </div>\n                <div className='totals__line-item'>\n                  <h4>Tax:</h4> <h4>${tax}</h4>\n                </div>\n                <div className='totals__line-item'>\n                  <h2>Total:</h2> <h2>${total}</h2>\n                </div>\n              </div>\n\n              {submitOrder}\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      cart = (\n        <div className='item-list__empty'>\n          <h2>Your cart is empty!</h2>\n        </div>\n      );\n    }\n\n    return (\n      <div className='item-list-container'>\n        <div className='item-list'>\n          <h1 className='item-list__title'>Checkout</h1>\n          {cart}\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  items: PropTypes.array.isRequired,\n  loadingCart: PropTypes.bool,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  submitOrderError: PropTypes.bool,\n  submittingOrder: PropTypes.bool,\n  deliveryAddress: PropTypes.object,\n};\n\nexport default Checkout;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { submitOrder } from '../store/checkout/checkoutActions/checkoutActions';\nimport {\n  emptyCart,\n  changeItemQuantity,\n  removeItem,\n} from '../store/cart/cartActions/cartActions';\nimport { initializePizzaBuilder } from '../store/pizzaBuilder/pizzaBuilderActions/pizzaBuilderActions';\nimport PropTypes from 'prop-types';\nimport Checkout from '../components/Checkout/Checkout';\n\n/* Container for order summary and ability to submit an order */\nconst CheckoutContainer = (props) => {\n  return <Checkout {...props} />;\n};\n\nCheckoutContainer.propTypes = {\n  items: PropTypes.array.isRequired,\n  cartId: PropTypes.string,\n  loadingCart: PropTypes.bool,\n  loadingCartItem: PropTypes.bool,\n  itemIdBeingChanged: PropTypes.string,\n  submitOrderError: PropTypes.bool,\n  submittingOrder: PropTypes.bool,\n  deliveryAddress: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.cart.items,\n  cartId: state.cart.cartId,\n  loadingCart: state.cart.loadingCart,\n  loadingCartItem: state.cart.loadingCartItem,\n  itemIdBeingChanged: state.cart.itemIdBeingChanged,\n  submittingOrder: state.checkout.submittingOrder,\n  deliveryAddress: state.checkout.deliveryAddress,\n  submitOrderError: state.checkout.submitOrderError,\n});\n\nexport default connect(mapStateToProps, {\n  submitOrder,\n  emptyCart,\n  removeItem,\n  initializePizzaBuilder,\n  changeItemQuantity,\n})(CheckoutContainer);\n","import React from 'react';\nimport './Sidebar.scss';\nimport PizzaMenuItems from '../../components/PizzaMenuItems/PizzaMenuItems';\nimport AccountMenuItems from '../../components/AccountMenuItems/AccountMenuItems';\nimport NavigationItem from '../../components/UI/NavigationItem/NavigationItem';\nimport PropTypes from 'prop-types';\n\n/* Sidebar menu with pizza menu items and account menu items */\nconst Sidebar = (props) => {\n  const handleClickMenuItem = () => {\n    props.closeSidebar();\n  };\n\n  let sidebarContainerClassNames = ['sidebar-container'];\n  let sidebarClassNames = ['sidebar'];\n  if (!props.sidebarOpen) {\n    sidebarClassNames.push('sidebar--closed');\n    sidebarContainerClassNames.push('sidebar-container--closed');\n  }\n\n  return (\n    <div\n      onClick={handleClickMenuItem}\n      className={sidebarContainerClassNames.join(' ')}\n    >\n      <div className={sidebarClassNames.join(' ')}>\n        <div className='sidebar__menu-items'>\n          <PizzaMenuItems vertical />\n        </div>\n        <div className='sidebar__account'>\n          <NavigationItem vertical to='/cart'>\n            Cart\n          </NavigationItem>\n          <AccountMenuItems vertical isAuthenticated={props.isAuthenticated} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeSidebar } from '../store/ui/uiActions/uiActions';\nimport PropTypes from 'prop-types';\nimport Sidebar from '../components/Sidebar/Sidebar';\n\n/* Container for sidebar menu with pizza menu items and account menu items */\nconst SidebarContainer = (props) => {\n  return <Sidebar {...props} />;\n};\n\nSidebarContainer.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired,\n  isAuthenticated: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  sidebarOpen: state.ui.sidebarOpen,\n  isAuthenticated: state.auth.userId,\n});\n\nexport default connect(mapStateToProps, { closeSidebar })(SidebarContainer);\n","import React from 'react';\nimport PizzaPreview from '../PizzaPreview/PizzaPreview';\nimport PizzaDescription from '../PizzaDescription/PizzaDescription';\nimport PropTypes from 'prop-types';\n\n/* Represents a single submitted order */\nconst Order = (props) => {\n  return (\n    <div className='item item--order'>\n      <div className='item__pizza'>\n        <div className='item__preview'>\n          <PizzaPreview small pizza={props.pizza} />\n        </div>\n        <div className='item__description'>\n          <PizzaDescription\n            order\n            quantity={props.quantity}\n            pizza={props.pizza}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOrder.propTypes = {\n  pizza: PropTypes.object.isRequired,\n  quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n};\n\nexport default Order;\n","import React from 'react';\nimport './Orders.scss';\nimport Order from '../../components/Order/Order';\nimport { getReadableDate } from '../../shared/util';\nimport { SyncLoader } from 'react-spinners';\nimport DeliveryAddress from '../../components/DeliveryAddress/DeliveryAddress';\nimport PropTypes from 'prop-types';\n\n/* List of all submitted orders */\nconst Orders = (props) => {\n  let orders = null;\n  if (\n    !props.userId ||\n    props.loadingOrders ||\n    props.getOrdersError ||\n    Object.entries(props.orders).length === 0\n  ) {\n    let ordersContent = null;\n    if (props.loadingOrders) {\n      ordersContent = <SyncLoader />;\n    } else if (!props.userId) {\n      ordersContent = <h2>Sign in to see your orders!</h2>;\n    } else if (props.getOrdersError) {\n      ordersContent = <h2>Unable to retrieve your orders!</h2>;\n    } else {\n      ordersContent = <h2>You have no orders yet!</h2>;\n    }\n\n    orders = (\n      <div className='item-list-container'>\n        <div className='item-list'>\n          <div className='item-list__title'>\n            <h1>Orders</h1>\n          </div>\n          <div className='item-list__empty'>{ordersContent}</div>\n        </div>\n      </div>\n    );\n  } else {\n    orders = (\n      <React.Fragment>\n        {props.orders.reverse().map((order) => {\n          let orderType = null;\n\n          if (order.deliveryAddress) {\n            orderType = (\n              <DeliveryAddress deliveryAddress={order.deliveryAddress} />\n            );\n          } else {\n            orderType = <h2>Carryout Order</h2>;\n          }\n          return (\n            <div key={order._id} className='item-list-container'>\n              <div className='item-list item-list--order'>\n                <div className='item-list__title'>\n                  <span className='order__date-address'>\n                    <span className='order__date'>\n                      <h2>Order placed on:&nbsp;</h2>\n                      <h3> {getReadableDate(order.orderDate)}</h3>\n                    </span>\n                    {orderType}\n                  </span>\n\n                  <span className='order__total'>\n                    <h2>Total:&nbsp;</h2>\n                    <h3>${order.total}</h3>\n                  </span>\n                </div>\n\n                {Object.entries(order.items).map(([itemId, item]) => {\n                  return (\n                    <Order\n                      key={itemId}\n                      quantity={item.quantity}\n                      pizza={item.pizza}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  return orders;\n};\n\nOrders.propTypes = {\n  userId: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n  loadingOrders: PropTypes.bool.isRequired,\n  getOrdersError: PropTypes.bool,\n};\n\nexport default Orders;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Orders from '../components/Orders/Orders';\n\n/* Container for showing a list of all submitted orders */\nconst OrdersContainer = (props) => {\n  return <Orders {...props} />;\n};\n\nOrdersContainer.propTypes = {\n  userId: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n  loadingOrders: PropTypes.bool.isRequired,\n  getOrdersError: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userId,\n  orders: state.checkout.orders,\n  loadingOrders: state.checkout.loadingOrders,\n  getOrdersError: state.checkout.getOrdersError,\n});\n\nexport default connect(mapStateToProps, null)(OrdersContainer);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Layout from './components/Layout/Layout/Layout';\nimport Home from './components/PizzaCategories/Home/Home';\nimport Meats from './components/PizzaCategories/Meats/Meats';\nimport Veggies from './components/PizzaCategories/Veggies/Veggies';\nimport Chicken from './components/PizzaCategories/Chicken/Chicken';\nimport PizzaBuilderContainer from './containers/PizzaBuilderContainer';\nimport { Route, Switch } from 'react-router-dom';\nimport CartContainer from './containers/CartContainer';\nimport SignInContainer from './containers/Auth/SignInContainer';\nimport SignOutContainer from './containers/Auth/SignOutContainer';\nimport SignUpContainer from './containers/Auth/SignUpContainer';\nimport { authenticateToken } from './store/auth/authActions/authActions';\nimport { connect } from 'react-redux';\nimport OrderType from './components/OrderType/OrderType';\nimport CheckoutContainer from './containers/CheckoutContainer';\nimport SidebarContainer from './containers/SidebarContainer';\nimport OrdersContainer from './containers/OrdersContainer';\n\nexport class App extends Component {\n  componentDidMount() {\n    this.props.authenticateToken();\n  }\n\n  render() {\n    return (\n      <Layout data-test='layout'>\n        <PizzaBuilderContainer data-test='pizzaBuilder' />\n        <SidebarContainer data-test='sidebar' />\n        <Switch>\n          <Route exact path='/checkout' component={CheckoutContainer} />\n          <Route path='/checkout/order-type' component={OrderType} />\n          <Route path='/signin' component={SignInContainer} />\n          <Route path='/signup' component={SignUpContainer} />\n          <Route path='/my-orders' component={OrdersContainer} />\n          <Route path='/signout' component={SignOutContainer} />\n          <Route path='/cart' component={CartContainer} />\n          <Route path='/' exact component={Home} />\n          <Route path='/meats' exact component={Meats} />\n          <Route path='/veggies' exact component={Veggies} />\n          <Route path='/chicken' exact component={Chicken} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null, { authenticateToken })(App);\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/* Scroll to top of page when it is loaded */\nconst ScrollToTop = ({ history, children }) => {\n  useEffect(() => {\n    history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n  }, [history]);\n  return children;\n};\n\nexport default withRouter(ScrollToTop);\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './hoc/ScrollToTop';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_BASE_URL}>\n    <Provider store={store}>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}